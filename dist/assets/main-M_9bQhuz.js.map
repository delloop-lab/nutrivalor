{"version":3,"mappings":"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","names":["resolveFetch","customFetch","_fetch","args","__vitePreload","fetch","browser","FunctionsError","message","name","context","FunctionsFetchError","FunctionsRelayError","FunctionsHttpError","FunctionRegion","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","reject","fulfilled","step","e","rejected","result","FunctionsClient","url","headers","region","token","functionName","options","_a","method","functionArgs","_headers","body","response","fetchError","isRelayError","responseType","data","error","getGlobal","globalObject","nodeFetch","Headers","Request","Response","PostgrestError_1","PostgrestError","__importDefault","this","mod","PostgrestBuilder_1","node_fetch_1","require$$0","require$$1","PostgrestBuilder$1","builder","onfulfilled","onrejected","res","_b","_c","count","status","statusText","countHeader","contentRange","PostgrestBuilder","PostgrestTransformBuilder_1","PostgrestTransformBuilder$1","columns","quoted","cleanedColumns","c","column","ascending","nullsFirst","foreignTable","referencedTable","key","existingOrder","from","to","keyOffset","keyLimit","signal","analyze","verbose","settings","buffers","wal","format","forMediatype","PostgrestTransformBuilder","PostgrestFilterBuilder_1","PostgrestFilterBuilder$1","pattern","patterns","values","cleanedValues","s","range","query","config","type","typePart","configPart","operator","filters","PostgrestFilterBuilder","PostgrestQueryBuilder_1","PostgrestQueryBuilder$1","schema","head","defaultToNull","prefersHeaders","acc","x","uniqueColumns","onConflict","ignoreDuplicates","PostgrestQueryBuilder","version","constants","version_1","PostgrestClient_1","constants_1","require$$2","PostgrestClient$1","PostgrestClient","relation","fn","get","_","cjs","require$$3","require$$4","require$$5","_default","index","getNativeWebSocket","WebSocket","DEFAULT_VERSION","VSN","DEFAULT_TIMEOUT","WS_CLOSE_NORMAL","SOCKET_STATES","CHANNEL_STATES","CHANNEL_EVENTS","TRANSPORTS","CONNECTION_STATE","Serializer","rawPayload","callback","buffer","view","decoder","topicSize","eventSize","offset","topic","event","Timer","timerCalc","PostgresTypes","convertChangeData","record","skipTypes","rec_key","convertColumn","columnName","colType","convertCell","noop","dataType","toArray","toBoolean","toNumber","toJson","toTimestampString","parsedValue","lastIdx","closeBrace","arr","valTrim","val","httpEndpointURL","socketUrl","Push","channel","payload","timeout","h","REALTIME_PRESENCE_LISTEN_EVENTS","RealtimePresence","opts","events","newState","onJoin","onLeave","onSync","diff","currentPresences","newPresences","leftPresences","currentState","state","transformedState","joins","leaves","presences","newPresenceRefs","curPresenceRefs","joinedPresences","joinedPresenceRefs","m","curPresences","presenceRefsToRemove","obj","func","presence","REALTIME_POSTGRES_CHANGES_LISTEN_EVENT","REALTIME_LISTEN_TYPES","REALTIME_SUBSCRIBE_STATES","RealtimeChannel","params","socket","pushEvent","reason","ref","broadcast","isPrivate","accessTokenPayload","r","postgres_changes","clientPostgresBindings","bindingsLen","newPostgresBindings","i","clientPostgresBinding","table","filter","serverPostgresFilter","endpoint_payload","push","onClose","leavePush","controller","id","_event","_ref","typeLower","close","leave","join","handledPayload","bind","_d","_e","_f","bindId","bindEvent","postgresChanges","commit_timestamp","errors","binding","obj1","obj2","k","records","Transformers.convertChangeData","WORKER_SCRIPT","RealtimeClient","endPoint","accessTokenValue","tries","code","values_1","kind","msg","realtimeTopic","exists","chan","tokenToSend","newRef","dupChannel","rawMessage","objectUrl","prefix","result_url","blob","StorageError","isStorageError","StorageApiError","StorageUnknownError","originalError","resolveResponse","recursiveToCamel","item","el","newKey","_getErrorMessage","err","handleError","Res","_getRequestParams","parameters","_handleRequest","fetcher","post","put","remove","DEFAULT_SEARCH_OPTIONS","DEFAULT_FILE_OPTIONS","StorageFileApi","bucketId","path","fileBody","fileOptions","metadata","cleanPath","_path","fromPath","toPath","expiresIn","downloadQueryParam","paths","datum","renderPath","transformationQuery","queryString","_queryString","transform","DEFAULT_HEADERS","StorageBucketApi","StorageClient","JS_ENV","DEFAULT_GLOBAL_OPTIONS","DEFAULT_DB_OPTIONS","DEFAULT_AUTH_OPTIONS","DEFAULT_REALTIME_OPTIONS","resolveHeadersConstructor","NodeFetchHeaders","fetchWithAuth","supabaseKey","getAccessToken","HeadersConstructor","input","init","accessToken","ensureTrailingSlash","applySettingDefaults","defaults","dbOptions","authOptions","realtimeOptions","globalOptions","AUTO_REFRESH_TICK_DURATION_MS","AUTO_REFRESH_TICK_THRESHOLD","EXPIRY_MARGIN_MS","GOTRUE_URL","STORAGE_KEY","API_VERSION_HEADER_NAME","API_VERSIONS","BASE64URL_REGEX","JWKS_TTL","AuthError","isAuthError","AuthApiError","isAuthApiError","AuthUnknownError","CustomAuthError","AuthSessionMissingError","isAuthSessionMissingError","AuthInvalidTokenResponseError","AuthInvalidCredentialsError","AuthImplicitGrantRedirectError","details","isAuthImplicitGrantRedirectError","AuthPKCEGrantCodeExchangeError","AuthRetryableFetchError","isAuthRetryableFetchError","AuthWeakPasswordError","reasons","AuthInvalidJwtError","TO_BASE64URL","IGNORE_BASE64URL","FROM_BASE64URL","charMap","byteToBase64URL","byte","emit","pos","byteFromBase64URL","charCode","bits","stringFromBase64URL","str","conv","utf8Emit","codepoint","utf8State","b64State","byteEmit","stringFromUTF8","codepointToUTF8","stringToUTF8","highSurrogate","leadingBit","base64UrlToUint8Array","onByte","stringToUint8Array","bytesToBase64URL","bytes","onChar","char","expiresAt","uuid","isBrowser","localStorageWriteTests","supportsLocalStorage","randomKey","parseParametersFromURL","href","looksLikeFetchResponse","maybeResponse","setItemAsync","storage","getItemAsync","removeItemAsync","Deferred","rej","decodeJWT","parts","sleep","time","accept","retryable","isRetryable","attempt","dec2hex","dec","generatePKCEVerifier","array","charSet","charSetLen","verifier","sha256","randomString","encodedData","hash","generatePKCEChallenge","hashed","getCodeChallengeAndMethod","storageKey","isPasswordRecovery","codeVerifier","storedCodeVerifier","codeChallenge","API_VERSION_REGEX","parseResponseAPIVersion","apiVersion","validateExp","exp","timeNow","getAlgorithm","alg","UUID_REGEX","validateUUID","__rest","p","NETWORK_ERROR_CODES","errorCode","responseAPIVersion","a","_request","qs","requestParams","_sessionResponse","session","hasSession","user","_sessionResponsePassword","_userResponse","_ssoResponse","_generateLinkResponse","action_link","email_otp","hashed_token","redirect_to","verification_type","rest","properties","_noResolveJsonResponse","SIGN_OUT_SCOPES","GoTrueAdminApi","jwt","scope","email","attributes","_g","pagination","users","total","links","link","page","rel","uid","shouldSoftDelete","factors","localStorageAdapter","memoryLocalStorageAdapter","store","polyfillGlobalThis","internals","LockAcquireTimeoutError","NavigatorLockAcquireTimeoutError","navigatorLock","acquireTimeout","abortController","lock","DEFAULT_OPTIONS","lockNoOp","GoTrueClient","callbackUrlType","redirectType","credentials","password","codeChallengeMethod","phone","authCode","chain","_h","_j","_k","_l","_m","signature","wallet","statement","resolvedWallet","windowAny","output","outputToProcess","resource","maybeSignature","storageItem","provider","access_token","nonce","redirectTo","captchaToken","sessionError","endpoint","last","waitOn","currentSession","maybeSession","hasExpired","suppressWarning","target","prop","receiver","sessionData","userError","refreshedSession","provider_token","provider_refresh_token","refresh_token","expires_in","expires_at","token_type","actuallyExpiresIn","issuedAt","currentStorageContent","subscription","identity","refreshToken","debugName","startedAt","nextBackOffInterval","expiresWithMargin","promises","ticker","now","expiresInTicks","calledFromInitialize","methodName","urlParams","flowParams","challengeData","challengeError","totp","factor","currentLevel","nextLevel","currentAuthenticationMethods","kid","jwks","jwk","header","rawHeader","algorithm","signingKey","publicKey","AuthClient","SupabaseAuthClient","SupabaseClient","supabaseUrl","_supabaseUrl","baseUrl","defaultStorageKey","DEFAULTS","SupabaseStorageClient","autoRefreshToken","persistSession","detectSessionInUrl","flowType","debug","authHeaders","source","createClient","SUPABASE_URL","SUPABASE_ANON_KEY","supabase","initializeSupabase","localStorageWrapper","getCurrentUser","userData","currentUser","initializeAuth","checkAuthState","setupEventListeners","loginForm","signupForm","forgotForm","logoutBtn","handleLogin","handleSignup","handleForgotPassword","handleLogout","tab","tabName","forgotLink","showForgotPassword","showLoading","handleAuthSuccess","showAuthSection","getCurrentAuthUser","hideLoading","showMainApp","updateUserInfo","loadUserData","mainModule","main","updateAdminNavigation","loadingScreen","authSection","mainApp","userEmailElement","headerAvatar","headerAvatarPlaceholder","displayName","avatarSrc","loadProfileFromDatabase","database","profileData","savedProfile","showAuthTab","t","loginTab","signupTab","showMessage","toast","form","formData","u","userWithoutPassword","generateId","showVerificationModal","emailSpan","modal","gotItBtn","goBackBtn","hideVerificationModal","clearProfileForm","foodTrackerModule","foodTracker","foodGrid","shoppingListContainer","mealsModule","meals","mealGrid","weeklyPlanContainer","fieldId","field","avatarPreview","avatarPlaceholder","removeAvatarBtn","initializeFoodTracker","initializeMeals","isCurrentUserAdmin","role","isCurrentUserSuperAdmin","getCurrentUserRole","adminTab","isAdmin","debugAdminStatus","isSuperAdmin","initializeDatabase","saveFoodToDatabase","food","createdBy","profile","foodWithAttribution","saveAllFoodsToDatabase","foods","loadFoodsFromDatabase","deleteFoodFromDatabase","clearAllFoodsForUser","addToShoppingList","foodId","quantity","unit","shoppingItem","loadShoppingListFromDatabase","removeFromShoppingList","updateShoppingListQuantity","clearShoppingListFromDatabase","saveProfileToDatabase","profileRecord","existingProfile","checkError","saveWeightEntryToDatabase","weight","entryDate","notes","weightEntry","loadWeightEntriesFromDatabase","clearAllWeightEntriesFromDatabase","setupFoodTrackerEventListeners","loadAndDisplayFoods","loadShoppingListData","displayLastUploadDate","foodFileInput","handleFoodFileUpload","allFoods","shoppingList","updateShoppingListDisplay","updateCategoryFilters","displayFoods","categoryFiltersContainer","availableCategories","cat","categories","category","filterByCategory","btn","activeBtn","filteredFoods","b","isInShoppingList","buttonClass","buttonText","buttonAction","formatNutrition","num","updateQuantity","qty","unitSelect","selectedOption","gramsPerUnit","updateServingUnit","unitName","qtyInput","updateLastUploadDate","dateString","lastUpdate","infoElement","dateElement","file","parseExcelFile","auth","shareGlobally","foodsWithMetadata","savedCount","errorCount","reader","loadXLSXLibrary","parseExcelData","script","XLSX","workbook","sheetName","worksheet","lines","row","line","col","cellAddress","cell","parseFoodLines","numCols","sectionHeader","groupHeaders","foodName","brand","carbs","fat","protein","lowerName","kw","f","toTitleCase","txt","addFood","foodData","foodWithUserId","quantityInput","addToShoppingListDB","addButton","messageEl","container","fromFoodCard","itemToRemove","removeFromShoppingListDB","activeCategory","card","button","groupedItems","sortedCategories","nameA","nameB","html","updateShoppingListTotals","totalsContainer","totals","multiplier","formattedTotals","forceRefreshShoppingList","clearShoppingList","reloadShoppingListFromDatabase","handleRemoveFromShoppingList","handleClearShoppingList","printShoppingList","editFood","currentList","userName","printWindow","totalCarbs","totalFat","totalProtein","totalItems","grouped","printContent","editForm","editFoodId","editFoodName","editFoodBrand","editFoodCarbs","editFoodFat","editFoodProtein","editFoodInstructions","editFoodCategory","editModal","cancelFoodEdit","deleteFoodFromEdit","weights","startingWeight","idealWeight","targetDate","weightChart","isClearingData","initializeWeightTracker","loadWeightData","setupWeightChart","setupFieldListeners","updateChart","updateProgress","setTodayAsDefault","checkForMissingProfileData","idealWeightInput","checkFieldsAndHideTip","hidePersistentProfileTip","showPersistentProfileTip","entry","userId","idealWeightInKg","addProfileIndicator","saveGoalsData","today","entryDateInput","startInput","targetDateInput","saveGoalAndUpdateWithoutPopulate","saveGoalAndUpdate","createWeightChart","ctx","chartCtx","calculateIdealPath","labels","firstDateStr","startDate","endDate","totalTime","startWeight","weightDiff","label","currentDate","timeElapsed","progress","idealWeightForDate","w","actualWeightData","idealPathData","allLabels","progressText","latest","addWeightEntry","dateInput","weightInput","date","start","existingEntryIndex","newIdealWeight","newTargetDate","idealWeightChanged","updatedProfileData","newStartingWeight","entryWeightInput","existingTodayEntry","clearWeightData","shouldRestoreIdealWeight","tipEl","element","tooltipText","existingIndicator","indicator","initializeMacroCalculator","loadSavedProfile","setDefaultValues","ageInput","genderSelect","heightInput","userProfile","heightInCm","missingFields","missingText","populateForm","activitySelect","lossRateSelect","proteinRatioSelect","fatRatioSelect","calculateMacros","age","gender","height","activity","lossRate","proteinRatio","fatRatio","bmr","tdee","adjustedCalories","results","displayResults","proteinValue","carbsValue","fatValue","caloriesValue","bmrValue","tdeeValue","adjustedCaloriesValue","macroResults","macroExplanation","saveMacroProfile","currentMeals","allMeals","weeklyMealPlan","mealPlan","weeklyMealPlanLoaded","isUpdatingShoppingCheckboxes","loadUserMeals","setupMealEventListeners","loadWeeklyMealPlan","updateWeeklyMealPlanDisplay","displayLastMealUploadDate","reloadMeals","dropdown","removeIngredientRow","addNewIngredientRow","addToMealPlan","toggleMealPlanDropdown","updateMealShoppingCheckboxes","showMealMessage","mealsError","foodsError","servingUnits","unitsError","mappedMeals","dbMeal","rawIngredients","processedIngredients","ing","calculatedCarbs","calculatedFat","calculatedProtein","suMatch","su","displayMeals","showNoMealsState","availableMealsGrid","skipFilterUpdate","updateMealCategoryFilters","activeFilterBtn","filteredMeals","meal","updateMealGrid","mealFiltersContainers","availableTypesUpper","containerIndex","mealTypeOrder","sortedMeals","aIndex","bIndex","generateMealCardHTML","sum","imagePath","imageDisplayName","cleanName","mealId","mealTypes","added","mealType","displayMealPlan","planContainer","saved","todaysPlan","filterMealsByCategory","isVisible","rect","spaceBelow","handleClickOutside","hideMealPlanDropdown","addMealToWeeklyPlan","mealName","daySelect","mealTimeSelect","selectedDay","selectedMealTime","existingMeal","removeMealFromWeeklyPlan","day","weeklyPlanGrid","days","mealTypeLabels","dayPlan","dailyTotalCarbs","dailyTotalFat","dailyTotalProtein","hasMeals","shoppingListItems","loadShoppingListItems","loadFoodsForMatching","shoppingItemIds","shoppingItemNames","checkboxId","checkbox","validIngredients","ingredient","hasIngredientsInShoppingList","ingredientName","matchedFood","findMatchingFood","supabase2","loadedPlan","clearAllMealPlanData","clearAllMealData","clearMealShoppingCheckboxes","checkboxes","uncheckedCount","totalChecked","wasChecked","searchName","div","foodSelect","removeBtn","detailsDiv","currentShoppingList","initializeShoppingList","loadAndDisplayShoppingList","items","displayShoppingList","consolidateItems","consolidated","oldQty","addQty","shoppingItemsContainer","shoppingTotalsContainer","consolidatedItems","itemsByCategory","groups","categoryOrder","categoryItems","isSundries","calculateTotals","totalsHTML","emptyTotalsHTML","removeShoppingItem","updateItemQuantity","newQuantity","clearAllShoppingItems","skipDatabase","getCurrentShoppingList","generatePrintContent","content","unitDisplay","currentEditingFood","currentEditingMeal","currentMealIngredients","currentFoodImageFile","currentMealImageFile","currentServingUnits","openEditFoodModal","loadFoodsDropdown","saveEditedFood","closeEditFoodModal","select","option","loadFoodForEdit","foodResult","unitsResult","servingUnitsList","createServingUnitHtml","imagePreview","imagePlaceholder","fileInput","existingImageUrl","isDefault","updateServingUnitField","unitId","getGramsPerUnit","toggleGramsInput","unitType","unitElement","gramsInput","removeServingUnit","updatedFood","updateError","servingUnitsToKeep","deleteError","existingUnits","newUnits","insertError","deleteEditedFood","openEditMealModal","loadMealsDropdown","closeEditMealModal","loadMealForEdit","mealError","ingredients","allServingUnits","foodServingUnits","servingUnit","totalGrams","nameInput","typeSelect","instructionsInput","renderMealIngredients","foodSelectHtml","foodsByCategory","unitsHtml","quantityInputHtml","addIngredientToMeal","newIngredient","removeIngredientFromMeal","updateIngredientFood","reRenderIngredients","updateIngredientQuantity","updateIngredientUnit","newUnit","updateIngredientNutrient","nutrient","updateIngredientInstructions","instructions","saveEditedMeal","imageUrl","picture","fileExt","fileName","uploadError","publicUrl","ingredientsToSave","deleteEditedMeal","previewFoodImage","removeFoodImage","previewMealImage","removeMealImage","addServingUnit","unitHtml","addNewIngredient","renderMealIngredientsForCreate","nutrientsHtml","removeButtonHtml","createContainer","editContainer","showSplashScreen","splash","existingLogo","logoPath","initializeApp","initializeSimpleEditSystem","setupModalEventListeners","setupProfileEventListeners","initializeAvatarState","setupGlobalFunctions","updateProfile","profileName","dateOfBirth","profileAge","profileGender","profileHeight","heightUnit","profileIdealWeight","weightUnit","profileCountry","_i","loadProfile","profileNameInput","dateOfBirthInput","profileAgeInput","profileGenderInput","profileHeightInput","heightUnitInput","profileIdealWeightInput","weightUnitInput","profileCountryInput","removeAvatar","avatarInput","showUploadModal","closeUploadModal","showSection","exportData","clearAllData","formatText","formatEditText","removeMealPicture","removeEditMealPicture","setupMealPictureEventListeners","exportFoodsToCSV","importFoodsFromCSV","createFoodsBackup","restoreFromBackup","sectionId","section","targetSection","targetTab","module","loadAdminSection","initializeAdmin","simpleEditModule","simpleEdit","importError","editFoodBtn","editMealBtn","closeAllModals","modalElement","chooseAvatarBtn","changeAvatarBtn","handleAvatarUpload","calculateAge","birthDate","monthDiff","command","editor","hiddenInput","setupRichTextEditors","cookingInstructions","cookingInstructionsHidden","text","editCookingInstructions","editCookingInstructionsHidden","mealPictureFile","handleMealPictureUpload","preview","placeholder","adminNavBtn"],"ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"sources":["../../node_modules/@supabase/functions-js/dist/module/helper.js","../../node_modules/@supabase/functions-js/dist/module/types.js","../../node_modules/@supabase/functions-js/dist/module/FunctionsClient.js","../../node_modules/@supabase/node-fetch/browser.js","../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js","../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js","../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js","../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js","../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js","../../node_modules/@supabase/postgrest-js/dist/cjs/version.js","../../node_modules/@supabase/postgrest-js/dist/cjs/constants.js","../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js","../../node_modules/@supabase/postgrest-js/dist/cjs/index.js","../../node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs","../../node_modules/isows/_esm/utils.js","../../node_modules/isows/_esm/native.js","../../node_modules/@supabase/realtime-js/dist/module/lib/version.js","../../node_modules/@supabase/realtime-js/dist/module/lib/constants.js","../../node_modules/@supabase/realtime-js/dist/module/lib/serializer.js","../../node_modules/@supabase/realtime-js/dist/module/lib/timer.js","../../node_modules/@supabase/realtime-js/dist/module/lib/transformers.js","../../node_modules/@supabase/realtime-js/dist/module/lib/push.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js","../../node_modules/@supabase/storage-js/dist/module/lib/errors.js","../../node_modules/@supabase/storage-js/dist/module/lib/helpers.js","../../node_modules/@supabase/storage-js/dist/module/lib/fetch.js","../../node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js","../../node_modules/@supabase/storage-js/dist/module/lib/version.js","../../node_modules/@supabase/storage-js/dist/module/lib/constants.js","../../node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js","../../node_modules/@supabase/storage-js/dist/module/StorageClient.js","../../node_modules/@supabase/supabase-js/dist/module/lib/version.js","../../node_modules/@supabase/supabase-js/dist/module/lib/constants.js","../../node_modules/@supabase/supabase-js/dist/module/lib/fetch.js","../../node_modules/@supabase/supabase-js/dist/module/lib/helpers.js","../../node_modules/@supabase/auth-js/dist/module/lib/version.js","../../node_modules/@supabase/auth-js/dist/module/lib/constants.js","../../node_modules/@supabase/auth-js/dist/module/lib/errors.js","../../node_modules/@supabase/auth-js/dist/module/lib/base64url.js","../../node_modules/@supabase/auth-js/dist/module/lib/helpers.js","../../node_modules/@supabase/auth-js/dist/module/lib/fetch.js","../../node_modules/@supabase/auth-js/dist/module/lib/types.js","../../node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js","../../node_modules/@supabase/auth-js/dist/module/lib/local-storage.js","../../node_modules/@supabase/auth-js/dist/module/lib/polyfills.js","../../node_modules/@supabase/auth-js/dist/module/lib/locks.js","../../node_modules/@supabase/auth-js/dist/module/GoTrueClient.js","../../node_modules/@supabase/auth-js/dist/module/AuthClient.js","../../node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js","../../node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js","../../node_modules/@supabase/supabase-js/dist/module/index.js","../../src/js/supabase-client.ts","../../src/js/auth.ts","../../src/js/database.ts","../../src/js/food-tracker.ts","../../src/js/weight-tracker.ts","../../src/js/macro-calculator.ts","../../src/js/meals.ts","../../src/js/shopping-list.ts","../../src/js/simple-edit.ts","../../src/main.ts"],"sourcesContent":["export const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => import('@supabase/node-fetch').then(({ default: fetch }) => fetch(...args));\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\n//# sourceMappingURL=helper.js.map","export class FunctionsError extends Error {\n    constructor(message, name = 'FunctionsError', context) {\n        super(message);\n        this.name = name;\n        this.context = context;\n    }\n}\nexport class FunctionsFetchError extends FunctionsError {\n    constructor(context) {\n        super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context);\n    }\n}\nexport class FunctionsRelayError extends FunctionsError {\n    constructor(context) {\n        super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context);\n    }\n}\nexport class FunctionsHttpError extends FunctionsError {\n    constructor(context) {\n        super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context);\n    }\n}\n// Define the enum for the 'region' property\nexport var FunctionRegion;\n(function (FunctionRegion) {\n    FunctionRegion[\"Any\"] = \"any\";\n    FunctionRegion[\"ApNortheast1\"] = \"ap-northeast-1\";\n    FunctionRegion[\"ApNortheast2\"] = \"ap-northeast-2\";\n    FunctionRegion[\"ApSouth1\"] = \"ap-south-1\";\n    FunctionRegion[\"ApSoutheast1\"] = \"ap-southeast-1\";\n    FunctionRegion[\"ApSoutheast2\"] = \"ap-southeast-2\";\n    FunctionRegion[\"CaCentral1\"] = \"ca-central-1\";\n    FunctionRegion[\"EuCentral1\"] = \"eu-central-1\";\n    FunctionRegion[\"EuWest1\"] = \"eu-west-1\";\n    FunctionRegion[\"EuWest2\"] = \"eu-west-2\";\n    FunctionRegion[\"EuWest3\"] = \"eu-west-3\";\n    FunctionRegion[\"SaEast1\"] = \"sa-east-1\";\n    FunctionRegion[\"UsEast1\"] = \"us-east-1\";\n    FunctionRegion[\"UsWest1\"] = \"us-west-1\";\n    FunctionRegion[\"UsWest2\"] = \"us-west-2\";\n})(FunctionRegion || (FunctionRegion = {}));\n//# sourceMappingURL=types.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { resolveFetch } from './helper';\nimport { FunctionsFetchError, FunctionsHttpError, FunctionsRelayError, FunctionRegion, } from './types';\nexport class FunctionsClient {\n    constructor(url, { headers = {}, customFetch, region = FunctionRegion.Any, } = {}) {\n        this.url = url;\n        this.headers = headers;\n        this.region = region;\n        this.fetch = resolveFetch(customFetch);\n    }\n    /**\n     * Updates the authorization header\n     * @param token - the new jwt token sent in the authorisation header\n     */\n    setAuth(token) {\n        this.headers.Authorization = `Bearer ${token}`;\n    }\n    /**\n     * Invokes a function\n     * @param functionName - The name of the Function to invoke.\n     * @param options - Options for invoking the Function.\n     */\n    invoke(functionName, options = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { headers, method, body: functionArgs } = options;\n                let _headers = {};\n                let { region } = options;\n                if (!region) {\n                    region = this.region;\n                }\n                if (region && region !== 'any') {\n                    _headers['x-region'] = region;\n                }\n                let body;\n                if (functionArgs &&\n                    ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)) {\n                    if ((typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\n                        functionArgs instanceof ArrayBuffer) {\n                        // will work for File as File inherits Blob\n                        // also works for ArrayBuffer as it is the same underlying structure as a Blob\n                        _headers['Content-Type'] = 'application/octet-stream';\n                        body = functionArgs;\n                    }\n                    else if (typeof functionArgs === 'string') {\n                        // plain string\n                        _headers['Content-Type'] = 'text/plain';\n                        body = functionArgs;\n                    }\n                    else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n                        // don't set content-type headers\n                        // Request will automatically add the right boundary value\n                        body = functionArgs;\n                    }\n                    else {\n                        // default, assume this is JSON\n                        _headers['Content-Type'] = 'application/json';\n                        body = JSON.stringify(functionArgs);\n                    }\n                }\n                const response = yield this.fetch(`${this.url}/${functionName}`, {\n                    method: method || 'POST',\n                    // headers priority is (high to low):\n                    // 1. invoke-level headers\n                    // 2. client-level headers\n                    // 3. default Content-Type header\n                    headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\n                    body,\n                }).catch((fetchError) => {\n                    throw new FunctionsFetchError(fetchError);\n                });\n                const isRelayError = response.headers.get('x-relay-error');\n                if (isRelayError && isRelayError === 'true') {\n                    throw new FunctionsRelayError(response);\n                }\n                if (!response.ok) {\n                    throw new FunctionsHttpError(response);\n                }\n                let responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\n                let data;\n                if (responseType === 'application/json') {\n                    data = yield response.json();\n                }\n                else if (responseType === 'application/octet-stream') {\n                    data = yield response.blob();\n                }\n                else if (responseType === 'text/event-stream') {\n                    data = response;\n                }\n                else if (responseType === 'multipart/form-data') {\n                    data = yield response.formData();\n                }\n                else {\n                    // default to text\n                    data = yield response.text();\n                }\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n}\n//# sourceMappingURL=FunctionsClient.js.map","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function() {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') { return self; }\n    if (typeof window !== 'undefined') { return window; }\n    if (typeof global !== 'undefined') { return global; }\n    throw new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nexport const fetch = globalObject.fetch;\n\nexport default globalObject.fetch.bind(globalObject);\n\nexport const Headers = globalObject.Headers;\nexport const Request = globalObject.Request;\nexport const Response = globalObject.Response;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Error format\n *\n * {@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\n */\nclass PostgrestError extends Error {\n    constructor(context) {\n        super(context.message);\n        this.name = 'PostgrestError';\n        this.details = context.details;\n        this.hint = context.hint;\n        this.code = context.code;\n    }\n}\nexports.default = PostgrestError;\n//# sourceMappingURL=PostgrestError.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// @ts-ignore\nconst node_fetch_1 = __importDefault(require(\"@supabase/node-fetch\"));\nconst PostgrestError_1 = __importDefault(require(\"./PostgrestError\"));\nclass PostgrestBuilder {\n    constructor(builder) {\n        this.shouldThrowOnError = false;\n        this.method = builder.method;\n        this.url = builder.url;\n        this.headers = builder.headers;\n        this.schema = builder.schema;\n        this.body = builder.body;\n        this.shouldThrowOnError = builder.shouldThrowOnError;\n        this.signal = builder.signal;\n        this.isMaybeSingle = builder.isMaybeSingle;\n        if (builder.fetch) {\n            this.fetch = builder.fetch;\n        }\n        else if (typeof fetch === 'undefined') {\n            this.fetch = node_fetch_1.default;\n        }\n        else {\n            this.fetch = fetch;\n        }\n    }\n    /**\n     * If there's an error with the query, throwOnError will reject the promise by\n     * throwing the error instead of returning it as part of a successful response.\n     *\n     * {@link https://github.com/supabase/supabase-js/issues/92}\n     */\n    throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n    }\n    /**\n     * Set an HTTP header for the request.\n     */\n    setHeader(name, value) {\n        this.headers = Object.assign({}, this.headers);\n        this.headers[name] = value;\n        return this;\n    }\n    then(onfulfilled, onrejected) {\n        // https://postgrest.org/en/stable/api.html#switching-schemas\n        if (this.schema === undefined) {\n            // skip\n        }\n        else if (['GET', 'HEAD'].includes(this.method)) {\n            this.headers['Accept-Profile'] = this.schema;\n        }\n        else {\n            this.headers['Content-Profile'] = this.schema;\n        }\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.headers['Content-Type'] = 'application/json';\n        }\n        // NOTE: Invoke w/o `this` to avoid illegal invocation error.\n        // https://github.com/supabase/postgrest-js/pull/247\n        const _fetch = this.fetch;\n        let res = _fetch(this.url.toString(), {\n            method: this.method,\n            headers: this.headers,\n            body: JSON.stringify(this.body),\n            signal: this.signal,\n        }).then(async (res) => {\n            var _a, _b, _c;\n            let error = null;\n            let data = null;\n            let count = null;\n            let status = res.status;\n            let statusText = res.statusText;\n            if (res.ok) {\n                if (this.method !== 'HEAD') {\n                    const body = await res.text();\n                    if (body === '') {\n                        // Prefer: return=minimal\n                    }\n                    else if (this.headers['Accept'] === 'text/csv') {\n                        data = body;\n                    }\n                    else if (this.headers['Accept'] &&\n                        this.headers['Accept'].includes('application/vnd.pgrst.plan+text')) {\n                        data = body;\n                    }\n                    else {\n                        data = JSON.parse(body);\n                    }\n                }\n                const countHeader = (_a = this.headers['Prefer']) === null || _a === void 0 ? void 0 : _a.match(/count=(exact|planned|estimated)/);\n                const contentRange = (_b = res.headers.get('content-range')) === null || _b === void 0 ? void 0 : _b.split('/');\n                if (countHeader && contentRange && contentRange.length > 1) {\n                    count = parseInt(contentRange[1]);\n                }\n                // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n                // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n                if (this.isMaybeSingle && this.method === 'GET' && Array.isArray(data)) {\n                    if (data.length > 1) {\n                        error = {\n                            // https://github.com/PostgREST/postgrest/blob/a867d79c42419af16c18c3fb019eba8df992626f/src/PostgREST/Error.hs#L553\n                            code: 'PGRST116',\n                            details: `Results contain ${data.length} rows, application/vnd.pgrst.object+json requires 1 row`,\n                            hint: null,\n                            message: 'JSON object requested, multiple (or no) rows returned',\n                        };\n                        data = null;\n                        count = null;\n                        status = 406;\n                        statusText = 'Not Acceptable';\n                    }\n                    else if (data.length === 1) {\n                        data = data[0];\n                    }\n                    else {\n                        data = null;\n                    }\n                }\n            }\n            else {\n                const body = await res.text();\n                try {\n                    error = JSON.parse(body);\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (Array.isArray(error) && res.status === 404) {\n                        data = [];\n                        error = null;\n                        status = 200;\n                        statusText = 'OK';\n                    }\n                }\n                catch (_d) {\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (res.status === 404 && body === '') {\n                        status = 204;\n                        statusText = 'No Content';\n                    }\n                    else {\n                        error = {\n                            message: body,\n                        };\n                    }\n                }\n                if (error && this.isMaybeSingle && ((_c = error === null || error === void 0 ? void 0 : error.details) === null || _c === void 0 ? void 0 : _c.includes('0 rows'))) {\n                    error = null;\n                    status = 200;\n                    statusText = 'OK';\n                }\n                if (error && this.shouldThrowOnError) {\n                    throw new PostgrestError_1.default(error);\n                }\n            }\n            const postgrestResponse = {\n                error,\n                data,\n                count,\n                status,\n                statusText,\n            };\n            return postgrestResponse;\n        });\n        if (!this.shouldThrowOnError) {\n            res = res.catch((fetchError) => {\n                var _a, _b, _c;\n                return ({\n                    error: {\n                        message: `${(_a = fetchError === null || fetchError === void 0 ? void 0 : fetchError.name) !== null && _a !== void 0 ? _a : 'FetchError'}: ${fetchError === null || fetchError === void 0 ? void 0 : fetchError.message}`,\n                        details: `${(_b = fetchError === null || fetchError === void 0 ? void 0 : fetchError.stack) !== null && _b !== void 0 ? _b : ''}`,\n                        hint: '',\n                        code: `${(_c = fetchError === null || fetchError === void 0 ? void 0 : fetchError.code) !== null && _c !== void 0 ? _c : ''}`,\n                    },\n                    data: null,\n                    count: null,\n                    status: 0,\n                    statusText: '',\n                });\n            });\n        }\n        return res.then(onfulfilled, onrejected);\n    }\n    /**\n     * Override the type of the returned `data`.\n     *\n     * @typeParam NewResult - The new result type to override with\n     * @deprecated Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\n     */\n    returns() {\n        /* istanbul ignore next */\n        return this;\n    }\n    /**\n     * Override the type of the returned `data` field in the response.\n     *\n     * @typeParam NewResult - The new type to cast the response data to\n     * @typeParam Options - Optional type configuration (defaults to { merge: true })\n     * @typeParam Options.merge - When true, merges the new type with existing return type. When false, replaces the existing types entirely (defaults to true)\n     * @example\n     * ```typescript\n     * // Merge with existing types (default behavior)\n     * const query = supabase\n     *   .from('users')\n     *   .select()\n     *   .overrideTypes<{ custom_field: string }>()\n     *\n     * // Replace existing types completely\n     * const replaceQuery = supabase\n     *   .from('users')\n     *   .select()\n     *   .overrideTypes<{ id: number; name: string }, { merge: false }>()\n     * ```\n     * @returns A PostgrestBuilder instance with the new type\n     */\n    overrideTypes() {\n        return this;\n    }\n}\nexports.default = PostgrestBuilder;\n//# sourceMappingURL=PostgrestBuilder.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PostgrestBuilder_1 = __importDefault(require(\"./PostgrestBuilder\"));\nclass PostgrestTransformBuilder extends PostgrestBuilder_1.default {\n    /**\n     * Perform a SELECT on the query result.\n     *\n     * By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\n     * return modified rows. By calling this method, modified rows are returned in\n     * `data`.\n     *\n     * @param columns - The columns to retrieve, separated by commas\n     */\n    select(columns) {\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (this.headers['Prefer']) {\n            this.headers['Prefer'] += ',';\n        }\n        this.headers['Prefer'] += 'return=representation';\n        return this;\n    }\n    /**\n     * Order the query result by `column`.\n     *\n     * You can call this method multiple times to order by multiple columns.\n     *\n     * You can order referenced tables, but it only affects the ordering of the\n     * parent table if you use `!inner` in the query.\n     *\n     * @param column - The column to order by\n     * @param options - Named parameters\n     * @param options.ascending - If `true`, the result will be in ascending order\n     * @param options.nullsFirst - If `true`, `null`s appear first. If `false`,\n     * `null`s appear last.\n     * @param options.referencedTable - Set this to order a referenced table by\n     * its columns\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\n     * instead\n     */\n    order(column, { ascending = true, nullsFirst, foreignTable, referencedTable = foreignTable, } = {}) {\n        const key = referencedTable ? `${referencedTable}.order` : 'order';\n        const existingOrder = this.url.searchParams.get(key);\n        this.url.searchParams.set(key, `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}${nullsFirst === undefined ? '' : nullsFirst ? '.nullsfirst' : '.nullslast'}`);\n        return this;\n    }\n    /**\n     * Limit the query result by `count`.\n     *\n     * @param count - The maximum number of rows to return\n     * @param options - Named parameters\n     * @param options.referencedTable - Set this to limit rows of referenced\n     * tables instead of the parent table\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\n     * instead\n     */\n    limit(count, { foreignTable, referencedTable = foreignTable, } = {}) {\n        const key = typeof referencedTable === 'undefined' ? 'limit' : `${referencedTable}.limit`;\n        this.url.searchParams.set(key, `${count}`);\n        return this;\n    }\n    /**\n     * Limit the query result by starting at an offset `from` and ending at the offset `to`.\n     * Only records within this range are returned.\n     * This respects the query order and if there is no order clause the range could behave unexpectedly.\n     * The `from` and `to` values are 0-based and inclusive: `range(1, 3)` will include the second, third\n     * and fourth rows of the query.\n     *\n     * @param from - The starting index from which to limit the result\n     * @param to - The last index to which to limit the result\n     * @param options - Named parameters\n     * @param options.referencedTable - Set this to limit rows of referenced\n     * tables instead of the parent table\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\n     * instead\n     */\n    range(from, to, { foreignTable, referencedTable = foreignTable, } = {}) {\n        const keyOffset = typeof referencedTable === 'undefined' ? 'offset' : `${referencedTable}.offset`;\n        const keyLimit = typeof referencedTable === 'undefined' ? 'limit' : `${referencedTable}.limit`;\n        this.url.searchParams.set(keyOffset, `${from}`);\n        // Range is inclusive, so add 1\n        this.url.searchParams.set(keyLimit, `${to - from + 1}`);\n        return this;\n    }\n    /**\n     * Set the AbortSignal for the fetch request.\n     *\n     * @param signal - The AbortSignal to use for the fetch request\n     */\n    abortSignal(signal) {\n        this.signal = signal;\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be one row (e.g. using `.limit(1)`), otherwise this\n     * returns an error.\n     */\n    single() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\n     * this returns an error.\n     */\n    maybeSingle() {\n        // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n        // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n        if (this.method === 'GET') {\n            this.headers['Accept'] = 'application/json';\n        }\n        else {\n            this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        }\n        this.isMaybeSingle = true;\n        return this;\n    }\n    /**\n     * Return `data` as a string in CSV format.\n     */\n    csv() {\n        this.headers['Accept'] = 'text/csv';\n        return this;\n    }\n    /**\n     * Return `data` as an object in [GeoJSON](https://geojson.org) format.\n     */\n    geojson() {\n        this.headers['Accept'] = 'application/geo+json';\n        return this;\n    }\n    /**\n     * Return `data` as the EXPLAIN plan for the query.\n     *\n     * You need to enable the\n     * [db_plan_enabled](https://supabase.com/docs/guides/database/debugging-performance#enabling-explain)\n     * setting before using this method.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.analyze - If `true`, the query will be executed and the\n     * actual run time will be returned\n     *\n     * @param options.verbose - If `true`, the query identifier will be returned\n     * and `data` will include the output columns of the query\n     *\n     * @param options.settings - If `true`, include information on configuration\n     * parameters that affect query planning\n     *\n     * @param options.buffers - If `true`, include information on buffer usage\n     *\n     * @param options.wal - If `true`, include information on WAL record generation\n     *\n     * @param options.format - The format of the output, can be `\"text\"` (default)\n     * or `\"json\"`\n     */\n    explain({ analyze = false, verbose = false, settings = false, buffers = false, wal = false, format = 'text', } = {}) {\n        var _a;\n        const options = [\n            analyze ? 'analyze' : null,\n            verbose ? 'verbose' : null,\n            settings ? 'settings' : null,\n            buffers ? 'buffers' : null,\n            wal ? 'wal' : null,\n        ]\n            .filter(Boolean)\n            .join('|');\n        // An Accept header can carry multiple media types but postgrest-js always sends one\n        const forMediatype = (_a = this.headers['Accept']) !== null && _a !== void 0 ? _a : 'application/json';\n        this.headers['Accept'] = `application/vnd.pgrst.plan+${format}; for=\"${forMediatype}\"; options=${options};`;\n        if (format === 'json')\n            return this;\n        else\n            return this;\n    }\n    /**\n     * Rollback the query.\n     *\n     * `data` will still be returned, but the query is not committed.\n     */\n    rollback() {\n        var _a;\n        if (((_a = this.headers['Prefer']) !== null && _a !== void 0 ? _a : '').trim().length > 0) {\n            this.headers['Prefer'] += ',tx=rollback';\n        }\n        else {\n            this.headers['Prefer'] = 'tx=rollback';\n        }\n        return this;\n    }\n    /**\n     * Override the type of the returned `data`.\n     *\n     * @typeParam NewResult - The new result type to override with\n     * @deprecated Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\n     */\n    returns() {\n        return this;\n    }\n}\nexports.default = PostgrestTransformBuilder;\n//# sourceMappingURL=PostgrestTransformBuilder.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PostgrestTransformBuilder_1 = __importDefault(require(\"./PostgrestTransformBuilder\"));\nclass PostgrestFilterBuilder extends PostgrestTransformBuilder_1.default {\n    /**\n     * Match only rows where `column` is equal to `value`.\n     *\n     * To check if the value of `column` is NULL, you should use `.is()` instead.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    eq(column, value) {\n        this.url.searchParams.append(column, `eq.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is not equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    neq(column, value) {\n        this.url.searchParams.append(column, `neq.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is greater than `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    gt(column, value) {\n        this.url.searchParams.append(column, `gt.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is greater than or equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    gte(column, value) {\n        this.url.searchParams.append(column, `gte.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is less than `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    lt(column, value) {\n        this.url.searchParams.append(column, `lt.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is less than or equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    lte(column, value) {\n        this.url.searchParams.append(column, `lte.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches `pattern` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param pattern - The pattern to match with\n     */\n    like(column, pattern) {\n        this.url.searchParams.append(column, `like.${pattern}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches all of `patterns` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    likeAllOf(column, patterns) {\n        this.url.searchParams.append(column, `like(all).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches any of `patterns` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    likeAnyOf(column, patterns) {\n        this.url.searchParams.append(column, `like(any).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches `pattern` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param pattern - The pattern to match with\n     */\n    ilike(column, pattern) {\n        this.url.searchParams.append(column, `ilike.${pattern}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches all of `patterns` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    ilikeAllOf(column, patterns) {\n        this.url.searchParams.append(column, `ilike(all).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches any of `patterns` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    ilikeAnyOf(column, patterns) {\n        this.url.searchParams.append(column, `ilike(any).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` IS `value`.\n     *\n     * For non-boolean columns, this is only relevant for checking if the value of\n     * `column` is NULL by setting `value` to `null`.\n     *\n     * For boolean columns, you can also set `value` to `true` or `false` and it\n     * will behave the same way as `.eq()`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    is(column, value) {\n        this.url.searchParams.append(column, `is.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is included in the `values` array.\n     *\n     * @param column - The column to filter on\n     * @param values - The values array to filter with\n     */\n    in(column, values) {\n        const cleanedValues = Array.from(new Set(values))\n            .map((s) => {\n            // handle postgrest reserved characters\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n            if (typeof s === 'string' && new RegExp('[,()]').test(s))\n                return `\"${s}\"`;\n            else\n                return `${s}`;\n        })\n            .join(',');\n        this.url.searchParams.append(column, `in.(${cleanedValues})`);\n        return this;\n    }\n    /**\n     * Only relevant for jsonb, array, and range columns. Match only rows where\n     * `column` contains every element appearing in `value`.\n     *\n     * @param column - The jsonb, array, or range column to filter on\n     * @param value - The jsonb, array, or range value to filter with\n     */\n    contains(column, value) {\n        if (typeof value === 'string') {\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n            // keep it simple and accept a string\n            this.url.searchParams.append(column, `cs.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, `cs.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(column, `cs.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for jsonb, array, and range columns. Match only rows where\n     * every element appearing in `column` is contained by `value`.\n     *\n     * @param column - The jsonb, array, or range column to filter on\n     * @param value - The jsonb, array, or range value to filter with\n     */\n    containedBy(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(column, `cd.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, `cd.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(column, `cd.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is greater than any element in `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeGt(column, range) {\n        this.url.searchParams.append(column, `sr.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is either contained in `range` or greater than any element in\n     * `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeGte(column, range) {\n        this.url.searchParams.append(column, `nxl.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is less than any element in `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeLt(column, range) {\n        this.url.searchParams.append(column, `sl.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is either contained in `range` or less than any element in\n     * `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeLte(column, range) {\n        this.url.searchParams.append(column, `nxr.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where `column` is\n     * mutually exclusive to `range` and there can be no element between the two\n     * ranges.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeAdjacent(column, range) {\n        this.url.searchParams.append(column, `adj.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for array and range columns. Match only rows where\n     * `column` and `value` have an element in common.\n     *\n     * @param column - The array or range column to filter on\n     * @param value - The array or range value to filter with\n     */\n    overlaps(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(column, `ov.${value}`);\n        }\n        else {\n            // array\n            this.url.searchParams.append(column, `ov.{${value.join(',')}}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for text and tsvector columns. Match only rows where\n     * `column` matches the query string in `query`.\n     *\n     * @param column - The text or tsvector column to filter on\n     * @param query - The query text to match with\n     * @param options - Named parameters\n     * @param options.config - The text search configuration to use\n     * @param options.type - Change how the `query` text is interpreted\n     */\n    textSearch(column, query, { config, type } = {}) {\n        let typePart = '';\n        if (type === 'plain') {\n            typePart = 'pl';\n        }\n        else if (type === 'phrase') {\n            typePart = 'ph';\n        }\n        else if (type === 'websearch') {\n            typePart = 'w';\n        }\n        const configPart = config === undefined ? '' : `(${config})`;\n        this.url.searchParams.append(column, `${typePart}fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Match only rows where each column in `query` keys is equal to its\n     * associated value. Shorthand for multiple `.eq()`s.\n     *\n     * @param query - The object to filter with, with column names as keys mapped\n     * to their filter values\n     */\n    match(query) {\n        Object.entries(query).forEach(([column, value]) => {\n            this.url.searchParams.append(column, `eq.${value}`);\n        });\n        return this;\n    }\n    /**\n     * Match only rows which doesn't satisfy the filter.\n     *\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\n     * follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure they are properly sanitized.\n     *\n     * @param column - The column to filter on\n     * @param operator - The operator to be negated to filter with, following\n     * PostgREST syntax\n     * @param value - The value to filter with, following PostgREST syntax\n     */\n    not(column, operator, value) {\n        this.url.searchParams.append(column, `not.${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows which satisfy at least one of the filters.\n     *\n     * Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure it's properly sanitized.\n     *\n     * It's currently not possible to do an `.or()` filter across multiple tables.\n     *\n     * @param filters - The filters to use, following PostgREST syntax\n     * @param options - Named parameters\n     * @param options.referencedTable - Set this to filter on referenced tables\n     * instead of the parent table\n     * @param options.foreignTable - Deprecated, use `referencedTable` instead\n     */\n    or(filters, { foreignTable, referencedTable = foreignTable, } = {}) {\n        const key = referencedTable ? `${referencedTable}.or` : 'or';\n        this.url.searchParams.append(key, `(${filters})`);\n        return this;\n    }\n    /**\n     * Match only rows which satisfy the filter. This is an escape hatch - you\n     * should use the specific filter methods wherever possible.\n     *\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\n     * follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure they are properly sanitized.\n     *\n     * @param column - The column to filter on\n     * @param operator - The operator to filter with, following PostgREST syntax\n     * @param value - The value to filter with, following PostgREST syntax\n     */\n    filter(column, operator, value) {\n        this.url.searchParams.append(column, `${operator}.${value}`);\n        return this;\n    }\n}\nexports.default = PostgrestFilterBuilder;\n//# sourceMappingURL=PostgrestFilterBuilder.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PostgrestFilterBuilder_1 = __importDefault(require(\"./PostgrestFilterBuilder\"));\nclass PostgrestQueryBuilder {\n    constructor(url, { headers = {}, schema, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.schema = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Perform a SELECT query on the table or view.\n     *\n     * @param columns - The columns to retrieve, separated by commas. Columns can be renamed when returned with `customName:columnName`\n     *\n     * @param options - Named parameters\n     *\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     *\n     * @param options.count - Count algorithm to use to count rows in the table or view.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    select(columns, { head = false, count, } = {}) {\n        const method = head ? 'HEAD' : 'GET';\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (count) {\n            this.headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an INSERT into the table or view.\n     *\n     * By default, inserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to insert. Pass an object to insert a single row\n     * or an array to insert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count inserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     *\n     * @param options.defaultToNull - Make missing fields default to `null`.\n     * Otherwise, use the default value for the column. Only applies for bulk\n     * inserts.\n     */\n    insert(values, { count, defaultToNull = true, } = {}) {\n        const method = 'POST';\n        const prefersHeaders = [];\n        if (this.headers['Prefer']) {\n            prefersHeaders.push(this.headers['Prefer']);\n        }\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (!defaultToNull) {\n            prefersHeaders.push('missing=default');\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an UPSERT on the table or view. Depending on the column(s) passed\n     * to `onConflict`, `.upsert()` allows you to perform the equivalent of\n     * `.insert()` if a row with the corresponding `onConflict` columns doesn't\n     * exist, or if it does exist, perform an alternative action depending on\n     * `ignoreDuplicates`.\n     *\n     * By default, upserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to upsert with. Pass an object to upsert a\n     * single row or an array to upsert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.onConflict - Comma-separated UNIQUE column(s) to specify how\n     * duplicate rows are determined. Two rows are duplicates if all the\n     * `onConflict` columns are equal.\n     *\n     * @param options.ignoreDuplicates - If `true`, duplicate rows are ignored. If\n     * `false`, duplicate rows are merged with existing rows.\n     *\n     * @param options.count - Count algorithm to use to count upserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     *\n     * @param options.defaultToNull - Make missing fields default to `null`.\n     * Otherwise, use the default value for the column. This only applies when\n     * inserting new rows, not when merging with existing rows under\n     * `ignoreDuplicates: false`. This also only applies when doing bulk upserts.\n     */\n    upsert(values, { onConflict, ignoreDuplicates = false, count, defaultToNull = true, } = {}) {\n        const method = 'POST';\n        const prefersHeaders = [`resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`];\n        if (onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        if (this.headers['Prefer']) {\n            prefersHeaders.push(this.headers['Prefer']);\n        }\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (!defaultToNull) {\n            prefersHeaders.push('missing=default');\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an UPDATE on the table or view.\n     *\n     * By default, updated rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param values - The values to update with\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count updated rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    update(values, { count, } = {}) {\n        const method = 'PATCH';\n        const prefersHeaders = [];\n        if (this.headers['Prefer']) {\n            prefersHeaders.push(this.headers['Prefer']);\n        }\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform a DELETE on the table or view.\n     *\n     * By default, deleted rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count deleted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    delete({ count, } = {}) {\n        const method = 'DELETE';\n        const prefersHeaders = [];\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n}\nexports.default = PostgrestQueryBuilder;\n//# sourceMappingURL=PostgrestQueryBuilder.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.version = void 0;\nexports.version = '0.0.0-automated';\n//# sourceMappingURL=version.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_HEADERS = void 0;\nconst version_1 = require(\"./version\");\nexports.DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${version_1.version}` };\n//# sourceMappingURL=constants.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PostgrestQueryBuilder_1 = __importDefault(require(\"./PostgrestQueryBuilder\"));\nconst PostgrestFilterBuilder_1 = __importDefault(require(\"./PostgrestFilterBuilder\"));\nconst constants_1 = require(\"./constants\");\n/**\n * PostgREST client.\n *\n * @typeParam Database - Types for the schema from the [type\n * generator](https://supabase.com/docs/reference/javascript/next/typescript-support)\n *\n * @typeParam SchemaName - Postgres schema to switch to. Must be a string\n * literal, the same one passed to the constructor. If the schema is not\n * `\"public\"`, this must be supplied manually.\n */\nclass PostgrestClient {\n    // TODO: Add back shouldThrowOnError once we figure out the typings\n    /**\n     * Creates a PostgREST client.\n     *\n     * @param url - URL of the PostgREST endpoint\n     * @param options - Named parameters\n     * @param options.headers - Custom headers\n     * @param options.schema - Postgres schema to switch to\n     * @param options.fetch - Custom fetch\n     */\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, constants_1.DEFAULT_HEADERS), headers);\n        this.schemaName = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */\n    from(relation) {\n        const url = new URL(`${this.url}/${relation}`);\n        return new PostgrestQueryBuilder_1.default(url, {\n            headers: Object.assign({}, this.headers),\n            schema: this.schemaName,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Select a schema to query or perform an function (rpc) call.\n     *\n     * The schema needs to be on the list of exposed schemas inside Supabase.\n     *\n     * @param schema - The schema to query\n     */\n    schema(schema) {\n        return new PostgrestClient(this.url, {\n            headers: this.headers,\n            schema,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.get - When set to `true`, the function will be called with\n     * read-only access mode.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    rpc(fn, args = {}, { head = false, get = false, count, } = {}) {\n        let method;\n        const url = new URL(`${this.url}/rpc/${fn}`);\n        let body;\n        if (head || get) {\n            method = head ? 'HEAD' : 'GET';\n            Object.entries(args)\n                // params with undefined value needs to be filtered out, otherwise it'll\n                // show up as `?param=undefined`\n                .filter(([_, value]) => value !== undefined)\n                // array values need special syntax\n                .map(([name, value]) => [name, Array.isArray(value) ? `{${value.join(',')}}` : `${value}`])\n                .forEach(([name, value]) => {\n                url.searchParams.append(name, value);\n            });\n        }\n        else {\n            method = 'POST';\n            body = args;\n        }\n        const headers = Object.assign({}, this.headers);\n        if (count) {\n            headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url,\n            headers,\n            schema: this.schemaName,\n            body,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n}\nexports.default = PostgrestClient;\n//# sourceMappingURL=PostgrestClient.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PostgrestError = exports.PostgrestBuilder = exports.PostgrestTransformBuilder = exports.PostgrestFilterBuilder = exports.PostgrestQueryBuilder = exports.PostgrestClient = void 0;\n// Always update wrapper.mjs when updating this file.\nconst PostgrestClient_1 = __importDefault(require(\"./PostgrestClient\"));\nexports.PostgrestClient = PostgrestClient_1.default;\nconst PostgrestQueryBuilder_1 = __importDefault(require(\"./PostgrestQueryBuilder\"));\nexports.PostgrestQueryBuilder = PostgrestQueryBuilder_1.default;\nconst PostgrestFilterBuilder_1 = __importDefault(require(\"./PostgrestFilterBuilder\"));\nexports.PostgrestFilterBuilder = PostgrestFilterBuilder_1.default;\nconst PostgrestTransformBuilder_1 = __importDefault(require(\"./PostgrestTransformBuilder\"));\nexports.PostgrestTransformBuilder = PostgrestTransformBuilder_1.default;\nconst PostgrestBuilder_1 = __importDefault(require(\"./PostgrestBuilder\"));\nexports.PostgrestBuilder = PostgrestBuilder_1.default;\nconst PostgrestError_1 = __importDefault(require(\"./PostgrestError\"));\nexports.PostgrestError = PostgrestError_1.default;\nexports.default = {\n    PostgrestClient: PostgrestClient_1.default,\n    PostgrestQueryBuilder: PostgrestQueryBuilder_1.default,\n    PostgrestFilterBuilder: PostgrestFilterBuilder_1.default,\n    PostgrestTransformBuilder: PostgrestTransformBuilder_1.default,\n    PostgrestBuilder: PostgrestBuilder_1.default,\n    PostgrestError: PostgrestError_1.default,\n};\n//# sourceMappingURL=index.js.map","import index from '../cjs/index.js'\nconst {\n  PostgrestClient,\n  PostgrestQueryBuilder,\n  PostgrestFilterBuilder,\n  PostgrestTransformBuilder,\n  PostgrestBuilder,\n  PostgrestError,\n} = index\n\nexport {\n  PostgrestBuilder,\n  PostgrestClient,\n  PostgrestFilterBuilder,\n  PostgrestQueryBuilder,\n  PostgrestTransformBuilder,\n  PostgrestError,\n}\n\n// compatibility with CJS output\nexport default {\n  PostgrestClient,\n  PostgrestQueryBuilder,\n  PostgrestFilterBuilder,\n  PostgrestTransformBuilder,\n  PostgrestBuilder,\n  PostgrestError,\n}\n","export function getNativeWebSocket() {\n    if (typeof WebSocket !== \"undefined\")\n        return WebSocket;\n    if (typeof global.WebSocket !== \"undefined\")\n        return global.WebSocket;\n    if (typeof window.WebSocket !== \"undefined\")\n        return window.WebSocket;\n    if (typeof self.WebSocket !== \"undefined\")\n        return self.WebSocket;\n    throw new Error(\"`WebSocket` is not supported in this environment\");\n}\n//# sourceMappingURL=utils.js.map","import { getNativeWebSocket } from \"./utils.js\";\nexport const WebSocket = getNativeWebSocket();\n//# sourceMappingURL=native.js.map","export const version = '2.11.15';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_VERSION = `realtime-js/${version}`;\nexport const VSN = '1.0.0';\nexport const VERSION = version;\nexport const DEFAULT_TIMEOUT = 10000;\nexport const WS_CLOSE_NORMAL = 1000;\nexport var SOCKET_STATES;\n(function (SOCKET_STATES) {\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\n})(SOCKET_STATES || (SOCKET_STATES = {}));\nexport var CHANNEL_STATES;\n(function (CHANNEL_STATES) {\n    CHANNEL_STATES[\"closed\"] = \"closed\";\n    CHANNEL_STATES[\"errored\"] = \"errored\";\n    CHANNEL_STATES[\"joined\"] = \"joined\";\n    CHANNEL_STATES[\"joining\"] = \"joining\";\n    CHANNEL_STATES[\"leaving\"] = \"leaving\";\n})(CHANNEL_STATES || (CHANNEL_STATES = {}));\nexport var CHANNEL_EVENTS;\n(function (CHANNEL_EVENTS) {\n    CHANNEL_EVENTS[\"close\"] = \"phx_close\";\n    CHANNEL_EVENTS[\"error\"] = \"phx_error\";\n    CHANNEL_EVENTS[\"join\"] = \"phx_join\";\n    CHANNEL_EVENTS[\"reply\"] = \"phx_reply\";\n    CHANNEL_EVENTS[\"leave\"] = \"phx_leave\";\n    CHANNEL_EVENTS[\"access_token\"] = \"access_token\";\n})(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));\nexport var TRANSPORTS;\n(function (TRANSPORTS) {\n    TRANSPORTS[\"websocket\"] = \"websocket\";\n})(TRANSPORTS || (TRANSPORTS = {}));\nexport var CONNECTION_STATE;\n(function (CONNECTION_STATE) {\n    CONNECTION_STATE[\"Connecting\"] = \"connecting\";\n    CONNECTION_STATE[\"Open\"] = \"open\";\n    CONNECTION_STATE[\"Closing\"] = \"closing\";\n    CONNECTION_STATE[\"Closed\"] = \"closed\";\n})(CONNECTION_STATE || (CONNECTION_STATE = {}));\n//# sourceMappingURL=constants.js.map","// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\nexport default class Serializer {\n    constructor() {\n        this.HEADER_LENGTH = 1;\n    }\n    decode(rawPayload, callback) {\n        if (rawPayload.constructor === ArrayBuffer) {\n            return callback(this._binaryDecode(rawPayload));\n        }\n        if (typeof rawPayload === 'string') {\n            return callback(JSON.parse(rawPayload));\n        }\n        return callback({});\n    }\n    _binaryDecode(buffer) {\n        const view = new DataView(buffer);\n        const decoder = new TextDecoder();\n        return this._decodeBroadcast(buffer, view, decoder);\n    }\n    _decodeBroadcast(buffer, view, decoder) {\n        const topicSize = view.getUint8(1);\n        const eventSize = view.getUint8(2);\n        let offset = this.HEADER_LENGTH + 2;\n        const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n        offset = offset + topicSize;\n        const event = decoder.decode(buffer.slice(offset, offset + eventSize));\n        offset = offset + eventSize;\n        const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\n        return { ref: null, topic: topic, event: event, payload: data };\n    }\n}\n//# sourceMappingURL=serializer.js.map","/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n    constructor(callback, timerCalc) {\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n        this.timer = undefined;\n        this.tries = 0;\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n    }\n    reset() {\n        this.tries = 0;\n        clearTimeout(this.timer);\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n            this.tries = this.tries + 1;\n            this.callback();\n        }, this.timerCalc(this.tries + 1));\n    }\n}\n//# sourceMappingURL=timer.js.map","/**\n * Helpers to convert the change Payload into native JS types.\n */\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\nexport var PostgresTypes;\n(function (PostgresTypes) {\n    PostgresTypes[\"abstime\"] = \"abstime\";\n    PostgresTypes[\"bool\"] = \"bool\";\n    PostgresTypes[\"date\"] = \"date\";\n    PostgresTypes[\"daterange\"] = \"daterange\";\n    PostgresTypes[\"float4\"] = \"float4\";\n    PostgresTypes[\"float8\"] = \"float8\";\n    PostgresTypes[\"int2\"] = \"int2\";\n    PostgresTypes[\"int4\"] = \"int4\";\n    PostgresTypes[\"int4range\"] = \"int4range\";\n    PostgresTypes[\"int8\"] = \"int8\";\n    PostgresTypes[\"int8range\"] = \"int8range\";\n    PostgresTypes[\"json\"] = \"json\";\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\n    PostgresTypes[\"money\"] = \"money\";\n    PostgresTypes[\"numeric\"] = \"numeric\";\n    PostgresTypes[\"oid\"] = \"oid\";\n    PostgresTypes[\"reltime\"] = \"reltime\";\n    PostgresTypes[\"text\"] = \"text\";\n    PostgresTypes[\"time\"] = \"time\";\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\n    PostgresTypes[\"timetz\"] = \"timetz\";\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\n})(PostgresTypes || (PostgresTypes = {}));\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (columns, record, options = {}) => {\n    var _a;\n    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];\n    return Object.keys(record).reduce((acc, rec_key) => {\n        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);\n        return acc;\n    }, {});\n};\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (columnName, columns, record, skipTypes) => {\n    const column = columns.find((x) => x.name === columnName);\n    const colType = column === null || column === void 0 ? void 0 : column.type;\n    const value = record[columnName];\n    if (colType && !skipTypes.includes(colType)) {\n        return convertCell(colType, value);\n    }\n    return noop(value);\n};\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} value The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type, value) => {\n    // if data type is an array\n    if (type.charAt(0) === '_') {\n        const dataType = type.slice(1, type.length);\n        return toArray(value, dataType);\n    }\n    // If not null, convert to correct type.\n    switch (type) {\n        case PostgresTypes.bool:\n            return toBoolean(value);\n        case PostgresTypes.float4:\n        case PostgresTypes.float8:\n        case PostgresTypes.int2:\n        case PostgresTypes.int4:\n        case PostgresTypes.int8:\n        case PostgresTypes.numeric:\n        case PostgresTypes.oid:\n            return toNumber(value);\n        case PostgresTypes.json:\n        case PostgresTypes.jsonb:\n            return toJson(value);\n        case PostgresTypes.timestamp:\n            return toTimestampString(value); // Format to be consistent with PostgREST\n        case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n        case PostgresTypes.date: // To allow users to cast it based on Timezone\n        case PostgresTypes.daterange:\n        case PostgresTypes.int4range:\n        case PostgresTypes.int8range:\n        case PostgresTypes.money:\n        case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n        case PostgresTypes.text:\n        case PostgresTypes.time: // To allow users to cast it based on Timezone\n        case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n        case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n        case PostgresTypes.tsrange:\n        case PostgresTypes.tstzrange:\n            return noop(value);\n        default:\n            // Return the value for remaining types\n            return noop(value);\n    }\n};\nconst noop = (value) => {\n    return value;\n};\nexport const toBoolean = (value) => {\n    switch (value) {\n        case 't':\n            return true;\n        case 'f':\n            return false;\n        default:\n            return value;\n    }\n};\nexport const toNumber = (value) => {\n    if (typeof value === 'string') {\n        const parsedValue = parseFloat(value);\n        if (!Number.isNaN(parsedValue)) {\n            return parsedValue;\n        }\n    }\n    return value;\n};\nexport const toJson = (value) => {\n    if (typeof value === 'string') {\n        try {\n            return JSON.parse(value);\n        }\n        catch (error) {\n            console.log(`JSON parse error: ${error}`);\n            return value;\n        }\n    }\n    return value;\n};\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value, type) => {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    const lastIdx = value.length - 1;\n    const closeBrace = value[lastIdx];\n    const openBrace = value[0];\n    // Confirm value is a Postgres array by checking curly brackets\n    if (openBrace === '{' && closeBrace === '}') {\n        let arr;\n        const valTrim = value.slice(1, lastIdx);\n        // TODO: find a better solution to separate Postgres array data\n        try {\n            arr = JSON.parse('[' + valTrim + ']');\n        }\n        catch (_) {\n            // WARNING: splitting on comma does not cover all edge cases\n            arr = valTrim ? valTrim.split(',') : [];\n        }\n        return arr.map((val) => convertCell(type, val));\n    }\n    return value;\n};\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value) => {\n    if (typeof value === 'string') {\n        return value.replace(' ', 'T');\n    }\n    return value;\n};\nexport const httpEndpointURL = (socketUrl) => {\n    let url = socketUrl;\n    url = url.replace(/^ws/i, 'http');\n    url = url.replace(/(\\/socket\\/websocket|\\/socket|\\/websocket)\\/?$/i, '');\n    return url.replace(/\\/+$/, '');\n};\n//# sourceMappingURL=transformers.js.map","import { DEFAULT_TIMEOUT } from '../lib/constants';\nexport default class Push {\n    /**\n     * Initializes the Push\n     *\n     * @param channel The Channel\n     * @param event The event, for example `\"phx_join\"`\n     * @param payload The payload, for example `{user_id: 123}`\n     * @param timeout The push timeout in milliseconds\n     */\n    constructor(channel, event, payload = {}, timeout = DEFAULT_TIMEOUT) {\n        this.channel = channel;\n        this.event = event;\n        this.payload = payload;\n        this.timeout = timeout;\n        this.sent = false;\n        this.timeoutTimer = undefined;\n        this.ref = '';\n        this.receivedResp = null;\n        this.recHooks = [];\n        this.refEvent = null;\n    }\n    resend(timeout) {\n        this.timeout = timeout;\n        this._cancelRefEvent();\n        this.ref = '';\n        this.refEvent = null;\n        this.receivedResp = null;\n        this.sent = false;\n        this.send();\n    }\n    send() {\n        if (this._hasReceived('timeout')) {\n            return;\n        }\n        this.startTimeout();\n        this.sent = true;\n        this.channel.socket.push({\n            topic: this.channel.topic,\n            event: this.event,\n            payload: this.payload,\n            ref: this.ref,\n            join_ref: this.channel._joinRef(),\n        });\n    }\n    updatePayload(payload) {\n        this.payload = Object.assign(Object.assign({}, this.payload), payload);\n    }\n    receive(status, callback) {\n        var _a;\n        if (this._hasReceived(status)) {\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\n        }\n        this.recHooks.push({ status, callback });\n        return this;\n    }\n    startTimeout() {\n        if (this.timeoutTimer) {\n            return;\n        }\n        this.ref = this.channel.socket._makeRef();\n        this.refEvent = this.channel._replyEventName(this.ref);\n        const callback = (payload) => {\n            this._cancelRefEvent();\n            this._cancelTimeout();\n            this.receivedResp = payload;\n            this._matchReceive(payload);\n        };\n        this.channel._on(this.refEvent, {}, callback);\n        this.timeoutTimer = setTimeout(() => {\n            this.trigger('timeout', {});\n        }, this.timeout);\n    }\n    trigger(status, response) {\n        if (this.refEvent)\n            this.channel._trigger(this.refEvent, { status, response });\n    }\n    destroy() {\n        this._cancelRefEvent();\n        this._cancelTimeout();\n    }\n    _cancelRefEvent() {\n        if (!this.refEvent) {\n            return;\n        }\n        this.channel._off(this.refEvent, {});\n    }\n    _cancelTimeout() {\n        clearTimeout(this.timeoutTimer);\n        this.timeoutTimer = undefined;\n    }\n    _matchReceive({ status, response, }) {\n        this.recHooks\n            .filter((h) => h.status === status)\n            .forEach((h) => h.callback(response));\n    }\n    _hasReceived(status) {\n        return this.receivedResp && this.receivedResp.status === status;\n    }\n}\n//# sourceMappingURL=push.js.map","/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\nexport var REALTIME_PRESENCE_LISTEN_EVENTS;\n(function (REALTIME_PRESENCE_LISTEN_EVENTS) {\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\n})(REALTIME_PRESENCE_LISTEN_EVENTS || (REALTIME_PRESENCE_LISTEN_EVENTS = {}));\nexport default class RealtimePresence {\n    /**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeChannel\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */\n    constructor(channel, opts) {\n        this.channel = channel;\n        this.state = {};\n        this.pendingDiffs = [];\n        this.joinRef = null;\n        this.caller = {\n            onJoin: () => { },\n            onLeave: () => { },\n            onSync: () => { },\n        };\n        const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n            state: 'presence_state',\n            diff: 'presence_diff',\n        };\n        this.channel._on(events.state, {}, (newState) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            this.joinRef = this.channel._joinRef();\n            this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n            this.pendingDiffs.forEach((diff) => {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n            });\n            this.pendingDiffs = [];\n            onSync();\n        });\n        this.channel._on(events.diff, {}, (diff) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            if (this.inPendingSyncState()) {\n                this.pendingDiffs.push(diff);\n            }\n            else {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n                onSync();\n            }\n        });\n        this.onJoin((key, currentPresences, newPresences) => {\n            this.channel._trigger('presence', {\n                event: 'join',\n                key,\n                currentPresences,\n                newPresences,\n            });\n        });\n        this.onLeave((key, currentPresences, leftPresences) => {\n            this.channel._trigger('presence', {\n                event: 'leave',\n                key,\n                currentPresences,\n                leftPresences,\n            });\n        });\n        this.onSync(() => {\n            this.channel._trigger('presence', { event: 'sync' });\n        });\n    }\n    /**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     *\n     * @internal\n     */\n    static syncState(currentState, newState, onJoin, onLeave) {\n        const state = this.cloneDeep(currentState);\n        const transformedState = this.transformState(newState);\n        const joins = {};\n        const leaves = {};\n        this.map(state, (key, presences) => {\n            if (!transformedState[key]) {\n                leaves[key] = presences;\n            }\n        });\n        this.map(transformedState, (key, newPresences) => {\n            const currentPresences = state[key];\n            if (currentPresences) {\n                const newPresenceRefs = newPresences.map((m) => m.presence_ref);\n                const curPresenceRefs = currentPresences.map((m) => m.presence_ref);\n                const joinedPresences = newPresences.filter((m) => curPresenceRefs.indexOf(m.presence_ref) < 0);\n                const leftPresences = currentPresences.filter((m) => newPresenceRefs.indexOf(m.presence_ref) < 0);\n                if (joinedPresences.length > 0) {\n                    joins[key] = joinedPresences;\n                }\n                if (leftPresences.length > 0) {\n                    leaves[key] = leftPresences;\n                }\n            }\n            else {\n                joins[key] = newPresences;\n            }\n        });\n        return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);\n    }\n    /**\n     * Used to sync a diff of presence join and leave events from the\n     * server, as they happen.\n     *\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n     * `onLeave` callbacks to react to a user joining or leaving from a\n     * device.\n     *\n     * @internal\n     */\n    static syncDiff(state, diff, onJoin, onLeave) {\n        const { joins, leaves } = {\n            joins: this.transformState(diff.joins),\n            leaves: this.transformState(diff.leaves),\n        };\n        if (!onJoin) {\n            onJoin = () => { };\n        }\n        if (!onLeave) {\n            onLeave = () => { };\n        }\n        this.map(joins, (key, newPresences) => {\n            var _a;\n            const currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\n            state[key] = this.cloneDeep(newPresences);\n            if (currentPresences.length > 0) {\n                const joinedPresenceRefs = state[key].map((m) => m.presence_ref);\n                const curPresences = currentPresences.filter((m) => joinedPresenceRefs.indexOf(m.presence_ref) < 0);\n                state[key].unshift(...curPresences);\n            }\n            onJoin(key, currentPresences, newPresences);\n        });\n        this.map(leaves, (key, leftPresences) => {\n            let currentPresences = state[key];\n            if (!currentPresences)\n                return;\n            const presenceRefsToRemove = leftPresences.map((m) => m.presence_ref);\n            currentPresences = currentPresences.filter((m) => presenceRefsToRemove.indexOf(m.presence_ref) < 0);\n            state[key] = currentPresences;\n            onLeave(key, currentPresences, leftPresences);\n            if (currentPresences.length === 0)\n                delete state[key];\n        });\n        return state;\n    }\n    /** @internal */\n    static map(obj, func) {\n        return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]));\n    }\n    /**\n     * Remove 'metas' key\n     * Change 'phx_ref' to 'presence_ref'\n     * Remove 'phx_ref' and 'phx_ref_prev'\n     *\n     * @example\n     * // returns {\n     *  abc123: [\n     *    { presence_ref: '2', user_id: 1 },\n     *    { presence_ref: '3', user_id: 2 }\n     *  ]\n     * }\n     * RealtimePresence.transformState({\n     *  abc123: {\n     *    metas: [\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n     *      { phx_ref: '3', user_id: 2 }\n     *    ]\n     *  }\n     * })\n     *\n     * @internal\n     */\n    static transformState(state) {\n        state = this.cloneDeep(state);\n        return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n            const presences = state[key];\n            if ('metas' in presences) {\n                newState[key] = presences.metas.map((presence) => {\n                    presence['presence_ref'] = presence['phx_ref'];\n                    delete presence['phx_ref'];\n                    delete presence['phx_ref_prev'];\n                    return presence;\n                });\n            }\n            else {\n                newState[key] = presences;\n            }\n            return newState;\n        }, {});\n    }\n    /** @internal */\n    static cloneDeep(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n    /** @internal */\n    onJoin(callback) {\n        this.caller.onJoin = callback;\n    }\n    /** @internal */\n    onLeave(callback) {\n        this.caller.onLeave = callback;\n    }\n    /** @internal */\n    onSync(callback) {\n        this.caller.onSync = callback;\n    }\n    /** @internal */\n    inPendingSyncState() {\n        return !this.joinRef || this.joinRef !== this.channel._joinRef();\n    }\n}\n//# sourceMappingURL=RealtimePresence.js.map","import { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants';\nimport Push from './lib/push';\nimport Timer from './lib/timer';\nimport RealtimePresence from './RealtimePresence';\nimport * as Transformers from './lib/transformers';\nimport { httpEndpointURL } from './lib/transformers';\nexport var REALTIME_POSTGRES_CHANGES_LISTEN_EVENT;\n(function (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT) {\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"ALL\"] = \"*\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"INSERT\"] = \"INSERT\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"UPDATE\"] = \"UPDATE\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"DELETE\"] = \"DELETE\";\n})(REALTIME_POSTGRES_CHANGES_LISTEN_EVENT || (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT = {}));\nexport var REALTIME_LISTEN_TYPES;\n(function (REALTIME_LISTEN_TYPES) {\n    REALTIME_LISTEN_TYPES[\"BROADCAST\"] = \"broadcast\";\n    REALTIME_LISTEN_TYPES[\"PRESENCE\"] = \"presence\";\n    REALTIME_LISTEN_TYPES[\"POSTGRES_CHANGES\"] = \"postgres_changes\";\n    REALTIME_LISTEN_TYPES[\"SYSTEM\"] = \"system\";\n})(REALTIME_LISTEN_TYPES || (REALTIME_LISTEN_TYPES = {}));\nexport var REALTIME_SUBSCRIBE_STATES;\n(function (REALTIME_SUBSCRIBE_STATES) {\n    REALTIME_SUBSCRIBE_STATES[\"SUBSCRIBED\"] = \"SUBSCRIBED\";\n    REALTIME_SUBSCRIBE_STATES[\"TIMED_OUT\"] = \"TIMED_OUT\";\n    REALTIME_SUBSCRIBE_STATES[\"CLOSED\"] = \"CLOSED\";\n    REALTIME_SUBSCRIBE_STATES[\"CHANNEL_ERROR\"] = \"CHANNEL_ERROR\";\n})(REALTIME_SUBSCRIBE_STATES || (REALTIME_SUBSCRIBE_STATES = {}));\nexport const REALTIME_CHANNEL_STATES = CHANNEL_STATES;\n/** A channel is the basic building block of Realtime\n * and narrows the scope of data flow to subscribed clients.\n * You can think of a channel as a chatroom where participants are able to see who's online\n * and send and receive messages.\n */\nexport default class RealtimeChannel {\n    constructor(\n    /** Topic name can be any string. */\n    topic, params = { config: {} }, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = {};\n        this.state = CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.subTopic = topic.replace(/^realtime:/i, '');\n        this.params.config = Object.assign({\n            broadcast: { ack: false, self: false },\n            presence: { key: '' },\n            private: false,\n        }, params.config);\n        this.timeout = this.socket.timeout;\n        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new Timer(() => this._rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this._onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this._joinRef()}`);\n            this.state = CHANNEL_STATES.closed;\n            this.socket._remove(this);\n        });\n        this._onError((reason) => {\n            if (this._isLeaving() || this._isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this._isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this._on(CHANNEL_EVENTS.reply, {}, (payload, ref) => {\n            this._trigger(this._replyEventName(ref), payload);\n        });\n        this.presence = new RealtimePresence(this);\n        this.broadcastEndpointURL =\n            httpEndpointURL(this.socket.endPoint) + '/api/broadcast';\n        this.private = this.params.config.private || false;\n    }\n    /** Subscribe registers your client with the server */\n    subscribe(callback, timeout = this.timeout) {\n        var _a, _b;\n        if (!this.socket.isConnected()) {\n            this.socket.connect();\n        }\n        if (this.state == CHANNEL_STATES.closed) {\n            const { config: { broadcast, presence, private: isPrivate }, } = this.params;\n            this._onError((e) => callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, e));\n            this._onClose(() => callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CLOSED));\n            const accessTokenPayload = {};\n            const config = {\n                broadcast,\n                presence,\n                postgres_changes: (_b = (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.map((r) => r.filter)) !== null && _b !== void 0 ? _b : [],\n                private: isPrivate,\n            };\n            if (this.socket.accessTokenValue) {\n                accessTokenPayload.access_token = this.socket.accessTokenValue;\n            }\n            this.updateJoinPayload(Object.assign({ config }, accessTokenPayload));\n            this.joinedOnce = true;\n            this._rejoin(timeout);\n            this.joinPush\n                .receive('ok', async ({ postgres_changes }) => {\n                var _a;\n                this.socket.setAuth();\n                if (postgres_changes === undefined) {\n                    callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.SUBSCRIBED);\n                    return;\n                }\n                else {\n                    const clientPostgresBindings = this.bindings.postgres_changes;\n                    const bindingsLen = (_a = clientPostgresBindings === null || clientPostgresBindings === void 0 ? void 0 : clientPostgresBindings.length) !== null && _a !== void 0 ? _a : 0;\n                    const newPostgresBindings = [];\n                    for (let i = 0; i < bindingsLen; i++) {\n                        const clientPostgresBinding = clientPostgresBindings[i];\n                        const { filter: { event, schema, table, filter }, } = clientPostgresBinding;\n                        const serverPostgresFilter = postgres_changes && postgres_changes[i];\n                        if (serverPostgresFilter &&\n                            serverPostgresFilter.event === event &&\n                            serverPostgresFilter.schema === schema &&\n                            serverPostgresFilter.table === table &&\n                            serverPostgresFilter.filter === filter) {\n                            newPostgresBindings.push(Object.assign(Object.assign({}, clientPostgresBinding), { id: serverPostgresFilter.id }));\n                        }\n                        else {\n                            this.unsubscribe();\n                            this.state = CHANNEL_STATES.errored;\n                            callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, new Error('mismatch between server and client bindings for postgres changes'));\n                            return;\n                        }\n                    }\n                    this.bindings.postgres_changes = newPostgresBindings;\n                    callback && callback(REALTIME_SUBSCRIBE_STATES.SUBSCRIBED);\n                    return;\n                }\n            })\n                .receive('error', (error) => {\n                this.state = CHANNEL_STATES.errored;\n                callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, new Error(JSON.stringify(Object.values(error).join(', ') || 'error')));\n                return;\n            })\n                .receive('timeout', () => {\n                callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.TIMED_OUT);\n                return;\n            });\n        }\n        return this;\n    }\n    presenceState() {\n        return this.presence.state;\n    }\n    async track(payload, opts = {}) {\n        return await this.send({\n            type: 'presence',\n            event: 'track',\n            payload,\n        }, opts.timeout || this.timeout);\n    }\n    async untrack(opts = {}) {\n        return await this.send({\n            type: 'presence',\n            event: 'untrack',\n        }, opts);\n    }\n    on(type, filter, callback) {\n        return this._on(type, filter, callback);\n    }\n    /**\n     * Sends a message into the channel.\n     *\n     * @param args Arguments to send to channel\n     * @param args.type The type of event to send\n     * @param args.event The name of the event being sent\n     * @param args.payload Payload to be sent\n     * @param opts Options to be used during the send process\n     */\n    async send(args, opts = {}) {\n        var _a, _b;\n        if (!this._canPush() && args.type === 'broadcast') {\n            const { event, payload: endpoint_payload } = args;\n            const authorization = this.socket.accessTokenValue\n                ? `Bearer ${this.socket.accessTokenValue}`\n                : '';\n            const options = {\n                method: 'POST',\n                headers: {\n                    Authorization: authorization,\n                    apikey: this.socket.apiKey ? this.socket.apiKey : '',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    messages: [\n                        {\n                            topic: this.subTopic,\n                            event,\n                            payload: endpoint_payload,\n                            private: this.private,\n                        },\n                    ],\n                }),\n            };\n            try {\n                const response = await this._fetchWithTimeout(this.broadcastEndpointURL, options, (_a = opts.timeout) !== null && _a !== void 0 ? _a : this.timeout);\n                await ((_b = response.body) === null || _b === void 0 ? void 0 : _b.cancel());\n                return response.ok ? 'ok' : 'error';\n            }\n            catch (error) {\n                if (error.name === 'AbortError') {\n                    return 'timed out';\n                }\n                else {\n                    return 'error';\n                }\n            }\n        }\n        else {\n            return new Promise((resolve) => {\n                var _a, _b, _c;\n                const push = this._push(args.type, args, opts.timeout || this.timeout);\n                if (args.type === 'broadcast' && !((_c = (_b = (_a = this.params) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.broadcast) === null || _c === void 0 ? void 0 : _c.ack)) {\n                    resolve('ok');\n                }\n                push.receive('ok', () => resolve('ok'));\n                push.receive('error', () => resolve('error'));\n                push.receive('timeout', () => resolve('timed out'));\n            });\n        }\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel.\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = CHANNEL_STATES.leaving;\n        const onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this._trigger(CHANNEL_EVENTS.close, 'leave', this._joinRef());\n        };\n        this.joinPush.destroy();\n        let leavePush = null;\n        return new Promise((resolve) => {\n            leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n            leavePush\n                .receive('ok', () => {\n                onClose();\n                resolve('ok');\n            })\n                .receive('timeout', () => {\n                onClose();\n                resolve('timed out');\n            })\n                .receive('error', () => {\n                resolve('error');\n            });\n            leavePush.send();\n            if (!this._canPush()) {\n                leavePush.trigger('ok', {});\n            }\n        }).finally(() => {\n            leavePush === null || leavePush === void 0 ? void 0 : leavePush.destroy();\n        });\n    }\n    /**\n     * Teardown the channel.\n     *\n     * Destroys and stops related timers.\n     */\n    teardown() {\n        this.pushBuffer.forEach((push) => push.destroy());\n        this.rejoinTimer && clearTimeout(this.rejoinTimer.timer);\n        this.joinPush.destroy();\n    }\n    /** @internal */\n    async _fetchWithTimeout(url, options, timeout) {\n        const controller = new AbortController();\n        const id = setTimeout(() => controller.abort(), timeout);\n        const response = await this.socket.fetch(url, Object.assign(Object.assign({}, options), { signal: controller.signal }));\n        clearTimeout(id);\n        return response;\n    }\n    /** @internal */\n    _push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new Push(this, event, payload, timeout);\n        if (this._canPush()) {\n            pushEvent.send();\n        }\n        else {\n            pushEvent.startTimeout();\n            this.pushBuffer.push(pushEvent);\n        }\n        return pushEvent;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     *\n     * @internal\n     */\n    _onMessage(_event, payload, _ref) {\n        return payload;\n    }\n    /** @internal */\n    _isMember(topic) {\n        return this.topic === topic;\n    }\n    /** @internal */\n    _joinRef() {\n        return this.joinPush.ref;\n    }\n    /** @internal */\n    _trigger(type, payload, ref) {\n        var _a, _b;\n        const typeLower = type.toLocaleLowerCase();\n        const { close, error, leave, join } = CHANNEL_EVENTS;\n        const events = [close, error, leave, join];\n        if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {\n            return;\n        }\n        let handledPayload = this._onMessage(typeLower, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        if (['insert', 'update', 'delete'].includes(typeLower)) {\n            (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.filter((bind) => {\n                var _a, _b, _c;\n                return (((_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event) === '*' ||\n                    ((_c = (_b = bind.filter) === null || _b === void 0 ? void 0 : _b.event) === null || _c === void 0 ? void 0 : _c.toLocaleLowerCase()) === typeLower);\n            }).map((bind) => bind.callback(handledPayload, ref));\n        }\n        else {\n            (_b = this.bindings[typeLower]) === null || _b === void 0 ? void 0 : _b.filter((bind) => {\n                var _a, _b, _c, _d, _e, _f;\n                if (['broadcast', 'presence', 'postgres_changes'].includes(typeLower)) {\n                    if ('id' in bind) {\n                        const bindId = bind.id;\n                        const bindEvent = (_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event;\n                        return (bindId &&\n                            ((_b = payload.ids) === null || _b === void 0 ? void 0 : _b.includes(bindId)) &&\n                            (bindEvent === '*' ||\n                                (bindEvent === null || bindEvent === void 0 ? void 0 : bindEvent.toLocaleLowerCase()) ===\n                                    ((_c = payload.data) === null || _c === void 0 ? void 0 : _c.type.toLocaleLowerCase())));\n                    }\n                    else {\n                        const bindEvent = (_e = (_d = bind === null || bind === void 0 ? void 0 : bind.filter) === null || _d === void 0 ? void 0 : _d.event) === null || _e === void 0 ? void 0 : _e.toLocaleLowerCase();\n                        return (bindEvent === '*' ||\n                            bindEvent === ((_f = payload === null || payload === void 0 ? void 0 : payload.event) === null || _f === void 0 ? void 0 : _f.toLocaleLowerCase()));\n                    }\n                }\n                else {\n                    return bind.type.toLocaleLowerCase() === typeLower;\n                }\n            }).map((bind) => {\n                if (typeof handledPayload === 'object' && 'ids' in handledPayload) {\n                    const postgresChanges = handledPayload.data;\n                    const { schema, table, commit_timestamp, type, errors } = postgresChanges;\n                    const enrichedPayload = {\n                        schema: schema,\n                        table: table,\n                        commit_timestamp: commit_timestamp,\n                        eventType: type,\n                        new: {},\n                        old: {},\n                        errors: errors,\n                    };\n                    handledPayload = Object.assign(Object.assign({}, enrichedPayload), this._getPayloadRecords(postgresChanges));\n                }\n                bind.callback(handledPayload, ref);\n            });\n        }\n    }\n    /** @internal */\n    _isClosed() {\n        return this.state === CHANNEL_STATES.closed;\n    }\n    /** @internal */\n    _isJoined() {\n        return this.state === CHANNEL_STATES.joined;\n    }\n    /** @internal */\n    _isJoining() {\n        return this.state === CHANNEL_STATES.joining;\n    }\n    /** @internal */\n    _isLeaving() {\n        return this.state === CHANNEL_STATES.leaving;\n    }\n    /** @internal */\n    _replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    /** @internal */\n    _on(type, filter, callback) {\n        const typeLower = type.toLocaleLowerCase();\n        const binding = {\n            type: typeLower,\n            filter: filter,\n            callback: callback,\n        };\n        if (this.bindings[typeLower]) {\n            this.bindings[typeLower].push(binding);\n        }\n        else {\n            this.bindings[typeLower] = [binding];\n        }\n        return this;\n    }\n    /** @internal */\n    _off(type, filter) {\n        const typeLower = type.toLocaleLowerCase();\n        this.bindings[typeLower] = this.bindings[typeLower].filter((bind) => {\n            var _a;\n            return !(((_a = bind.type) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase()) === typeLower &&\n                RealtimeChannel.isEqual(bind.filter, filter));\n        });\n        return this;\n    }\n    /** @internal */\n    static isEqual(obj1, obj2) {\n        if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n            return false;\n        }\n        for (const k in obj1) {\n            if (obj1[k] !== obj2[k]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /** @internal */\n    _rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this._rejoin();\n        }\n    }\n    /**\n     * Registers a callback that will be executed when the channel closes.\n     *\n     * @internal\n     */\n    _onClose(callback) {\n        this._on(CHANNEL_EVENTS.close, {}, callback);\n    }\n    /**\n     * Registers a callback that will be executed when the channel encounteres an error.\n     *\n     * @internal\n     */\n    _onError(callback) {\n        this._on(CHANNEL_EVENTS.error, {}, (reason) => callback(reason));\n    }\n    /**\n     * Returns `true` if the socket is connected and the channel has been joined.\n     *\n     * @internal\n     */\n    _canPush() {\n        return this.socket.isConnected() && this._isJoined();\n    }\n    /** @internal */\n    _rejoin(timeout = this.timeout) {\n        if (this._isLeaving()) {\n            return;\n        }\n        this.socket._leaveOpenTopic(this.topic);\n        this.state = CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    /** @internal */\n    _getPayloadRecords(payload) {\n        const records = {\n            new: {},\n            old: {},\n        };\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n            records.new = Transformers.convertChangeData(payload.columns, payload.record);\n        }\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n            records.old = Transformers.convertChangeData(payload.columns, payload.old_record);\n        }\n        return records;\n    }\n}\n//# sourceMappingURL=RealtimeChannel.js.map","import { WebSocket } from 'isows';\nimport { CHANNEL_EVENTS, CONNECTION_STATE, DEFAULT_VERSION, DEFAULT_TIMEOUT, SOCKET_STATES, TRANSPORTS, VSN, WS_CLOSE_NORMAL, } from './lib/constants';\nimport Serializer from './lib/serializer';\nimport Timer from './lib/timer';\nimport { httpEndpointURL } from './lib/transformers';\nimport RealtimeChannel from './RealtimeChannel';\nconst noop = () => { };\nconst WORKER_SCRIPT = `\n  addEventListener(\"message\", (e) => {\n    if (e.data.event === \"start\") {\n      setInterval(() => postMessage({ event: \"keepAlive\" }), e.data.interval);\n    }\n  });`;\nexport default class RealtimeClient {\n    /**\n     * Initializes the Socket.\n     *\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n     * @param httpEndpoint The string HTTP endpoint, ie, \"https://example.com\", \"/\" (inherited host & protocol)\n     * @param options.transport The Websocket Transport, for example WebSocket. This can be a custom implementation\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n     * @param options.params The optional params to pass when connecting.\n     * @param options.headers Deprecated: headers cannot be set on websocket connections and this option will be removed in the future.\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n     * @param options.logLevel Sets the log level for Realtime\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n     * @param options.worker Use Web Worker to set a side flow. Defaults to false.\n     * @param options.workerUrl The URL of the worker script. Defaults to https://realtime.supabase.com/worker.js that includes a heartbeat event call to keep the connection alive.\n     */\n    constructor(endPoint, options) {\n        var _a;\n        this.accessTokenValue = null;\n        this.apiKey = null;\n        this.channels = new Array();\n        this.endPoint = '';\n        this.httpEndpoint = '';\n        /** @deprecated headers cannot be set on websocket connections */\n        this.headers = {};\n        this.params = {};\n        this.timeout = DEFAULT_TIMEOUT;\n        this.heartbeatIntervalMs = 25000;\n        this.heartbeatTimer = undefined;\n        this.pendingHeartbeatRef = null;\n        this.heartbeatCallback = noop;\n        this.ref = 0;\n        this.logger = noop;\n        this.conn = null;\n        this.sendBuffer = [];\n        this.serializer = new Serializer();\n        this.stateChangeCallbacks = {\n            open: [],\n            close: [],\n            error: [],\n            message: [],\n        };\n        this.accessToken = null;\n        /**\n         * Use either custom fetch, if provided, or default fetch to make HTTP requests\n         *\n         * @internal\n         */\n        this._resolveFetch = (customFetch) => {\n            let _fetch;\n            if (customFetch) {\n                _fetch = customFetch;\n            }\n            else if (typeof fetch === 'undefined') {\n                _fetch = (...args) => import('@supabase/node-fetch').then(({ default: fetch }) => fetch(...args));\n            }\n            else {\n                _fetch = fetch;\n            }\n            return (...args) => _fetch(...args);\n        };\n        this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`;\n        this.httpEndpoint = httpEndpointURL(endPoint);\n        if (options === null || options === void 0 ? void 0 : options.transport) {\n            this.transport = options.transport;\n        }\n        else {\n            this.transport = null;\n        }\n        if (options === null || options === void 0 ? void 0 : options.params)\n            this.params = options.params;\n        if (options === null || options === void 0 ? void 0 : options.timeout)\n            this.timeout = options.timeout;\n        if (options === null || options === void 0 ? void 0 : options.logger)\n            this.logger = options.logger;\n        if ((options === null || options === void 0 ? void 0 : options.logLevel) || (options === null || options === void 0 ? void 0 : options.log_level)) {\n            this.logLevel = options.logLevel || options.log_level;\n            this.params = Object.assign(Object.assign({}, this.params), { log_level: this.logLevel });\n        }\n        if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs)\n            this.heartbeatIntervalMs = options.heartbeatIntervalMs;\n        const accessTokenValue = (_a = options === null || options === void 0 ? void 0 : options.params) === null || _a === void 0 ? void 0 : _a.apikey;\n        if (accessTokenValue) {\n            this.accessTokenValue = accessTokenValue;\n            this.apiKey = accessTokenValue;\n        }\n        this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs)\n            ? options.reconnectAfterMs\n            : (tries) => {\n                return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n            };\n        this.encode = (options === null || options === void 0 ? void 0 : options.encode)\n            ? options.encode\n            : (payload, callback) => {\n                return callback(JSON.stringify(payload));\n            };\n        this.decode = (options === null || options === void 0 ? void 0 : options.decode)\n            ? options.decode\n            : this.serializer.decode.bind(this.serializer);\n        this.reconnectTimer = new Timer(async () => {\n            this.disconnect();\n            this.connect();\n        }, this.reconnectAfterMs);\n        this.fetch = this._resolveFetch(options === null || options === void 0 ? void 0 : options.fetch);\n        if (options === null || options === void 0 ? void 0 : options.worker) {\n            if (typeof window !== 'undefined' && !window.Worker) {\n                throw new Error('Web Worker is not supported');\n            }\n            this.worker = (options === null || options === void 0 ? void 0 : options.worker) || false;\n            this.workerUrl = options === null || options === void 0 ? void 0 : options.workerUrl;\n        }\n        this.accessToken = (options === null || options === void 0 ? void 0 : options.accessToken) || null;\n    }\n    /**\n     * Connects the socket, unless already connected.\n     */\n    connect() {\n        if (this.conn) {\n            return;\n        }\n        if (!this.transport) {\n            this.transport = WebSocket;\n        }\n        if (!this.transport) {\n            throw new Error('No transport provided');\n        }\n        this.conn = new this.transport(this.endpointURL());\n        this.setupConnection();\n    }\n    /**\n     * Returns the URL of the websocket.\n     * @returns string The URL of the websocket.\n     */\n    endpointURL() {\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: VSN }));\n    }\n    /**\n     * Disconnects the socket.\n     *\n     * @param code A numeric status code to send on disconnect.\n     * @param reason A custom reason for the disconnect.\n     */\n    disconnect(code, reason) {\n        if (this.conn) {\n            this.conn.onclose = function () { }; // noop\n            if (code) {\n                this.conn.close(code, reason !== null && reason !== void 0 ? reason : '');\n            }\n            else {\n                this.conn.close();\n            }\n            this.conn = null;\n            // remove open handles\n            this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n            this.reconnectTimer.reset();\n            this.channels.forEach((channel) => channel.teardown());\n        }\n    }\n    /**\n     * Returns all created channels\n     */\n    getChannels() {\n        return this.channels;\n    }\n    /**\n     * Unsubscribes and removes a single channel\n     * @param channel A RealtimeChannel instance\n     */\n    async removeChannel(channel) {\n        const status = await channel.unsubscribe();\n        if (this.channels.length === 0) {\n            this.disconnect();\n        }\n        return status;\n    }\n    /**\n     * Unsubscribes and removes all channels\n     */\n    async removeAllChannels() {\n        const values_1 = await Promise.all(this.channels.map((channel) => channel.unsubscribe()));\n        this.channels = [];\n        this.disconnect();\n        return values_1;\n    }\n    /**\n     * Logs the message.\n     *\n     * For customized logging, `this.logger` can be overridden.\n     */\n    log(kind, msg, data) {\n        this.logger(kind, msg, data);\n    }\n    /**\n     * Returns the current state of the socket.\n     */\n    connectionState() {\n        switch (this.conn && this.conn.readyState) {\n            case SOCKET_STATES.connecting:\n                return CONNECTION_STATE.Connecting;\n            case SOCKET_STATES.open:\n                return CONNECTION_STATE.Open;\n            case SOCKET_STATES.closing:\n                return CONNECTION_STATE.Closing;\n            default:\n                return CONNECTION_STATE.Closed;\n        }\n    }\n    /**\n     * Returns `true` is the connection is open.\n     */\n    isConnected() {\n        return this.connectionState() === CONNECTION_STATE.Open;\n    }\n    channel(topic, params = { config: {} }) {\n        const realtimeTopic = `realtime:${topic}`;\n        const exists = this.getChannels().find((c) => c.topic === realtimeTopic);\n        if (!exists) {\n            const chan = new RealtimeChannel(`realtime:${topic}`, params, this);\n            this.channels.push(chan);\n            return chan;\n        }\n        else {\n            return exists;\n        }\n    }\n    /**\n     * Push out a message if the socket is connected.\n     *\n     * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\n     */\n    push(data) {\n        const { topic, event, payload, ref } = data;\n        const callback = () => {\n            this.encode(data, (result) => {\n                var _a;\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\n            });\n        };\n        this.log('push', `${topic} ${event} (${ref})`, payload);\n        if (this.isConnected()) {\n            callback();\n        }\n        else {\n            this.sendBuffer.push(callback);\n        }\n    }\n    /**\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n     *\n     * If param is null it will use the `accessToken` callback function or the token set on the client.\n     *\n     * On callback used, it will set the value of the token internal to the client.\n     *\n     * @param token A JWT string to override the token set on the client.\n     */\n    async setAuth(token = null) {\n        let tokenToSend = token ||\n            (this.accessToken && (await this.accessToken())) ||\n            this.accessTokenValue;\n        if (this.accessTokenValue != tokenToSend) {\n            this.accessTokenValue = tokenToSend;\n            this.channels.forEach((channel) => {\n                const payload = {\n                    access_token: tokenToSend,\n                    version: DEFAULT_VERSION,\n                };\n                tokenToSend && channel.updateJoinPayload(payload);\n                if (channel.joinedOnce && channel._isJoined()) {\n                    channel._push(CHANNEL_EVENTS.access_token, {\n                        access_token: tokenToSend,\n                    });\n                }\n            });\n        }\n    }\n    /**\n     * Sends a heartbeat message if the socket is connected.\n     */\n    async sendHeartbeat() {\n        var _a;\n        if (!this.isConnected()) {\n            this.heartbeatCallback('disconnected');\n            return;\n        }\n        if (this.pendingHeartbeatRef) {\n            this.pendingHeartbeatRef = null;\n            this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\n            this.heartbeatCallback('timeout');\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(WS_CLOSE_NORMAL, 'hearbeat timeout');\n            return;\n        }\n        this.pendingHeartbeatRef = this._makeRef();\n        this.push({\n            topic: 'phoenix',\n            event: 'heartbeat',\n            payload: {},\n            ref: this.pendingHeartbeatRef,\n        });\n        this.heartbeatCallback('sent');\n        await this.setAuth();\n    }\n    onHeartbeat(callback) {\n        this.heartbeatCallback = callback;\n    }\n    /**\n     * Flushes send buffer\n     */\n    flushSendBuffer() {\n        if (this.isConnected() && this.sendBuffer.length > 0) {\n            this.sendBuffer.forEach((callback) => callback());\n            this.sendBuffer = [];\n        }\n    }\n    /**\n     * Return the next message ref, accounting for overflows\n     *\n     * @internal\n     */\n    _makeRef() {\n        let newRef = this.ref + 1;\n        if (newRef === this.ref) {\n            this.ref = 0;\n        }\n        else {\n            this.ref = newRef;\n        }\n        return this.ref.toString();\n    }\n    /**\n     * Unsubscribe from channels with the specified topic.\n     *\n     * @internal\n     */\n    _leaveOpenTopic(topic) {\n        let dupChannel = this.channels.find((c) => c.topic === topic && (c._isJoined() || c._isJoining()));\n        if (dupChannel) {\n            this.log('transport', `leaving duplicate topic \"${topic}\"`);\n            dupChannel.unsubscribe();\n        }\n    }\n    /**\n     * Removes a subscription from the socket.\n     *\n     * @param channel An open subscription.\n     *\n     * @internal\n     */\n    _remove(channel) {\n        this.channels = this.channels.filter((c) => c.topic !== channel.topic);\n    }\n    /**\n     * Sets up connection handlers.\n     *\n     * @internal\n     */\n    setupConnection() {\n        if (this.conn) {\n            this.conn.binaryType = 'arraybuffer';\n            this.conn.onopen = () => this._onConnOpen();\n            this.conn.onerror = (error) => this._onConnError(error);\n            this.conn.onmessage = (event) => this._onConnMessage(event);\n            this.conn.onclose = (event) => this._onConnClose(event);\n        }\n    }\n    /** @internal */\n    _onConnMessage(rawMessage) {\n        this.decode(rawMessage.data, (msg) => {\n            let { topic, event, payload, ref } = msg;\n            if (topic === 'phoenix' && event === 'phx_reply') {\n                this.heartbeatCallback(msg.payload.status == 'ok' ? 'ok' : 'error');\n            }\n            if (ref && ref === this.pendingHeartbeatRef) {\n                this.pendingHeartbeatRef = null;\n            }\n            this.log('receive', `${payload.status || ''} ${topic} ${event} ${(ref && '(' + ref + ')') || ''}`, payload);\n            Array.from(this.channels)\n                .filter((channel) => channel._isMember(topic))\n                .forEach((channel) => channel._trigger(event, payload, ref));\n            this.stateChangeCallbacks.message.forEach((callback) => callback(msg));\n        });\n    }\n    /** @internal */\n    _onConnOpen() {\n        this.log('transport', `connected to ${this.endpointURL()}`);\n        this.flushSendBuffer();\n        this.reconnectTimer.reset();\n        if (!this.worker) {\n            this._startHeartbeat();\n        }\n        else {\n            if (!this.workerRef) {\n                this._startWorkerHeartbeat();\n            }\n        }\n        this.stateChangeCallbacks.open.forEach((callback) => callback());\n    }\n    /** @internal */\n    _startHeartbeat() {\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(() => this.sendHeartbeat(), this.heartbeatIntervalMs);\n    }\n    /** @internal */\n    _startWorkerHeartbeat() {\n        if (this.workerUrl) {\n            this.log('worker', `starting worker for from ${this.workerUrl}`);\n        }\n        else {\n            this.log('worker', `starting default worker`);\n        }\n        const objectUrl = this._workerObjectUrl(this.workerUrl);\n        this.workerRef = new Worker(objectUrl);\n        this.workerRef.onerror = (error) => {\n            this.log('worker', 'worker error', error.message);\n            this.workerRef.terminate();\n        };\n        this.workerRef.onmessage = (event) => {\n            if (event.data.event === 'keepAlive') {\n                this.sendHeartbeat();\n            }\n        };\n        this.workerRef.postMessage({\n            event: 'start',\n            interval: this.heartbeatIntervalMs,\n        });\n    }\n    /** @internal */\n    _onConnClose(event) {\n        this.log('transport', 'close', event);\n        this._triggerChanError();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.reconnectTimer.scheduleTimeout();\n        this.stateChangeCallbacks.close.forEach((callback) => callback(event));\n    }\n    /** @internal */\n    _onConnError(error) {\n        this.log('transport', `${error}`);\n        this._triggerChanError();\n        this.stateChangeCallbacks.error.forEach((callback) => callback(error));\n    }\n    /** @internal */\n    _triggerChanError() {\n        this.channels.forEach((channel) => channel._trigger(CHANNEL_EVENTS.error));\n    }\n    /** @internal */\n    _appendParams(url, params) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n        const prefix = url.match(/\\?/) ? '&' : '?';\n        const query = new URLSearchParams(params);\n        return `${url}${prefix}${query}`;\n    }\n    _workerObjectUrl(url) {\n        let result_url;\n        if (url) {\n            result_url = url;\n        }\n        else {\n            const blob = new Blob([WORKER_SCRIPT], { type: 'application/javascript' });\n            result_url = URL.createObjectURL(blob);\n        }\n        return result_url;\n    }\n}\n//# sourceMappingURL=RealtimeClient.js.map","export class StorageError extends Error {\n    constructor(message) {\n        super(message);\n        this.__isStorageError = true;\n        this.name = 'StorageError';\n    }\n}\nexport function isStorageError(error) {\n    return typeof error === 'object' && error !== null && '__isStorageError' in error;\n}\nexport class StorageApiError extends StorageError {\n    constructor(message, status) {\n        super(message);\n        this.name = 'StorageApiError';\n        this.status = status;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n        };\n    }\n}\nexport class StorageUnknownError extends StorageError {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'StorageUnknownError';\n        this.originalError = originalError;\n    }\n}\n//# sourceMappingURL=errors.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => import('@supabase/node-fetch').then(({ default: fetch }) => fetch(...args));\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const resolveResponse = () => __awaiter(void 0, void 0, void 0, function* () {\n    if (typeof Response === 'undefined') {\n        // @ts-ignore\n        return (yield import('@supabase/node-fetch')).Response;\n    }\n    return Response;\n});\nexport const recursiveToCamel = (item) => {\n    if (Array.isArray(item)) {\n        return item.map((el) => recursiveToCamel(el));\n    }\n    else if (typeof item === 'function' || item !== Object(item)) {\n        return item;\n    }\n    const result = {};\n    Object.entries(item).forEach(([key, value]) => {\n        const newKey = key.replace(/([-_][a-z])/gi, (c) => c.toUpperCase().replace(/[-_]/g, ''));\n        result[newKey] = recursiveToCamel(value);\n    });\n    return result;\n};\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { StorageApiError, StorageUnknownError } from './errors';\nimport { resolveResponse } from './helpers';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject, options) => __awaiter(void 0, void 0, void 0, function* () {\n    const Res = yield resolveResponse();\n    if (error instanceof Res && !(options === null || options === void 0 ? void 0 : options.noResolveJson)) {\n        error\n            .json()\n            .then((err) => {\n            reject(new StorageApiError(_getErrorMessage(err), error.status || 500));\n        })\n            .catch((err) => {\n            reject(new StorageUnknownError(_getErrorMessage(err), err));\n        });\n    }\n    else {\n        reject(new StorageUnknownError(_getErrorMessage(error), error));\n    }\n});\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\n    if (body) {\n        params.body = JSON.stringify(body);\n    }\n    return Object.assign(Object.assign({}, params), parameters);\n};\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return result;\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject, options));\n        });\n    });\n}\nexport function get(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options, parameters);\n    });\n}\nexport function post(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, parameters, body);\n    });\n}\nexport function put(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, parameters, body);\n    });\n}\nexport function head(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'HEAD', url, Object.assign(Object.assign({}, options), { noResolveJson: true }), parameters);\n    });\n}\nexport function remove(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, parameters, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isStorageError, StorageError, StorageUnknownError } from '../lib/errors';\nimport { get, head, post, remove } from '../lib/fetch';\nimport { recursiveToCamel, resolveFetch } from '../lib/helpers';\nconst DEFAULT_SEARCH_OPTIONS = {\n    limit: 100,\n    offset: 0,\n    sortBy: {\n        column: 'name',\n        order: 'asc',\n    },\n};\nconst DEFAULT_FILE_OPTIONS = {\n    cacheControl: '3600',\n    contentType: 'text/plain;charset=UTF-8',\n    upsert: false,\n};\nexport default class StorageFileApi {\n    constructor(url, headers = {}, bucketId, fetch) {\n        this.url = url;\n        this.headers = headers;\n        this.bucketId = bucketId;\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n     *\n     * @param method HTTP method.\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    uploadOrUpdate(method, path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let body;\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\n                let headers = Object.assign(Object.assign({}, this.headers), (method === 'POST' && { 'x-upsert': String(options.upsert) }));\n                const metadata = options.metadata;\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    if (metadata) {\n                        body.append('metadata', this.encodeMetadata(metadata));\n                    }\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                    if (metadata) {\n                        body.append('metadata', this.encodeMetadata(metadata));\n                    }\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                    if (metadata) {\n                        headers['x-metadata'] = this.toBase64(this.encodeMetadata(metadata));\n                    }\n                }\n                if (fileOptions === null || fileOptions === void 0 ? void 0 : fileOptions.headers) {\n                    headers = Object.assign(Object.assign({}, headers), fileOptions.headers);\n                }\n                const cleanPath = this._removeEmptyFolders(path);\n                const _path = this._getFinalPath(cleanPath);\n                const res = yield this.fetch(`${this.url}/object/${_path}`, Object.assign({ method, body: body, headers }, ((options === null || options === void 0 ? void 0 : options.duplex) ? { duplex: options.duplex } : {})));\n                const data = yield res.json();\n                if (res.ok) {\n                    return {\n                        data: { path: cleanPath, id: data.Id, fullPath: data.Key },\n                        error: null,\n                    };\n                }\n                else {\n                    const error = data;\n                    return { data: null, error };\n                }\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Uploads a file to an existing bucket.\n     *\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    upload(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('POST', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Upload a file with a token generated from `createSignedUploadUrl`.\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param token The token generated from `createSignedUploadUrl`\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    uploadToSignedUrl(path, token, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const cleanPath = this._removeEmptyFolders(path);\n            const _path = this._getFinalPath(cleanPath);\n            const url = new URL(this.url + `/object/upload/sign/${_path}`);\n            url.searchParams.set('token', token);\n            try {\n                let body;\n                const options = Object.assign({ upsert: DEFAULT_FILE_OPTIONS.upsert }, fileOptions);\n                const headers = Object.assign(Object.assign({}, this.headers), { 'x-upsert': String(options.upsert) });\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                }\n                const res = yield this.fetch(url.toString(), {\n                    method: 'PUT',\n                    body: body,\n                    headers,\n                });\n                const data = yield res.json();\n                if (res.ok) {\n                    return {\n                        data: { path: cleanPath, fullPath: data.Key },\n                        error: null,\n                    };\n                }\n                else {\n                    const error = data;\n                    return { data: null, error };\n                }\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a signed upload URL.\n     * Signed upload URLs can be used to upload files to the bucket without further authentication.\n     * They are valid for 2 hours.\n     * @param path The file path, including the current file name. For example `folder/image.png`.\n     * @param options.upsert If set to true, allows the file to be overwritten if it already exists.\n     */\n    createSignedUploadUrl(path, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let _path = this._getFinalPath(path);\n                const headers = Object.assign({}, this.headers);\n                if (options === null || options === void 0 ? void 0 : options.upsert) {\n                    headers['x-upsert'] = 'true';\n                }\n                const data = yield post(this.fetch, `${this.url}/object/upload/sign/${_path}`, {}, { headers });\n                const url = new URL(this.url + data.url);\n                const token = url.searchParams.get('token');\n                if (!token) {\n                    throw new StorageError('No token returned by API');\n                }\n                return { data: { signedUrl: url.toString(), path, token }, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Replaces an existing file at the specified path with a new one.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    update(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('PUT', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Moves an existing file to a new path in the same bucket.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\n     * @param options The destination options.\n     */\n    move(fromPath, toPath, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/move`, {\n                    bucketId: this.bucketId,\n                    sourceKey: fromPath,\n                    destinationKey: toPath,\n                    destinationBucket: options === null || options === void 0 ? void 0 : options.destinationBucket,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Copies an existing file to a new path in the same bucket.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n     * @param options The destination options.\n     */\n    copy(fromPath, toPath, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/copy`, {\n                    bucketId: this.bucketId,\n                    sourceKey: fromPath,\n                    destinationKey: toPath,\n                    destinationBucket: options === null || options === void 0 ? void 0 : options.destinationBucket,\n                }, { headers: this.headers });\n                return { data: { path: data.Key }, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a signed URL. Use a signed URL to share a file for a fixed amount of time.\n     *\n     * @param path The file path, including the current file name. For example `folder/image.png`.\n     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    createSignedUrl(path, expiresIn, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let _path = this._getFinalPath(path);\n                let data = yield post(this.fetch, `${this.url}/object/sign/${_path}`, Object.assign({ expiresIn }, ((options === null || options === void 0 ? void 0 : options.transform) ? { transform: options.transform } : {})), { headers: this.headers });\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n                    ? `&download=${options.download === true ? '' : options.download}`\n                    : '';\n                const signedUrl = encodeURI(`${this.url}${data.signedURL}${downloadQueryParam}`);\n                data = { signedUrl };\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time.\n     *\n     * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\n     * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     */\n    createSignedUrls(paths, expiresIn, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/sign/${this.bucketId}`, { expiresIn, paths }, { headers: this.headers });\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n                    ? `&download=${options.download === true ? '' : options.download}`\n                    : '';\n                return {\n                    data: data.map((datum) => (Object.assign(Object.assign({}, datum), { signedUrl: datum.signedURL\n                            ? encodeURI(`${this.url}${datum.signedURL}${downloadQueryParam}`)\n                            : null }))),\n                    error: null,\n                };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead.\n     *\n     * @param path The full path and file name of the file to be downloaded. For example `folder/image.png`.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    download(path, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\n            const renderPath = wantsTransformation ? 'render/image/authenticated' : 'object';\n            const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\n            const queryString = transformationQuery ? `?${transformationQuery}` : '';\n            try {\n                const _path = this._getFinalPath(path);\n                const res = yield get(this.fetch, `${this.url}/${renderPath}/${_path}${queryString}`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                });\n                const data = yield res.blob();\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing file.\n     * @param path\n     */\n    info(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const _path = this._getFinalPath(path);\n            try {\n                const data = yield get(this.fetch, `${this.url}/object/info/${_path}`, {\n                    headers: this.headers,\n                });\n                return { data: recursiveToCamel(data), error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Checks the existence of a file.\n     * @param path\n     */\n    exists(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const _path = this._getFinalPath(path);\n            try {\n                yield head(this.fetch, `${this.url}/object/${_path}`, {\n                    headers: this.headers,\n                });\n                return { data: true, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error) && error instanceof StorageUnknownError) {\n                    const originalError = error.originalError;\n                    if ([400, 404].includes(originalError === null || originalError === void 0 ? void 0 : originalError.status)) {\n                        return { data: false, error };\n                    }\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.\n     * This function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset.\n     *\n     * @param path The path and name of the file to generate the public URL for. For example `folder/image.png`.\n     * @param options.download Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    getPublicUrl(path, options) {\n        const _path = this._getFinalPath(path);\n        const _queryString = [];\n        const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n            ? `download=${options.download === true ? '' : options.download}`\n            : '';\n        if (downloadQueryParam !== '') {\n            _queryString.push(downloadQueryParam);\n        }\n        const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\n        const renderPath = wantsTransformation ? 'render/image' : 'object';\n        const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\n        if (transformationQuery !== '') {\n            _queryString.push(transformationQuery);\n        }\n        let queryString = _queryString.join('&');\n        if (queryString !== '') {\n            queryString = `?${queryString}`;\n        }\n        return {\n            data: { publicUrl: encodeURI(`${this.url}/${renderPath}/public/${_path}${queryString}`) },\n        };\n    }\n    /**\n     * Deletes files within the same bucket\n     *\n     * @param paths An array of files to delete, including the path and file name. For example [`'folder/image.png'`].\n     */\n    remove(paths) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get file metadata\n     * @param id the file id to retrieve metadata\n     */\n    // async getMetadata(\n    //   id: string\n    // ): Promise<\n    //   | {\n    //       data: Metadata\n    //       error: null\n    //     }\n    //   | {\n    //       data: null\n    //       error: StorageError\n    //     }\n    // > {\n    //   try {\n    //     const data = await get(this.fetch, `${this.url}/metadata/${id}`, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     if (isStorageError(error)) {\n    //       return { data: null, error }\n    //     }\n    //     throw error\n    //   }\n    // }\n    /**\n     * Update file metadata\n     * @param id the file id to update metadata\n     * @param meta the new file metadata\n     */\n    // async updateMetadata(\n    //   id: string,\n    //   meta: Metadata\n    // ): Promise<\n    //   | {\n    //       data: Metadata\n    //       error: null\n    //     }\n    //   | {\n    //       data: null\n    //       error: StorageError\n    //     }\n    // > {\n    //   try {\n    //     const data = await post(\n    //       this.fetch,\n    //       `${this.url}/metadata/${id}`,\n    //       { ...meta },\n    //       { headers: this.headers }\n    //     )\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     if (isStorageError(error)) {\n    //       return { data: null, error }\n    //     }\n    //     throw error\n    //   }\n    // }\n    /**\n     * Lists all the files within a bucket.\n     * @param path The folder path.\n     */\n    list(path, options, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), { prefix: path || '' });\n                const data = yield post(this.fetch, `${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    encodeMetadata(metadata) {\n        return JSON.stringify(metadata);\n    }\n    toBase64(data) {\n        if (typeof Buffer !== 'undefined') {\n            return Buffer.from(data).toString('base64');\n        }\n        return btoa(data);\n    }\n    _getFinalPath(path) {\n        return `${this.bucketId}/${path}`;\n    }\n    _removeEmptyFolders(path) {\n        return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/');\n    }\n    transformOptsToQueryString(transform) {\n        const params = [];\n        if (transform.width) {\n            params.push(`width=${transform.width}`);\n        }\n        if (transform.height) {\n            params.push(`height=${transform.height}`);\n        }\n        if (transform.resize) {\n            params.push(`resize=${transform.resize}`);\n        }\n        if (transform.format) {\n            params.push(`format=${transform.format}`);\n        }\n        if (transform.quality) {\n            params.push(`quality=${transform.quality}`);\n        }\n        return params.join('&');\n    }\n}\n//# sourceMappingURL=StorageFileApi.js.map","// generated by genversion\nexport const version = '2.7.1';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${version}` };\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_HEADERS } from '../lib/constants';\nimport { isStorageError } from '../lib/errors';\nimport { get, post, put, remove } from '../lib/fetch';\nimport { resolveFetch } from '../lib/helpers';\nexport default class StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Retrieves the details of all Storage buckets within an existing project.\n     */\n    listBuckets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing Storage bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to retrieve.\n     */\n    getBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     * @returns newly created bucket id\n     */\n    createBucket(id, options = {\n        public: false,\n    }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket`, {\n                    id,\n                    name: id,\n                    public: options.public,\n                    file_size_limit: options.fileSizeLimit,\n                    allowed_mime_types: options.allowedMimeTypes,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates a Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are updating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     */\n    updateBucket(id, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/bucket/${id}`, {\n                    id,\n                    name: id,\n                    public: options.public,\n                    file_size_limit: options.fileSizeLimit,\n                    allowed_mime_types: options.allowedMimeTypes,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Removes all objects inside a single bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to empty.\n     */\n    emptyBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n     * You must first `empty()` the bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to delete.\n     */\n    deleteBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=StorageBucketApi.js.map","import StorageFileApi from './packages/StorageFileApi';\nimport StorageBucketApi from './packages/StorageBucketApi';\nexport class StorageClient extends StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        super(url, headers, fetch);\n    }\n    /**\n     * Perform file operation in a bucket.\n     *\n     * @param id The bucket id to operate on.\n     */\n    from(id) {\n        return new StorageFileApi(this.url, this.headers, id, this.fetch);\n    }\n}\n//# sourceMappingURL=StorageClient.js.map","export const version = '2.50.2';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nlet JS_ENV = '';\n// @ts-ignore\nif (typeof Deno !== 'undefined') {\n    JS_ENV = 'deno';\n}\nelse if (typeof document !== 'undefined') {\n    JS_ENV = 'web';\n}\nelse if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    JS_ENV = 'react-native';\n}\nelse {\n    JS_ENV = 'node';\n}\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js-${JS_ENV}/${version}` };\nexport const DEFAULT_GLOBAL_OPTIONS = {\n    headers: DEFAULT_HEADERS,\n};\nexport const DEFAULT_DB_OPTIONS = {\n    schema: 'public',\n};\nexport const DEFAULT_AUTH_OPTIONS = {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    flowType: 'implicit',\n};\nexport const DEFAULT_REALTIME_OPTIONS = {};\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// @ts-ignore\nimport nodeFetch, { Headers as NodeFetchHeaders } from '@supabase/node-fetch';\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = nodeFetch;\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const resolveHeadersConstructor = () => {\n    if (typeof Headers === 'undefined') {\n        return NodeFetchHeaders;\n    }\n    return Headers;\n};\nexport const fetchWithAuth = (supabaseKey, getAccessToken, customFetch) => {\n    const fetch = resolveFetch(customFetch);\n    const HeadersConstructor = resolveHeadersConstructor();\n    return (input, init) => __awaiter(void 0, void 0, void 0, function* () {\n        var _a;\n        const accessToken = (_a = (yield getAccessToken())) !== null && _a !== void 0 ? _a : supabaseKey;\n        let headers = new HeadersConstructor(init === null || init === void 0 ? void 0 : init.headers);\n        if (!headers.has('apikey')) {\n            headers.set('apikey', supabaseKey);\n        }\n        if (!headers.has('Authorization')) {\n            headers.set('Authorization', `Bearer ${accessToken}`);\n        }\n        return fetch(input, Object.assign(Object.assign({}, init), { headers }));\n    });\n};\n//# sourceMappingURL=fetch.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport function ensureTrailingSlash(url) {\n    return url.endsWith('/') ? url : url + '/';\n}\nexport const isBrowser = () => typeof window !== 'undefined';\nexport function applySettingDefaults(options, defaults) {\n    var _a, _b;\n    const { db: dbOptions, auth: authOptions, realtime: realtimeOptions, global: globalOptions, } = options;\n    const { db: DEFAULT_DB_OPTIONS, auth: DEFAULT_AUTH_OPTIONS, realtime: DEFAULT_REALTIME_OPTIONS, global: DEFAULT_GLOBAL_OPTIONS, } = defaults;\n    const result = {\n        db: Object.assign(Object.assign({}, DEFAULT_DB_OPTIONS), dbOptions),\n        auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), authOptions),\n        realtime: Object.assign(Object.assign({}, DEFAULT_REALTIME_OPTIONS), realtimeOptions),\n        global: Object.assign(Object.assign(Object.assign({}, DEFAULT_GLOBAL_OPTIONS), globalOptions), { headers: Object.assign(Object.assign({}, ((_a = DEFAULT_GLOBAL_OPTIONS === null || DEFAULT_GLOBAL_OPTIONS === void 0 ? void 0 : DEFAULT_GLOBAL_OPTIONS.headers) !== null && _a !== void 0 ? _a : {})), ((_b = globalOptions === null || globalOptions === void 0 ? void 0 : globalOptions.headers) !== null && _b !== void 0 ? _b : {})) }),\n        accessToken: () => __awaiter(this, void 0, void 0, function* () { return ''; }),\n    };\n    if (options.accessToken) {\n        result.accessToken = options.accessToken;\n    }\n    else {\n        // hack around Required<>\n        delete result.accessToken;\n    }\n    return result;\n}\n//# sourceMappingURL=helpers.js.map","export const version = '2.70.0';\n//# sourceMappingURL=version.js.map","import { version } from './version';\n/** Current session will be checked for refresh at this interval. */\nexport const AUTO_REFRESH_TICK_DURATION_MS = 30 * 1000;\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\nexport const AUTO_REFRESH_TICK_THRESHOLD = 3;\n/*\n * Earliest time before an access token expires that the session should be refreshed.\n */\nexport const EXPIRY_MARGIN_MS = AUTO_REFRESH_TICK_THRESHOLD * AUTO_REFRESH_TICK_DURATION_MS;\nexport const GOTRUE_URL = 'http://localhost:9999';\nexport const STORAGE_KEY = 'supabase.auth.token';\nexport const AUDIENCE = '';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` };\nexport const NETWORK_FAILURE = {\n    MAX_RETRIES: 10,\n    RETRY_INTERVAL: 2, // in deciseconds\n};\nexport const API_VERSION_HEADER_NAME = 'X-Supabase-Api-Version';\nexport const API_VERSIONS = {\n    '2024-01-01': {\n        timestamp: Date.parse('2024-01-01T00:00:00.0Z'),\n        name: '2024-01-01',\n    },\n};\nexport const BASE64URL_REGEX = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}$|[a-z0-9_-]{2}$)$/i;\nexport const JWKS_TTL = 600000; // 10 minutes\n//# sourceMappingURL=constants.js.map","export class AuthError extends Error {\n    constructor(message, status, code) {\n        super(message);\n        this.__isAuthError = true;\n        this.name = 'AuthError';\n        this.status = status;\n        this.code = code;\n    }\n}\nexport function isAuthError(error) {\n    return typeof error === 'object' && error !== null && '__isAuthError' in error;\n}\nexport class AuthApiError extends AuthError {\n    constructor(message, status, code) {\n        super(message, status, code);\n        this.name = 'AuthApiError';\n        this.status = status;\n        this.code = code;\n    }\n}\nexport function isAuthApiError(error) {\n    return isAuthError(error) && error.name === 'AuthApiError';\n}\nexport class AuthUnknownError extends AuthError {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'AuthUnknownError';\n        this.originalError = originalError;\n    }\n}\nexport class CustomAuthError extends AuthError {\n    constructor(message, name, status, code) {\n        super(message, status, code);\n        this.name = name;\n        this.status = status;\n    }\n}\nexport class AuthSessionMissingError extends CustomAuthError {\n    constructor() {\n        super('Auth session missing!', 'AuthSessionMissingError', 400, undefined);\n    }\n}\nexport function isAuthSessionMissingError(error) {\n    return isAuthError(error) && error.name === 'AuthSessionMissingError';\n}\nexport class AuthInvalidTokenResponseError extends CustomAuthError {\n    constructor() {\n        super('Auth session or user missing', 'AuthInvalidTokenResponseError', 500, undefined);\n    }\n}\nexport class AuthInvalidCredentialsError extends CustomAuthError {\n    constructor(message) {\n        super(message, 'AuthInvalidCredentialsError', 400, undefined);\n    }\n}\nexport class AuthImplicitGrantRedirectError extends CustomAuthError {\n    constructor(message, details = null) {\n        super(message, 'AuthImplicitGrantRedirectError', 500, undefined);\n        this.details = null;\n        this.details = details;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            details: this.details,\n        };\n    }\n}\nexport function isAuthImplicitGrantRedirectError(error) {\n    return isAuthError(error) && error.name === 'AuthImplicitGrantRedirectError';\n}\nexport class AuthPKCEGrantCodeExchangeError extends CustomAuthError {\n    constructor(message, details = null) {\n        super(message, 'AuthPKCEGrantCodeExchangeError', 500, undefined);\n        this.details = null;\n        this.details = details;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            details: this.details,\n        };\n    }\n}\nexport class AuthRetryableFetchError extends CustomAuthError {\n    constructor(message, status) {\n        super(message, 'AuthRetryableFetchError', status, undefined);\n    }\n}\nexport function isAuthRetryableFetchError(error) {\n    return isAuthError(error) && error.name === 'AuthRetryableFetchError';\n}\n/**\n * This error is thrown on certain methods when the password used is deemed\n * weak. Inspect the reasons to identify what password strength rules are\n * inadequate.\n */\nexport class AuthWeakPasswordError extends CustomAuthError {\n    constructor(message, status, reasons) {\n        super(message, 'AuthWeakPasswordError', status, 'weak_password');\n        this.reasons = reasons;\n    }\n}\nexport function isAuthWeakPasswordError(error) {\n    return isAuthError(error) && error.name === 'AuthWeakPasswordError';\n}\nexport class AuthInvalidJwtError extends CustomAuthError {\n    constructor(message) {\n        super(message, 'AuthInvalidJwtError', 400, 'invalid_jwt');\n    }\n}\n//# sourceMappingURL=errors.js.map","/**\n * Avoid modifying this file. It's part of\n * https://github.com/supabase-community/base64url-js.  Submit all fixes on\n * that repo!\n */\n/**\n * An array of characters that encode 6 bits into a Base64-URL alphabet\n * character.\n */\nconst TO_BASE64URL = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'.split('');\n/**\n * An array of characters that can appear in a Base64-URL encoded string but\n * should be ignored.\n */\nconst IGNORE_BASE64URL = ' \\t\\n\\r='.split('');\n/**\n * An array of 128 numbers that map a Base64-URL character to 6 bits, or if -2\n * used to skip the character, or if -1 used to error out.\n */\nconst FROM_BASE64URL = (() => {\n    const charMap = new Array(128);\n    for (let i = 0; i < charMap.length; i += 1) {\n        charMap[i] = -1;\n    }\n    for (let i = 0; i < IGNORE_BASE64URL.length; i += 1) {\n        charMap[IGNORE_BASE64URL[i].charCodeAt(0)] = -2;\n    }\n    for (let i = 0; i < TO_BASE64URL.length; i += 1) {\n        charMap[TO_BASE64URL[i].charCodeAt(0)] = i;\n    }\n    return charMap;\n})();\n/**\n * Converts a byte to a Base64-URL string.\n *\n * @param byte The byte to convert, or null to flush at the end of the byte sequence.\n * @param state The Base64 conversion state. Pass an initial value of `{ queue: 0, queuedBits: 0 }`.\n * @param emit A function called with the next Base64 character when ready.\n */\nexport function byteToBase64URL(byte, state, emit) {\n    if (byte !== null) {\n        state.queue = (state.queue << 8) | byte;\n        state.queuedBits += 8;\n        while (state.queuedBits >= 6) {\n            const pos = (state.queue >> (state.queuedBits - 6)) & 63;\n            emit(TO_BASE64URL[pos]);\n            state.queuedBits -= 6;\n        }\n    }\n    else if (state.queuedBits > 0) {\n        state.queue = state.queue << (6 - state.queuedBits);\n        state.queuedBits = 6;\n        while (state.queuedBits >= 6) {\n            const pos = (state.queue >> (state.queuedBits - 6)) & 63;\n            emit(TO_BASE64URL[pos]);\n            state.queuedBits -= 6;\n        }\n    }\n}\n/**\n * Converts a String char code (extracted using `string.charCodeAt(position)`) to a sequence of Base64-URL characters.\n *\n * @param charCode The char code of the JavaScript string.\n * @param state The Base64 state. Pass an initial value of `{ queue: 0, queuedBits: 0 }`.\n * @param emit A function called with the next byte.\n */\nexport function byteFromBase64URL(charCode, state, emit) {\n    const bits = FROM_BASE64URL[charCode];\n    if (bits > -1) {\n        // valid Base64-URL character\n        state.queue = (state.queue << 6) | bits;\n        state.queuedBits += 6;\n        while (state.queuedBits >= 8) {\n            emit((state.queue >> (state.queuedBits - 8)) & 0xff);\n            state.queuedBits -= 8;\n        }\n    }\n    else if (bits === -2) {\n        // ignore spaces, tabs, newlines, =\n        return;\n    }\n    else {\n        throw new Error(`Invalid Base64-URL character \"${String.fromCharCode(charCode)}\"`);\n    }\n}\n/**\n * Converts a JavaScript string (which may include any valid character) into a\n * Base64-URL encoded string. The string is first encoded in UTF-8 which is\n * then encoded as Base64-URL.\n *\n * @param str The string to convert.\n */\nexport function stringToBase64URL(str) {\n    const base64 = [];\n    const emitter = (char) => {\n        base64.push(char);\n    };\n    const state = { queue: 0, queuedBits: 0 };\n    stringToUTF8(str, (byte) => {\n        byteToBase64URL(byte, state, emitter);\n    });\n    byteToBase64URL(null, state, emitter);\n    return base64.join('');\n}\n/**\n * Converts a Base64-URL encoded string into a JavaScript string. It is assumed\n * that the underlying string has been encoded as UTF-8.\n *\n * @param str The Base64-URL encoded string.\n */\nexport function stringFromBase64URL(str) {\n    const conv = [];\n    const utf8Emit = (codepoint) => {\n        conv.push(String.fromCodePoint(codepoint));\n    };\n    const utf8State = {\n        utf8seq: 0,\n        codepoint: 0,\n    };\n    const b64State = { queue: 0, queuedBits: 0 };\n    const byteEmit = (byte) => {\n        stringFromUTF8(byte, utf8State, utf8Emit);\n    };\n    for (let i = 0; i < str.length; i += 1) {\n        byteFromBase64URL(str.charCodeAt(i), b64State, byteEmit);\n    }\n    return conv.join('');\n}\n/**\n * Converts a Unicode codepoint to a multi-byte UTF-8 sequence.\n *\n * @param codepoint The Unicode codepoint.\n * @param emit      Function which will be called for each UTF-8 byte that represents the codepoint.\n */\nexport function codepointToUTF8(codepoint, emit) {\n    if (codepoint <= 0x7f) {\n        emit(codepoint);\n        return;\n    }\n    else if (codepoint <= 0x7ff) {\n        emit(0xc0 | (codepoint >> 6));\n        emit(0x80 | (codepoint & 0x3f));\n        return;\n    }\n    else if (codepoint <= 0xffff) {\n        emit(0xe0 | (codepoint >> 12));\n        emit(0x80 | ((codepoint >> 6) & 0x3f));\n        emit(0x80 | (codepoint & 0x3f));\n        return;\n    }\n    else if (codepoint <= 0x10ffff) {\n        emit(0xf0 | (codepoint >> 18));\n        emit(0x80 | ((codepoint >> 12) & 0x3f));\n        emit(0x80 | ((codepoint >> 6) & 0x3f));\n        emit(0x80 | (codepoint & 0x3f));\n        return;\n    }\n    throw new Error(`Unrecognized Unicode codepoint: ${codepoint.toString(16)}`);\n}\n/**\n * Converts a JavaScript string to a sequence of UTF-8 bytes.\n *\n * @param str  The string to convert to UTF-8.\n * @param emit Function which will be called for each UTF-8 byte of the string.\n */\nexport function stringToUTF8(str, emit) {\n    for (let i = 0; i < str.length; i += 1) {\n        let codepoint = str.charCodeAt(i);\n        if (codepoint > 0xd7ff && codepoint <= 0xdbff) {\n            // most UTF-16 codepoints are Unicode codepoints, except values in this\n            // range where the next UTF-16 codepoint needs to be combined with the\n            // current one to get the Unicode codepoint\n            const highSurrogate = ((codepoint - 0xd800) * 0x400) & 0xffff;\n            const lowSurrogate = (str.charCodeAt(i + 1) - 0xdc00) & 0xffff;\n            codepoint = (lowSurrogate | highSurrogate) + 0x10000;\n            i += 1;\n        }\n        codepointToUTF8(codepoint, emit);\n    }\n}\n/**\n * Converts a UTF-8 byte to a Unicode codepoint.\n *\n * @param byte  The UTF-8 byte next in the sequence.\n * @param state The shared state between consecutive UTF-8 bytes in the\n *              sequence, an object with the shape `{ utf8seq: 0, codepoint: 0 }`.\n * @param emit  Function which will be called for each codepoint.\n */\nexport function stringFromUTF8(byte, state, emit) {\n    if (state.utf8seq === 0) {\n        if (byte <= 0x7f) {\n            emit(byte);\n            return;\n        }\n        // count the number of 1 leading bits until you reach 0\n        for (let leadingBit = 1; leadingBit < 6; leadingBit += 1) {\n            if (((byte >> (7 - leadingBit)) & 1) === 0) {\n                state.utf8seq = leadingBit;\n                break;\n            }\n        }\n        if (state.utf8seq === 2) {\n            state.codepoint = byte & 31;\n        }\n        else if (state.utf8seq === 3) {\n            state.codepoint = byte & 15;\n        }\n        else if (state.utf8seq === 4) {\n            state.codepoint = byte & 7;\n        }\n        else {\n            throw new Error('Invalid UTF-8 sequence');\n        }\n        state.utf8seq -= 1;\n    }\n    else if (state.utf8seq > 0) {\n        if (byte <= 0x7f) {\n            throw new Error('Invalid UTF-8 sequence');\n        }\n        state.codepoint = (state.codepoint << 6) | (byte & 63);\n        state.utf8seq -= 1;\n        if (state.utf8seq === 0) {\n            emit(state.codepoint);\n        }\n    }\n}\n/**\n * Helper functions to convert different types of strings to Uint8Array\n */\nexport function base64UrlToUint8Array(str) {\n    const result = [];\n    const state = { queue: 0, queuedBits: 0 };\n    const onByte = (byte) => {\n        result.push(byte);\n    };\n    for (let i = 0; i < str.length; i += 1) {\n        byteFromBase64URL(str.charCodeAt(i), state, onByte);\n    }\n    return new Uint8Array(result);\n}\nexport function stringToUint8Array(str) {\n    const result = [];\n    stringToUTF8(str, (byte) => result.push(byte));\n    return new Uint8Array(result);\n}\nexport function bytesToBase64URL(bytes) {\n    const result = [];\n    const state = { queue: 0, queuedBits: 0 };\n    const onChar = (char) => {\n        result.push(char);\n    };\n    bytes.forEach((byte) => byteToBase64URL(byte, state, onChar));\n    // always call with `null` after processing all bytes\n    byteToBase64URL(null, state, onChar);\n    return result.join('');\n}\n//# sourceMappingURL=base64url.js.map","import { API_VERSION_HEADER_NAME, BASE64URL_REGEX } from './constants';\nimport { AuthInvalidJwtError } from './errors';\nimport { base64UrlToUint8Array, stringFromBase64URL } from './base64url';\nexport function expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n}\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport const isBrowser = () => typeof window !== 'undefined' && typeof document !== 'undefined';\nconst localStorageWriteTests = {\n    tested: false,\n    writable: false,\n};\n/**\n * Checks whether localStorage is supported on this browser.\n */\nexport const supportsLocalStorage = () => {\n    if (!isBrowser()) {\n        return false;\n    }\n    try {\n        if (typeof globalThis.localStorage !== 'object') {\n            return false;\n        }\n    }\n    catch (e) {\n        // DOM exception when accessing `localStorage`\n        return false;\n    }\n    if (localStorageWriteTests.tested) {\n        return localStorageWriteTests.writable;\n    }\n    const randomKey = `lswt-${Math.random()}${Math.random()}`;\n    try {\n        globalThis.localStorage.setItem(randomKey, randomKey);\n        globalThis.localStorage.removeItem(randomKey);\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = true;\n    }\n    catch (e) {\n        // localStorage can't be written to\n        // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = false;\n    }\n    return localStorageWriteTests.writable;\n};\n/**\n * Extracts parameters encoded in the URL both in the query and fragment.\n */\nexport function parseParametersFromURL(href) {\n    const result = {};\n    const url = new URL(href);\n    if (url.hash && url.hash[0] === '#') {\n        try {\n            const hashSearchParams = new URLSearchParams(url.hash.substring(1));\n            hashSearchParams.forEach((value, key) => {\n                result[key] = value;\n            });\n        }\n        catch (e) {\n            // hash is not a query string\n        }\n    }\n    // search parameters take precedence over hash parameters\n    url.searchParams.forEach((value, key) => {\n        result[key] = value;\n    });\n    return result;\n}\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => import('@supabase/node-fetch').then(({ default: fetch }) => fetch(...args));\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const looksLikeFetchResponse = (maybeResponse) => {\n    return (typeof maybeResponse === 'object' &&\n        maybeResponse !== null &&\n        'status' in maybeResponse &&\n        'ok' in maybeResponse &&\n        'json' in maybeResponse &&\n        typeof maybeResponse.json === 'function');\n};\n// Storage helpers\nexport const setItemAsync = async (storage, key, data) => {\n    await storage.setItem(key, JSON.stringify(data));\n};\nexport const getItemAsync = async (storage, key) => {\n    const value = await storage.getItem(key);\n    if (!value) {\n        return null;\n    }\n    try {\n        return JSON.parse(value);\n    }\n    catch (_a) {\n        return value;\n    }\n};\nexport const removeItemAsync = async (storage, key) => {\n    await storage.removeItem(key);\n};\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\nexport class Deferred {\n    constructor() {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        this.promise = new Deferred.promiseConstructor((res, rej) => {\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\n            ;\n            this.resolve = res;\n            this.reject = rej;\n        });\n    }\n}\nDeferred.promiseConstructor = Promise;\nexport function decodeJWT(token) {\n    const parts = token.split('.');\n    if (parts.length !== 3) {\n        throw new AuthInvalidJwtError('Invalid JWT structure');\n    }\n    // Regex checks for base64url format\n    for (let i = 0; i < parts.length; i++) {\n        if (!BASE64URL_REGEX.test(parts[i])) {\n            throw new AuthInvalidJwtError('JWT not in base64url format');\n        }\n    }\n    const data = {\n        // using base64url lib\n        header: JSON.parse(stringFromBase64URL(parts[0])),\n        payload: JSON.parse(stringFromBase64URL(parts[1])),\n        signature: base64UrlToUint8Array(parts[2]),\n        raw: {\n            header: parts[0],\n            payload: parts[1],\n        },\n    };\n    return data;\n}\n/**\n * Creates a promise that resolves to null after some time.\n */\nexport async function sleep(time) {\n    return await new Promise((accept) => {\n        setTimeout(() => accept(null), time);\n    });\n}\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */\nexport function retryable(fn, isRetryable) {\n    const promise = new Promise((accept, reject) => {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        (async () => {\n            for (let attempt = 0; attempt < Infinity; attempt++) {\n                try {\n                    const result = await fn(attempt);\n                    if (!isRetryable(attempt, null, result)) {\n                        accept(result);\n                        return;\n                    }\n                }\n                catch (e) {\n                    if (!isRetryable(attempt, e)) {\n                        reject(e);\n                        return;\n                    }\n                }\n            }\n        })();\n    });\n    return promise;\n}\nfunction dec2hex(dec) {\n    return ('0' + dec.toString(16)).substr(-2);\n}\n// Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\nexport function generatePKCEVerifier() {\n    const verifierLength = 56;\n    const array = new Uint32Array(verifierLength);\n    if (typeof crypto === 'undefined') {\n        const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n        const charSetLen = charSet.length;\n        let verifier = '';\n        for (let i = 0; i < verifierLength; i++) {\n            verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));\n        }\n        return verifier;\n    }\n    crypto.getRandomValues(array);\n    return Array.from(array, dec2hex).join('');\n}\nasync function sha256(randomString) {\n    const encoder = new TextEncoder();\n    const encodedData = encoder.encode(randomString);\n    const hash = await crypto.subtle.digest('SHA-256', encodedData);\n    const bytes = new Uint8Array(hash);\n    return Array.from(bytes)\n        .map((c) => String.fromCharCode(c))\n        .join('');\n}\nexport async function generatePKCEChallenge(verifier) {\n    const hasCryptoSupport = typeof crypto !== 'undefined' &&\n        typeof crypto.subtle !== 'undefined' &&\n        typeof TextEncoder !== 'undefined';\n    if (!hasCryptoSupport) {\n        console.warn('WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.');\n        return verifier;\n    }\n    const hashed = await sha256(verifier);\n    return btoa(hashed).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nexport async function getCodeChallengeAndMethod(storage, storageKey, isPasswordRecovery = false) {\n    const codeVerifier = generatePKCEVerifier();\n    let storedCodeVerifier = codeVerifier;\n    if (isPasswordRecovery) {\n        storedCodeVerifier += '/PASSWORD_RECOVERY';\n    }\n    await setItemAsync(storage, `${storageKey}-code-verifier`, storedCodeVerifier);\n    const codeChallenge = await generatePKCEChallenge(codeVerifier);\n    const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n    return [codeChallenge, codeChallengeMethod];\n}\n/** Parses the API version which is 2YYY-MM-DD. */\nconst API_VERSION_REGEX = /^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i;\nexport function parseResponseAPIVersion(response) {\n    const apiVersion = response.headers.get(API_VERSION_HEADER_NAME);\n    if (!apiVersion) {\n        return null;\n    }\n    if (!apiVersion.match(API_VERSION_REGEX)) {\n        return null;\n    }\n    try {\n        const date = new Date(`${apiVersion}T00:00:00.0Z`);\n        return date;\n    }\n    catch (e) {\n        return null;\n    }\n}\nexport function validateExp(exp) {\n    if (!exp) {\n        throw new Error('Missing exp claim');\n    }\n    const timeNow = Math.floor(Date.now() / 1000);\n    if (exp <= timeNow) {\n        throw new Error('JWT has expired');\n    }\n}\nexport function getAlgorithm(alg) {\n    switch (alg) {\n        case 'RS256':\n            return {\n                name: 'RSASSA-PKCS1-v1_5',\n                hash: { name: 'SHA-256' },\n            };\n        case 'ES256':\n            return {\n                name: 'ECDSA',\n                namedCurve: 'P-256',\n                hash: { name: 'SHA-256' },\n            };\n        default:\n            throw new Error('Invalid alg claim');\n    }\n}\nconst UUID_REGEX = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;\nexport function validateUUID(str) {\n    if (!UUID_REGEX.test(str)) {\n        throw new Error('@supabase/auth-js: Expected parameter to be UUID but is not');\n    }\n}\n//# sourceMappingURL=helpers.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { API_VERSIONS, API_VERSION_HEADER_NAME } from './constants';\nimport { expiresAt, looksLikeFetchResponse, parseResponseAPIVersion } from './helpers';\nimport { AuthApiError, AuthRetryableFetchError, AuthWeakPasswordError, AuthUnknownError, AuthSessionMissingError, } from './errors';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst NETWORK_ERROR_CODES = [502, 503, 504];\nexport async function handleError(error) {\n    var _a;\n    if (!looksLikeFetchResponse(error)) {\n        throw new AuthRetryableFetchError(_getErrorMessage(error), 0);\n    }\n    if (NETWORK_ERROR_CODES.includes(error.status)) {\n        // status in 500...599 range - server had an error, request might be retryed.\n        throw new AuthRetryableFetchError(_getErrorMessage(error), error.status);\n    }\n    let data;\n    try {\n        data = await error.json();\n    }\n    catch (e) {\n        throw new AuthUnknownError(_getErrorMessage(e), e);\n    }\n    let errorCode = undefined;\n    const responseAPIVersion = parseResponseAPIVersion(error);\n    if (responseAPIVersion &&\n        responseAPIVersion.getTime() >= API_VERSIONS['2024-01-01'].timestamp &&\n        typeof data === 'object' &&\n        data &&\n        typeof data.code === 'string') {\n        errorCode = data.code;\n    }\n    else if (typeof data === 'object' && data && typeof data.error_code === 'string') {\n        errorCode = data.error_code;\n    }\n    if (!errorCode) {\n        // Legacy support for weak password errors, when there were no error codes\n        if (typeof data === 'object' &&\n            data &&\n            typeof data.weak_password === 'object' &&\n            data.weak_password &&\n            Array.isArray(data.weak_password.reasons) &&\n            data.weak_password.reasons.length &&\n            data.weak_password.reasons.reduce((a, i) => a && typeof i === 'string', true)) {\n            throw new AuthWeakPasswordError(_getErrorMessage(data), error.status, data.weak_password.reasons);\n        }\n    }\n    else if (errorCode === 'weak_password') {\n        throw new AuthWeakPasswordError(_getErrorMessage(data), error.status, ((_a = data.weak_password) === null || _a === void 0 ? void 0 : _a.reasons) || []);\n    }\n    else if (errorCode === 'session_not_found') {\n        // The `session_id` inside the JWT does not correspond to a row in the\n        // `sessions` table. This usually means the user has signed out, has been\n        // deleted, or their session has somehow been terminated.\n        throw new AuthSessionMissingError();\n    }\n    throw new AuthApiError(_getErrorMessage(data), error.status || 500, errorCode);\n}\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json;charset=UTF-8' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nexport async function _request(fetcher, method, url, options) {\n    var _a;\n    const headers = Object.assign({}, options === null || options === void 0 ? void 0 : options.headers);\n    if (!headers[API_VERSION_HEADER_NAME]) {\n        headers[API_VERSION_HEADER_NAME] = API_VERSIONS['2024-01-01'].name;\n    }\n    if (options === null || options === void 0 ? void 0 : options.jwt) {\n        headers['Authorization'] = `Bearer ${options.jwt}`;\n    }\n    const qs = (_a = options === null || options === void 0 ? void 0 : options.query) !== null && _a !== void 0 ? _a : {};\n    if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n        qs['redirect_to'] = options.redirectTo;\n    }\n    const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : '';\n    const data = await _handleRequest(fetcher, method, url + queryString, {\n        headers,\n        noResolveJson: options === null || options === void 0 ? void 0 : options.noResolveJson,\n    }, {}, options === null || options === void 0 ? void 0 : options.body);\n    return (options === null || options === void 0 ? void 0 : options.xform) ? options === null || options === void 0 ? void 0 : options.xform(data) : { data: Object.assign({}, data), error: null };\n}\nasync function _handleRequest(fetcher, method, url, options, parameters, body) {\n    const requestParams = _getRequestParams(method, options, parameters, body);\n    let result;\n    try {\n        result = await fetcher(url, Object.assign({}, requestParams));\n    }\n    catch (e) {\n        console.error(e);\n        // fetch failed, likely due to a network or CORS error\n        throw new AuthRetryableFetchError(_getErrorMessage(e), 0);\n    }\n    if (!result.ok) {\n        await handleError(result);\n    }\n    if (options === null || options === void 0 ? void 0 : options.noResolveJson) {\n        return result;\n    }\n    try {\n        return await result.json();\n    }\n    catch (e) {\n        await handleError(e);\n    }\n}\nexport function _sessionResponse(data) {\n    var _a;\n    let session = null;\n    if (hasSession(data)) {\n        session = Object.assign({}, data);\n        if (!data.expires_at) {\n            session.expires_at = expiresAt(data.expires_in);\n        }\n    }\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { session, user }, error: null };\n}\nexport function _sessionResponsePassword(data) {\n    const response = _sessionResponse(data);\n    if (!response.error &&\n        data.weak_password &&\n        typeof data.weak_password === 'object' &&\n        Array.isArray(data.weak_password.reasons) &&\n        data.weak_password.reasons.length &&\n        data.weak_password.message &&\n        typeof data.weak_password.message === 'string' &&\n        data.weak_password.reasons.reduce((a, i) => a && typeof i === 'string', true)) {\n        response.data.weak_password = data.weak_password;\n    }\n    return response;\n}\nexport function _userResponse(data) {\n    var _a;\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { user }, error: null };\n}\nexport function _ssoResponse(data) {\n    return { data, error: null };\n}\nexport function _generateLinkResponse(data) {\n    const { action_link, email_otp, hashed_token, redirect_to, verification_type } = data, rest = __rest(data, [\"action_link\", \"email_otp\", \"hashed_token\", \"redirect_to\", \"verification_type\"]);\n    const properties = {\n        action_link,\n        email_otp,\n        hashed_token,\n        redirect_to,\n        verification_type,\n    };\n    const user = Object.assign({}, rest);\n    return {\n        data: {\n            properties,\n            user,\n        },\n        error: null,\n    };\n}\nexport function _noResolveJsonResponse(data) {\n    return data;\n}\n/**\n * hasSession checks if the response object contains a valid session\n * @param data A response object\n * @returns true if a session is in the response\n */\nfunction hasSession(data) {\n    return data.access_token && data.refresh_token && data.expires_in;\n}\n//# sourceMappingURL=fetch.js.map","export const SIGN_OUT_SCOPES = ['global', 'local', 'others'];\n//# sourceMappingURL=types.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { _generateLinkResponse, _noResolveJsonResponse, _request, _userResponse, } from './lib/fetch';\nimport { resolveFetch, validateUUID } from './lib/helpers';\nimport { SIGN_OUT_SCOPES, } from './lib/types';\nimport { isAuthError } from './lib/errors';\nexport default class GoTrueAdminApi {\n    constructor({ url = '', headers = {}, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = resolveFetch(fetch);\n        this.mfa = {\n            listFactors: this._listFactors.bind(this),\n            deleteFactor: this._deleteFactor.bind(this),\n        };\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     * @param scope The logout sope.\n     */\n    async signOut(jwt, scope = SIGN_OUT_SCOPES[0]) {\n        if (SIGN_OUT_SCOPES.indexOf(scope) < 0) {\n            throw new Error(`@supabase/auth-js: Parameter scope must be one of ${SIGN_OUT_SCOPES.join(', ')}`);\n        }\n        try {\n            await _request(this.fetch, 'POST', `${this.url}/logout?scope=${scope}`, {\n                headers: this.headers,\n                jwt,\n                noResolveJson: true,\n            });\n            return { data: null, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options Additional options to be included when inviting.\n     */\n    async inviteUserByEmail(email, options = {}) {\n        try {\n            return await _request(this.fetch, 'POST', `${this.url}/invite`, {\n                body: { email, data: options.data },\n                headers: this.headers,\n                redirectTo: options.redirectTo,\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n    async generateLink(params) {\n        try {\n            const { options } = params, rest = __rest(params, [\"options\"]);\n            const body = Object.assign(Object.assign({}, rest), options);\n            if ('newEmail' in rest) {\n                // replace newEmail with new_email in request body\n                body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n                delete body['newEmail'];\n            }\n            return await _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n                body: body,\n                headers: this.headers,\n                xform: _generateLinkResponse,\n                redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return {\n                    data: {\n                        properties: null,\n                        user: null,\n                    },\n                    error,\n                };\n            }\n            throw error;\n        }\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async createUser(attributes) {\n        try {\n            return await _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n                body: attributes,\n                headers: this.headers,\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n    async listUsers(params) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        try {\n            const pagination = { nextPage: null, lastPage: 0, total: 0 };\n            const response = await _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n                headers: this.headers,\n                noResolveJson: true,\n                query: {\n                    page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n                    per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : '',\n                },\n                xform: _noResolveJsonResponse,\n            });\n            if (response.error)\n                throw response.error;\n            const users = await response.json();\n            const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n            const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n            if (links.length > 0) {\n                links.forEach((link) => {\n                    const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n                    const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n                    pagination[`${rel}Page`] = page;\n                });\n                pagination.total = parseInt(total);\n            }\n            return { data: Object.assign(Object.assign({}, users), pagination), error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { users: [] }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async getUserById(uid) {\n        validateUUID(uid);\n        try {\n            return await _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n                headers: this.headers,\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async updateUserById(uid, attributes) {\n        validateUUID(uid);\n        try {\n            return await _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n                body: attributes,\n                headers: this.headers,\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema. Soft deletion allows user identification from the hashed user ID but is not reversible.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async deleteUser(id, shouldSoftDelete = false) {\n        validateUUID(id);\n        try {\n            return await _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n                headers: this.headers,\n                body: {\n                    should_soft_delete: shouldSoftDelete,\n                },\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    async _listFactors(params) {\n        validateUUID(params.userId);\n        try {\n            const { data, error } = await _request(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\n                headers: this.headers,\n                xform: (factors) => {\n                    return { data: { factors }, error: null };\n                },\n            });\n            return { data, error };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    async _deleteFactor(params) {\n        validateUUID(params.userId);\n        validateUUID(params.id);\n        try {\n            const data = await _request(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\n                headers: this.headers,\n            });\n            return { data, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=GoTrueAdminApi.js.map","import { supportsLocalStorage } from './helpers';\n/**\n * Provides safe access to the globalThis.localStorage property.\n */\nexport const localStorageAdapter = {\n    getItem: (key) => {\n        if (!supportsLocalStorage()) {\n            return null;\n        }\n        return globalThis.localStorage.getItem(key);\n    },\n    setItem: (key, value) => {\n        if (!supportsLocalStorage()) {\n            return;\n        }\n        globalThis.localStorage.setItem(key, value);\n    },\n    removeItem: (key) => {\n        if (!supportsLocalStorage()) {\n            return;\n        }\n        globalThis.localStorage.removeItem(key);\n    },\n};\n/**\n * Returns a localStorage-like object that stores the key-value pairs in\n * memory.\n */\nexport function memoryLocalStorageAdapter(store = {}) {\n    return {\n        getItem: (key) => {\n            return store[key] || null;\n        },\n        setItem: (key, value) => {\n            store[key] = value;\n        },\n        removeItem: (key) => {\n            delete store[key];\n        },\n    };\n}\n//# sourceMappingURL=local-storage.js.map","/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n    if (typeof globalThis === 'object')\n        return;\n    try {\n        Object.defineProperty(Object.prototype, '__magic__', {\n            get: function () {\n                return this;\n            },\n            configurable: true,\n        });\n        // @ts-expect-error 'Allow access to magic'\n        __magic__.globalThis = __magic__;\n        // @ts-expect-error 'Allow access to magic'\n        delete Object.prototype.__magic__;\n    }\n    catch (e) {\n        if (typeof self !== 'undefined') {\n            // @ts-expect-error 'Allow access to globals'\n            self.globalThis = self;\n        }\n    }\n}\n//# sourceMappingURL=polyfills.js.map","import { supportsLocalStorage } from './helpers';\n/**\n * @experimental\n */\nexport const internals = {\n    /**\n     * @experimental\n     */\n    debug: !!(globalThis &&\n        supportsLocalStorage() &&\n        globalThis.localStorage &&\n        globalThis.localStorage.getItem('supabase.gotrue-js.locks.debug') === 'true'),\n};\n/**\n * An error thrown when a lock cannot be acquired after some amount of time.\n *\n * Use the {@link #isAcquireTimeout} property instead of checking with `instanceof`.\n */\nexport class LockAcquireTimeoutError extends Error {\n    constructor(message) {\n        super(message);\n        this.isAcquireTimeout = true;\n    }\n}\nexport class NavigatorLockAcquireTimeoutError extends LockAcquireTimeoutError {\n}\nexport class ProcessLockAcquireTimeoutError extends LockAcquireTimeoutError {\n}\n/**\n * Implements a global exclusive lock using the Navigator LockManager API. It\n * is available on all browsers released after 2022-03-15 with Safari being the\n * last one to release support. If the API is not available, this function will\n * throw. Make sure you check availablility before configuring {@link\n * GoTrueClient}.\n *\n * You can turn on debugging by setting the `supabase.gotrue-js.locks.debug`\n * local storage item to `true`.\n *\n * Internals:\n *\n * Since the LockManager API does not preserve stack traces for the async\n * function passed in the `request` method, a trick is used where acquiring the\n * lock releases a previously started promise to run the operation in the `fn`\n * function. The lock waits for that promise to finish (with or without error),\n * while the function will finally wait for the result anyway.\n *\n * @param name Name of the lock to be acquired.\n * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n *                       the lock can't be acquired without waiting. If positive, the lock acquire\n *                       will time out after so many milliseconds. An error is\n *                       a timeout if it has `isAcquireTimeout` set to true.\n * @param fn The operation to run once the lock is acquired.\n */\nexport async function navigatorLock(name, acquireTimeout, fn) {\n    if (internals.debug) {\n        console.log('@supabase/gotrue-js: navigatorLock: acquire lock', name, acquireTimeout);\n    }\n    const abortController = new globalThis.AbortController();\n    if (acquireTimeout > 0) {\n        setTimeout(() => {\n            abortController.abort();\n            if (internals.debug) {\n                console.log('@supabase/gotrue-js: navigatorLock acquire timed out', name);\n            }\n        }, acquireTimeout);\n    }\n    // MDN article: https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request\n    // Wrapping navigator.locks.request() with a plain Promise is done as some\n    // libraries like zone.js patch the Promise object to track the execution\n    // context. However, it appears that most browsers use an internal promise\n    // implementation when using the navigator.locks.request() API causing them\n    // to lose context and emit confusing log messages or break certain features.\n    // This wrapping is believed to help zone.js track the execution context\n    // better.\n    return await Promise.resolve().then(() => globalThis.navigator.locks.request(name, acquireTimeout === 0\n        ? {\n            mode: 'exclusive',\n            ifAvailable: true,\n        }\n        : {\n            mode: 'exclusive',\n            signal: abortController.signal,\n        }, async (lock) => {\n        if (lock) {\n            if (internals.debug) {\n                console.log('@supabase/gotrue-js: navigatorLock: acquired', name, lock.name);\n            }\n            try {\n                return await fn();\n            }\n            finally {\n                if (internals.debug) {\n                    console.log('@supabase/gotrue-js: navigatorLock: released', name, lock.name);\n                }\n            }\n        }\n        else {\n            if (acquireTimeout === 0) {\n                if (internals.debug) {\n                    console.log('@supabase/gotrue-js: navigatorLock: not immediately available', name);\n                }\n                throw new NavigatorLockAcquireTimeoutError(`Acquiring an exclusive Navigator LockManager lock \"${name}\" immediately failed`);\n            }\n            else {\n                if (internals.debug) {\n                    try {\n                        const result = await globalThis.navigator.locks.query();\n                        console.log('@supabase/gotrue-js: Navigator LockManager state', JSON.stringify(result, null, '  '));\n                    }\n                    catch (e) {\n                        console.warn('@supabase/gotrue-js: Error when querying Navigator LockManager state', e);\n                    }\n                }\n                // Browser is not following the Navigator LockManager spec, it\n                // returned a null lock when we didn't use ifAvailable. So we can\n                // pretend the lock is acquired in the name of backward compatibility\n                // and user experience and just run the function.\n                console.warn('@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request');\n                return await fn();\n            }\n        }\n    }));\n}\nconst PROCESS_LOCKS = {};\n/**\n * Implements a global exclusive lock that works only in the current process.\n * Useful for environments like React Native or other non-browser\n * single-process (i.e. no concept of \"tabs\") environments.\n *\n * Use {@link #navigatorLock} in browser environments.\n *\n * @param name Name of the lock to be acquired.\n * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n *                       the lock can't be acquired without waiting. If positive, the lock acquire\n *                       will time out after so many milliseconds. An error is\n *                       a timeout if it has `isAcquireTimeout` set to true.\n * @param fn The operation to run once the lock is acquired.\n */\nexport async function processLock(name, acquireTimeout, fn) {\n    var _a;\n    const previousOperation = (_a = PROCESS_LOCKS[name]) !== null && _a !== void 0 ? _a : Promise.resolve();\n    const currentOperation = Promise.race([\n        previousOperation.catch(() => {\n            // ignore error of previous operation that we're waiting to finish\n            return null;\n        }),\n        acquireTimeout >= 0\n            ? new Promise((_, reject) => {\n                setTimeout(() => {\n                    reject(new ProcessLockAcquireTimeoutError(`Acquring process lock with name \"${name}\" timed out`));\n                }, acquireTimeout);\n            })\n            : null,\n    ].filter((x) => x))\n        .catch((e) => {\n        if (e && e.isAcquireTimeout) {\n            throw e;\n        }\n        return null;\n    })\n        .then(async () => {\n        // previous operations finished and we didn't get a race on the acquire\n        // timeout, so the current operation can finally start\n        return await fn();\n    });\n    PROCESS_LOCKS[name] = currentOperation.catch(async (e) => {\n        if (e && e.isAcquireTimeout) {\n            // if the current operation timed out, it doesn't mean that the previous\n            // operation finished, so we need contnue waiting for it to finish\n            await previousOperation;\n            return null;\n        }\n        throw e;\n    });\n    // finally wait for the current operation to finish successfully, with an\n    // error or with an acquire timeout error\n    return await currentOperation;\n}\n//# sourceMappingURL=locks.js.map","import GoTrueAdminApi from './GoTrueAdminApi';\nimport { DEFAULT_HEADERS, EXPIRY_MARGIN_MS, AUTO_REFRESH_TICK_DURATION_MS, AUTO_REFRESH_TICK_THRESHOLD, GOTRUE_URL, STORAGE_KEY, JWKS_TTL, } from './lib/constants';\nimport { AuthImplicitGrantRedirectError, AuthPKCEGrantCodeExchangeError, AuthInvalidCredentialsError, AuthSessionMissingError, AuthInvalidTokenResponseError, AuthUnknownError, isAuthApiError, isAuthError, isAuthRetryableFetchError, isAuthSessionMissingError, isAuthImplicitGrantRedirectError, AuthInvalidJwtError, } from './lib/errors';\nimport { _request, _sessionResponse, _sessionResponsePassword, _userResponse, _ssoResponse, } from './lib/fetch';\nimport { Deferred, getItemAsync, isBrowser, removeItemAsync, resolveFetch, setItemAsync, uuid, retryable, sleep, supportsLocalStorage, parseParametersFromURL, getCodeChallengeAndMethod, getAlgorithm, validateExp, decodeJWT, } from './lib/helpers';\nimport { localStorageAdapter, memoryLocalStorageAdapter } from './lib/local-storage';\nimport { polyfillGlobalThis } from './lib/polyfills';\nimport { version } from './lib/version';\nimport { LockAcquireTimeoutError, navigatorLock } from './lib/locks';\nimport { stringToUint8Array, bytesToBase64URL } from './lib/base64url';\npolyfillGlobalThis(); // Make \"globalThis\" available\nconst DEFAULT_OPTIONS = {\n    url: GOTRUE_URL,\n    storageKey: STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: DEFAULT_HEADERS,\n    flowType: 'implicit',\n    debug: false,\n    hasCustomAuthorizationHeader: false,\n};\nasync function lockNoOp(name, acquireTimeout, fn) {\n    return await fn();\n}\nexport default class GoTrueClient {\n    /**\n     * Create a new client for use in the browser.\n     */\n    constructor(options) {\n        var _a, _b;\n        this.memoryStorage = null;\n        this.stateChangeEmitters = new Map();\n        this.autoRefreshTicker = null;\n        this.visibilityChangedCallback = null;\n        this.refreshingDeferred = null;\n        /**\n         * Keeps track of the async client initialization.\n         * When null or not yet resolved the auth state is `unknown`\n         * Once resolved the the auth state is known and it's save to call any further client methods.\n         * Keep extra care to never reject or throw uncaught errors\n         */\n        this.initializePromise = null;\n        this.detectSessionInUrl = true;\n        this.hasCustomAuthorizationHeader = false;\n        this.suppressGetSessionWarning = false;\n        this.lockAcquired = false;\n        this.pendingInLock = [];\n        /**\n         * Used to broadcast state change events to other tabs listening.\n         */\n        this.broadcastChannel = null;\n        this.logger = console.log;\n        this.instanceID = GoTrueClient.nextInstanceID;\n        GoTrueClient.nextInstanceID += 1;\n        if (this.instanceID > 0 && isBrowser()) {\n            console.warn('Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.');\n        }\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.logDebugMessages = !!settings.debug;\n        if (typeof settings.debug === 'function') {\n            this.logger = settings.debug;\n        }\n        this.persistSession = settings.persistSession;\n        this.storageKey = settings.storageKey;\n        this.autoRefreshToken = settings.autoRefreshToken;\n        this.admin = new GoTrueAdminApi({\n            url: settings.url,\n            headers: settings.headers,\n            fetch: settings.fetch,\n        });\n        this.url = settings.url;\n        this.headers = settings.headers;\n        this.fetch = resolveFetch(settings.fetch);\n        this.lock = settings.lock || lockNoOp;\n        this.detectSessionInUrl = settings.detectSessionInUrl;\n        this.flowType = settings.flowType;\n        this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader;\n        if (settings.lock) {\n            this.lock = settings.lock;\n        }\n        else if (isBrowser() && ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.locks)) {\n            this.lock = navigatorLock;\n        }\n        else {\n            this.lock = lockNoOp;\n        }\n        this.jwks = { keys: [] };\n        this.jwks_cached_at = Number.MIN_SAFE_INTEGER;\n        this.mfa = {\n            verify: this._verify.bind(this),\n            enroll: this._enroll.bind(this),\n            unenroll: this._unenroll.bind(this),\n            challenge: this._challenge.bind(this),\n            listFactors: this._listFactors.bind(this),\n            challengeAndVerify: this._challengeAndVerify.bind(this),\n            getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n        };\n        if (this.persistSession) {\n            if (settings.storage) {\n                this.storage = settings.storage;\n            }\n            else {\n                if (supportsLocalStorage()) {\n                    this.storage = localStorageAdapter;\n                }\n                else {\n                    this.memoryStorage = {};\n                    this.storage = memoryLocalStorageAdapter(this.memoryStorage);\n                }\n            }\n        }\n        else {\n            this.memoryStorage = {};\n            this.storage = memoryLocalStorageAdapter(this.memoryStorage);\n        }\n        if (isBrowser() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n            try {\n                this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n            }\n            catch (e) {\n                console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\n            }\n            (_b = this.broadcastChannel) === null || _b === void 0 ? void 0 : _b.addEventListener('message', async (event) => {\n                this._debug('received broadcast notification from other tab or client', event);\n                await this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\n            });\n        }\n        this.initialize();\n    }\n    _debug(...args) {\n        if (this.logDebugMessages) {\n            this.logger(`GoTrueClient@${this.instanceID} (${version}) ${new Date().toISOString()}`, ...args);\n        }\n        return this;\n    }\n    /**\n     * Initializes the client session either from the url or from storage.\n     * This method is automatically called when instantiating the client, but should also be called\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n     */\n    async initialize() {\n        if (this.initializePromise) {\n            return await this.initializePromise;\n        }\n        this.initializePromise = (async () => {\n            return await this._acquireLock(-1, async () => {\n                return await this._initialize();\n            });\n        })();\n        return await this.initializePromise;\n    }\n    /**\n     * IMPORTANT:\n     * 1. Never throw in this method, as it is called from the constructor\n     * 2. Never return a session from this method as it would be cached over\n     *    the whole lifetime of the client\n     */\n    async _initialize() {\n        var _a;\n        try {\n            const params = parseParametersFromURL(window.location.href);\n            let callbackUrlType = 'none';\n            if (this._isImplicitGrantCallback(params)) {\n                callbackUrlType = 'implicit';\n            }\n            else if (await this._isPKCECallback(params)) {\n                callbackUrlType = 'pkce';\n            }\n            /**\n             * Attempt to get the session from the URL only if these conditions are fulfilled\n             *\n             * Note: If the URL isn't one of the callback url types (implicit or pkce),\n             * then there could be an existing session so we don't want to prematurely remove it\n             */\n            if (isBrowser() && this.detectSessionInUrl && callbackUrlType !== 'none') {\n                const { data, error } = await this._getSessionFromURL(params, callbackUrlType);\n                if (error) {\n                    this._debug('#_initialize()', 'error detecting session from URL', error);\n                    if (isAuthImplicitGrantRedirectError(error)) {\n                        const errorCode = (_a = error.details) === null || _a === void 0 ? void 0 : _a.code;\n                        if (errorCode === 'identity_already_exists' ||\n                            errorCode === 'identity_not_found' ||\n                            errorCode === 'single_identity_not_deletable') {\n                            return { error };\n                        }\n                    }\n                    // failed login attempt via url,\n                    // remove old session as in verifyOtp, signUp and signInWith*\n                    await this._removeSession();\n                    return { error };\n                }\n                const { session, redirectType } = data;\n                this._debug('#_initialize()', 'detected session in URL', session, 'redirect type', redirectType);\n                await this._saveSession(session);\n                setTimeout(async () => {\n                    if (redirectType === 'recovery') {\n                        await this._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n                    }\n                    else {\n                        await this._notifyAllSubscribers('SIGNED_IN', session);\n                    }\n                }, 0);\n                return { error: null };\n            }\n            // no login attempt via callback url try to recover session from storage\n            await this._recoverAndRefresh();\n            return { error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { error };\n            }\n            return {\n                error: new AuthUnknownError('Unexpected error during initialization', error),\n            };\n        }\n        finally {\n            await this._handleVisibilityChange();\n            this._debug('#_initialize()', 'end');\n        }\n    }\n    /**\n     * Creates a new anonymous user.\n     *\n     * @returns A session where the is_anonymous claim in the access token JWT set to true\n     */\n    async signInAnonymously(credentials) {\n        var _a, _b, _c;\n        try {\n            const res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n                headers: this.headers,\n                body: {\n                    data: (_b = (_a = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _a === void 0 ? void 0 : _a.data) !== null && _b !== void 0 ? _b : {},\n                    gotrue_meta_security: { captcha_token: (_c = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _c === void 0 ? void 0 : _c.captchaToken },\n                },\n                xform: _sessionResponse,\n            });\n            const { data, error } = res;\n            if (error || !data) {\n                return { data: { user: null, session: null }, error: error };\n            }\n            const session = data.session;\n            const user = data.user;\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return { data: { user, session }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Creates a new user.\n     *\n     * Be aware that if a user account exists in the system you may get back an\n     * error message that attempts to hide this information from the user.\n     * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    async signUp(credentials) {\n        var _a, _b, _c;\n        try {\n            let res;\n            if ('email' in credentials) {\n                const { email, password, options } = credentials;\n                let codeChallenge = null;\n                let codeChallengeMethod = null;\n                if (this.flowType === 'pkce') {\n                    ;\n                    [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);\n                }\n                res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n                    headers: this.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: {\n                        email,\n                        password,\n                        data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        code_challenge: codeChallenge,\n                        code_challenge_method: codeChallengeMethod,\n                    },\n                    xform: _sessionResponse,\n                });\n            }\n            else if ('phone' in credentials) {\n                const { phone, password, options } = credentials;\n                res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        password,\n                        data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},\n                        channel: (_c = options === null || options === void 0 ? void 0 : options.channel) !== null && _c !== void 0 ? _c : 'sms',\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    xform: _sessionResponse,\n                });\n            }\n            else {\n                throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            const { data, error } = res;\n            if (error || !data) {\n                return { data: { user: null, session: null }, error: error };\n            }\n            const session = data.session;\n            const user = data.user;\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return { data: { user, session }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in an existing user with an email and password or phone and password.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or that the\n     * email/phone and password combination is wrong or that the account can only\n     * be accessed via social login.\n     */\n    async signInWithPassword(credentials) {\n        try {\n            let res;\n            if ('email' in credentials) {\n                const { email, password, options } = credentials;\n                res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                    headers: this.headers,\n                    body: {\n                        email,\n                        password,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    xform: _sessionResponsePassword,\n                });\n            }\n            else if ('phone' in credentials) {\n                const { phone, password, options } = credentials;\n                res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        password,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    xform: _sessionResponsePassword,\n                });\n            }\n            else {\n                throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            const { data, error } = res;\n            if (error) {\n                return { data: { user: null, session: null }, error };\n            }\n            else if (!data || !data.session || !data.user) {\n                return { data: { user: null, session: null }, error: new AuthInvalidTokenResponseError() };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n                data: Object.assign({ user: data.user, session: data.session }, (data.weak_password ? { weakPassword: data.weak_password } : null)),\n                error,\n            };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in an existing user via a third-party provider.\n     * This method supports the PKCE flow.\n     */\n    async signInWithOAuth(credentials) {\n        var _a, _b, _c, _d;\n        return await this._handleProviderSignIn(credentials.provider, {\n            redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n            scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n            queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n            skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect,\n        });\n    }\n    /**\n     * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n     */\n    async exchangeCodeForSession(authCode) {\n        await this.initializePromise;\n        return this._acquireLock(-1, async () => {\n            return this._exchangeCodeForSession(authCode);\n        });\n    }\n    /**\n     * Signs in a user by verifying a message signed by the user's private key.\n     * Only Solana supported at this time, using the Sign in with Solana standard.\n     */\n    async signInWithWeb3(credentials) {\n        const { chain } = credentials;\n        if (chain === 'solana') {\n            return await this.signInWithSolana(credentials);\n        }\n        throw new Error(`@supabase/auth-js: Unsupported chain \"${chain}\"`);\n    }\n    async signInWithSolana(credentials) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        let message;\n        let signature;\n        if ('message' in credentials) {\n            message = credentials.message;\n            signature = credentials.signature;\n        }\n        else {\n            const { chain, wallet, statement, options } = credentials;\n            let resolvedWallet;\n            if (!isBrowser()) {\n                if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\n                    throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\n                }\n                resolvedWallet = wallet;\n            }\n            else if (typeof wallet === 'object') {\n                resolvedWallet = wallet;\n            }\n            else {\n                const windowAny = window;\n                if ('solana' in windowAny &&\n                    typeof windowAny.solana === 'object' &&\n                    (('signIn' in windowAny.solana && typeof windowAny.solana.signIn === 'function') ||\n                        ('signMessage' in windowAny.solana &&\n                            typeof windowAny.solana.signMessage === 'function'))) {\n                    resolvedWallet = windowAny.solana;\n                }\n                else {\n                    throw new Error(`@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.`);\n                }\n            }\n            const url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\n            if ('signIn' in resolvedWallet && resolvedWallet.signIn) {\n                const output = await resolvedWallet.signIn(Object.assign(Object.assign(Object.assign({ issuedAt: new Date().toISOString() }, options === null || options === void 0 ? void 0 : options.signInWithSolana), { \n                    // non-overridable properties\n                    version: '1', domain: url.host, uri: url.href }), (statement ? { statement } : null)));\n                let outputToProcess;\n                if (Array.isArray(output) && output[0] && typeof output[0] === 'object') {\n                    outputToProcess = output[0];\n                }\n                else if (output &&\n                    typeof output === 'object' &&\n                    'signedMessage' in output &&\n                    'signature' in output) {\n                    outputToProcess = output;\n                }\n                else {\n                    throw new Error('@supabase/auth-js: Wallet method signIn() returned unrecognized value');\n                }\n                if ('signedMessage' in outputToProcess &&\n                    'signature' in outputToProcess &&\n                    (typeof outputToProcess.signedMessage === 'string' ||\n                        outputToProcess.signedMessage instanceof Uint8Array) &&\n                    outputToProcess.signature instanceof Uint8Array) {\n                    message =\n                        typeof outputToProcess.signedMessage === 'string'\n                            ? outputToProcess.signedMessage\n                            : new TextDecoder().decode(outputToProcess.signedMessage);\n                    signature = outputToProcess.signature;\n                }\n                else {\n                    throw new Error('@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields');\n                }\n            }\n            else {\n                if (!('signMessage' in resolvedWallet) ||\n                    typeof resolvedWallet.signMessage !== 'function' ||\n                    !('publicKey' in resolvedWallet) ||\n                    typeof resolvedWallet !== 'object' ||\n                    !resolvedWallet.publicKey ||\n                    !('toBase58' in resolvedWallet.publicKey) ||\n                    typeof resolvedWallet.publicKey.toBase58 !== 'function') {\n                    throw new Error('@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API');\n                }\n                message = [\n                    `${url.host} wants you to sign in with your Solana account:`,\n                    resolvedWallet.publicKey.toBase58(),\n                    ...(statement ? ['', statement, ''] : ['']),\n                    'Version: 1',\n                    `URI: ${url.href}`,\n                    `Issued At: ${(_c = (_b = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _b === void 0 ? void 0 : _b.issuedAt) !== null && _c !== void 0 ? _c : new Date().toISOString()}`,\n                    ...(((_d = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _d === void 0 ? void 0 : _d.notBefore)\n                        ? [`Not Before: ${options.signInWithSolana.notBefore}`]\n                        : []),\n                    ...(((_e = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _e === void 0 ? void 0 : _e.expirationTime)\n                        ? [`Expiration Time: ${options.signInWithSolana.expirationTime}`]\n                        : []),\n                    ...(((_f = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _f === void 0 ? void 0 : _f.chainId)\n                        ? [`Chain ID: ${options.signInWithSolana.chainId}`]\n                        : []),\n                    ...(((_g = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _g === void 0 ? void 0 : _g.nonce) ? [`Nonce: ${options.signInWithSolana.nonce}`] : []),\n                    ...(((_h = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _h === void 0 ? void 0 : _h.requestId)\n                        ? [`Request ID: ${options.signInWithSolana.requestId}`]\n                        : []),\n                    ...(((_k = (_j = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _j === void 0 ? void 0 : _j.resources) === null || _k === void 0 ? void 0 : _k.length)\n                        ? [\n                            'Resources',\n                            ...options.signInWithSolana.resources.map((resource) => `- ${resource}`),\n                        ]\n                        : []),\n                ].join('\\n');\n                const maybeSignature = await resolvedWallet.signMessage(new TextEncoder().encode(message), 'utf8');\n                if (!maybeSignature || !(maybeSignature instanceof Uint8Array)) {\n                    throw new Error('@supabase/auth-js: Wallet signMessage() API returned an recognized value');\n                }\n                signature = maybeSignature;\n            }\n        }\n        try {\n            const { data, error } = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\n                headers: this.headers,\n                body: Object.assign({ chain: 'solana', message, signature: bytesToBase64URL(signature) }, (((_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken)\n                    ? { gotrue_meta_security: { captcha_token: (_m = credentials.options) === null || _m === void 0 ? void 0 : _m.captchaToken } }\n                    : null)),\n                xform: _sessionResponse,\n            });\n            if (error) {\n                throw error;\n            }\n            if (!data || !data.session || !data.user) {\n                return {\n                    data: { user: null, session: null },\n                    error: new AuthInvalidTokenResponseError(),\n                };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return { data: Object.assign({}, data), error };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    async _exchangeCodeForSession(authCode) {\n        const storageItem = await getItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n        const [codeVerifier, redirectType] = (storageItem !== null && storageItem !== void 0 ? storageItem : '').split('/');\n        try {\n            const { data, error } = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\n                headers: this.headers,\n                body: {\n                    auth_code: authCode,\n                    code_verifier: codeVerifier,\n                },\n                xform: _sessionResponse,\n            });\n            await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n            if (error) {\n                throw error;\n            }\n            if (!data || !data.session || !data.user) {\n                return {\n                    data: { user: null, session: null, redirectType: null },\n                    error: new AuthInvalidTokenResponseError(),\n                };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return { data: Object.assign(Object.assign({}, data), { redirectType: redirectType !== null && redirectType !== void 0 ? redirectType : null }), error };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null, redirectType: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Allows signing in with an OIDC ID token. The authentication provider used\n     * should be enabled and configured.\n     */\n    async signInWithIdToken(credentials) {\n        try {\n            const { options, provider, token, access_token, nonce } = credentials;\n            const res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n                headers: this.headers,\n                body: {\n                    provider,\n                    id_token: token,\n                    access_token,\n                    nonce,\n                    gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                },\n                xform: _sessionResponse,\n            });\n            const { data, error } = res;\n            if (error) {\n                return { data: { user: null, session: null }, error };\n            }\n            else if (!data || !data.session || !data.user) {\n                return {\n                    data: { user: null, session: null },\n                    error: new AuthInvalidTokenResponseError(),\n                };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return { data, error };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in a user using magiclink or a one-time password (OTP).\n     *\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or, that the account\n     * can only be accessed via social login.\n     *\n     * Do note that you will need to configure a Whatsapp sender on Twilio\n     * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n     * channel is not supported on other providers\n     * at this time.\n     * This method supports PKCE when an email is passed.\n     */\n    async signInWithOtp(credentials) {\n        var _a, _b, _c, _d, _e;\n        try {\n            if ('email' in credentials) {\n                const { email, options } = credentials;\n                let codeChallenge = null;\n                let codeChallengeMethod = null;\n                if (this.flowType === 'pkce') {\n                    ;\n                    [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);\n                }\n                const { error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n                    headers: this.headers,\n                    body: {\n                        email,\n                        data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                        create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        code_challenge: codeChallenge,\n                        code_challenge_method: codeChallengeMethod,\n                    },\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                });\n                return { data: { user: null, session: null }, error };\n            }\n            if ('phone' in credentials) {\n                const { phone, options } = credentials;\n                const { data, error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        data: (_c = options === null || options === void 0 ? void 0 : options.data) !== null && _c !== void 0 ? _c : {},\n                        create_user: (_d = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        channel: (_e = options === null || options === void 0 ? void 0 : options.channel) !== null && _e !== void 0 ? _e : 'sms',\n                    },\n                });\n                return { data: { user: null, session: null, messageId: data === null || data === void 0 ? void 0 : data.message_id }, error };\n            }\n            throw new AuthInvalidCredentialsError('You must provide either an email or phone number.');\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n     */\n    async verifyOtp(params) {\n        var _a, _b;\n        try {\n            let redirectTo = undefined;\n            let captchaToken = undefined;\n            if ('options' in params) {\n                redirectTo = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo;\n                captchaToken = (_b = params.options) === null || _b === void 0 ? void 0 : _b.captchaToken;\n            }\n            const { data, error } = await _request(this.fetch, 'POST', `${this.url}/verify`, {\n                headers: this.headers,\n                body: Object.assign(Object.assign({}, params), { gotrue_meta_security: { captcha_token: captchaToken } }),\n                redirectTo,\n                xform: _sessionResponse,\n            });\n            if (error) {\n                throw error;\n            }\n            if (!data) {\n                throw new Error('An error occurred on token verification.');\n            }\n            const session = data.session;\n            const user = data.user;\n            if (session === null || session === void 0 ? void 0 : session.access_token) {\n                await this._saveSession(session);\n                await this._notifyAllSubscribers(params.type == 'recovery' ? 'PASSWORD_RECOVERY' : 'SIGNED_IN', session);\n            }\n            return { data: { user, session }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Attempts a single-sign on using an enterprise Identity Provider. A\n     * successful SSO attempt will redirect the current page to the identity\n     * provider authorization page. The redirect URL is implementation and SSO\n     * protocol specific.\n     *\n     * You can use it by providing a SSO domain. Typically you can extract this\n     * domain by asking users for their email address. If this domain is\n     * registered on the Auth instance the redirect will use that organization's\n     * currently active SSO Identity Provider for the login.\n     *\n     * If you have built an organization-specific login page, you can use the\n     * organization's SSO Identity Provider UUID directly instead.\n     */\n    async signInWithSSO(params) {\n        var _a, _b, _c;\n        try {\n            let codeChallenge = null;\n            let codeChallengeMethod = null;\n            if (this.flowType === 'pkce') {\n                ;\n                [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);\n            }\n            return await _request(this.fetch, 'POST', `${this.url}/sso`, {\n                body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, ('providerId' in params ? { provider_id: params.providerId } : null)), ('domain' in params ? { domain: params.domain } : null)), { redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined }), (((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken)\n                    ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } }\n                    : null)), { skip_http_redirect: true, code_challenge: codeChallenge, code_challenge_method: codeChallengeMethod }),\n                headers: this.headers,\n                xform: _ssoResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Sends a reauthentication OTP to the user's email or phone number.\n     * Requires the user to be signed-in.\n     */\n    async reauthenticate() {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._reauthenticate();\n        });\n    }\n    async _reauthenticate() {\n        try {\n            return await this._useSession(async (result) => {\n                const { data: { session }, error: sessionError, } = result;\n                if (sessionError)\n                    throw sessionError;\n                if (!session)\n                    throw new AuthSessionMissingError();\n                const { error } = await _request(this.fetch, 'GET', `${this.url}/reauthenticate`, {\n                    headers: this.headers,\n                    jwt: session.access_token,\n                });\n                return { data: { user: null, session: null }, error };\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n     */\n    async resend(credentials) {\n        try {\n            const endpoint = `${this.url}/resend`;\n            if ('email' in credentials) {\n                const { email, type, options } = credentials;\n                const { error } = await _request(this.fetch, 'POST', endpoint, {\n                    headers: this.headers,\n                    body: {\n                        email,\n                        type,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                });\n                return { data: { user: null, session: null }, error };\n            }\n            else if ('phone' in credentials) {\n                const { phone, type, options } = credentials;\n                const { data, error } = await _request(this.fetch, 'POST', endpoint, {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        type,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                });\n                return { data: { user: null, session: null, messageId: data === null || data === void 0 ? void 0 : data.message_id }, error };\n            }\n            throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Returns the session, refreshing it if necessary.\n     *\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n     *\n     * **IMPORTANT:** This method loads values directly from the storage attached\n     * to the client. If that storage is based on request cookies for example,\n     * the values in it may not be authentic and therefore it's strongly advised\n     * against using this method and its results in such circumstances. A warning\n     * will be emitted if this is detected. Use {@link #getUser()} instead.\n     */\n    async getSession() {\n        await this.initializePromise;\n        const result = await this._acquireLock(-1, async () => {\n            return this._useSession(async (result) => {\n                return result;\n            });\n        });\n        return result;\n    }\n    /**\n     * Acquires a global lock based on the storage key.\n     */\n    async _acquireLock(acquireTimeout, fn) {\n        this._debug('#_acquireLock', 'begin', acquireTimeout);\n        try {\n            if (this.lockAcquired) {\n                const last = this.pendingInLock.length\n                    ? this.pendingInLock[this.pendingInLock.length - 1]\n                    : Promise.resolve();\n                const result = (async () => {\n                    await last;\n                    return await fn();\n                })();\n                this.pendingInLock.push((async () => {\n                    try {\n                        await result;\n                    }\n                    catch (e) {\n                        // we just care if it finished\n                    }\n                })());\n                return result;\n            }\n            return await this.lock(`lock:${this.storageKey}`, acquireTimeout, async () => {\n                this._debug('#_acquireLock', 'lock acquired for storage key', this.storageKey);\n                try {\n                    this.lockAcquired = true;\n                    const result = fn();\n                    this.pendingInLock.push((async () => {\n                        try {\n                            await result;\n                        }\n                        catch (e) {\n                            // we just care if it finished\n                        }\n                    })());\n                    await result;\n                    // keep draining the queue until there's nothing to wait on\n                    while (this.pendingInLock.length) {\n                        const waitOn = [...this.pendingInLock];\n                        await Promise.all(waitOn);\n                        this.pendingInLock.splice(0, waitOn.length);\n                    }\n                    return await result;\n                }\n                finally {\n                    this._debug('#_acquireLock', 'lock released for storage key', this.storageKey);\n                    this.lockAcquired = false;\n                }\n            });\n        }\n        finally {\n            this._debug('#_acquireLock', 'end');\n        }\n    }\n    /**\n     * Use instead of {@link #getSession} inside the library. It is\n     * semantically usually what you want, as getting a session involves some\n     * processing afterwards that requires only one client operating on the\n     * session at once across multiple tabs or processes.\n     */\n    async _useSession(fn) {\n        this._debug('#_useSession', 'begin');\n        try {\n            // the use of __loadSession here is the only correct use of the function!\n            const result = await this.__loadSession();\n            return await fn(result);\n        }\n        finally {\n            this._debug('#_useSession', 'end');\n        }\n    }\n    /**\n     * NEVER USE DIRECTLY!\n     *\n     * Always use {@link #_useSession}.\n     */\n    async __loadSession() {\n        this._debug('#__loadSession()', 'begin');\n        if (!this.lockAcquired) {\n            this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack);\n        }\n        try {\n            let currentSession = null;\n            const maybeSession = await getItemAsync(this.storage, this.storageKey);\n            this._debug('#getSession()', 'session from storage', maybeSession);\n            if (maybeSession !== null) {\n                if (this._isValidSession(maybeSession)) {\n                    currentSession = maybeSession;\n                }\n                else {\n                    this._debug('#getSession()', 'session from storage is not valid');\n                    await this._removeSession();\n                }\n            }\n            if (!currentSession) {\n                return { data: { session: null }, error: null };\n            }\n            // A session is considered expired before the access token _actually_\n            // expires. When the autoRefreshToken option is off (or when the tab is\n            // in the background), very eager users of getSession() -- like\n            // realtime-js -- might send a valid JWT which will expire by the time it\n            // reaches the server.\n            const hasExpired = currentSession.expires_at\n                ? currentSession.expires_at * 1000 - Date.now() < EXPIRY_MARGIN_MS\n                : false;\n            this._debug('#__loadSession()', `session has${hasExpired ? '' : ' not'} expired`, 'expires_at', currentSession.expires_at);\n            if (!hasExpired) {\n                if (this.storage.isServer) {\n                    let suppressWarning = this.suppressGetSessionWarning;\n                    const proxySession = new Proxy(currentSession, {\n                        get: (target, prop, receiver) => {\n                            if (!suppressWarning && prop === 'user') {\n                                // only show warning when the user object is being accessed from the server\n                                console.warn('Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.');\n                                suppressWarning = true; // keeps this proxy instance from logging additional warnings\n                                this.suppressGetSessionWarning = true; // keeps this client's future proxy instances from warning\n                            }\n                            return Reflect.get(target, prop, receiver);\n                        },\n                    });\n                    currentSession = proxySession;\n                }\n                return { data: { session: currentSession }, error: null };\n            }\n            const { session, error } = await this._callRefreshToken(currentSession.refresh_token);\n            if (error) {\n                return { data: { session: null }, error };\n            }\n            return { data: { session }, error: null };\n        }\n        finally {\n            this._debug('#__loadSession()', 'end');\n        }\n    }\n    /**\n     * Gets the current user details if there is an existing session. This method\n     * performs a network request to the Supabase Auth server, so the returned\n     * value is authentic and can be used to base authorization rules on.\n     *\n     * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n     */\n    async getUser(jwt) {\n        if (jwt) {\n            return await this._getUser(jwt);\n        }\n        await this.initializePromise;\n        const result = await this._acquireLock(-1, async () => {\n            return await this._getUser();\n        });\n        return result;\n    }\n    async _getUser(jwt) {\n        try {\n            if (jwt) {\n                return await _request(this.fetch, 'GET', `${this.url}/user`, {\n                    headers: this.headers,\n                    jwt: jwt,\n                    xform: _userResponse,\n                });\n            }\n            return await this._useSession(async (result) => {\n                var _a, _b, _c;\n                const { data, error } = result;\n                if (error) {\n                    throw error;\n                }\n                // returns an error if there is no access_token or custom authorization header\n                if (!((_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) && !this.hasCustomAuthorizationHeader) {\n                    return { data: { user: null }, error: new AuthSessionMissingError() };\n                }\n                return await _request(this.fetch, 'GET', `${this.url}/user`, {\n                    headers: this.headers,\n                    jwt: (_c = (_b = data.session) === null || _b === void 0 ? void 0 : _b.access_token) !== null && _c !== void 0 ? _c : undefined,\n                    xform: _userResponse,\n                });\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                if (isAuthSessionMissingError(error)) {\n                    // JWT contains a `session_id` which does not correspond to an active\n                    // session in the database, indicating the user is signed out.\n                    await this._removeSession();\n                    await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n                }\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Updates user data for a logged in user.\n     */\n    async updateUser(attributes, options = {}) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._updateUser(attributes, options);\n        });\n    }\n    async _updateUser(attributes, options = {}) {\n        try {\n            return await this._useSession(async (result) => {\n                const { data: sessionData, error: sessionError } = result;\n                if (sessionError) {\n                    throw sessionError;\n                }\n                if (!sessionData.session) {\n                    throw new AuthSessionMissingError();\n                }\n                const session = sessionData.session;\n                let codeChallenge = null;\n                let codeChallengeMethod = null;\n                if (this.flowType === 'pkce' && attributes.email != null) {\n                    ;\n                    [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);\n                }\n                const { data, error: userError } = await _request(this.fetch, 'PUT', `${this.url}/user`, {\n                    headers: this.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: Object.assign(Object.assign({}, attributes), { code_challenge: codeChallenge, code_challenge_method: codeChallengeMethod }),\n                    jwt: session.access_token,\n                    xform: _userResponse,\n                });\n                if (userError)\n                    throw userError;\n                session.user = data.user;\n                await this._saveSession(session);\n                await this._notifyAllSubscribers('USER_UPDATED', session);\n                return { data: { user: session.user }, error: null };\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n     * If the refresh token or access token in the current session is invalid, an error will be thrown.\n     * @param currentSession The current session that minimally contains an access token and refresh token.\n     */\n    async setSession(currentSession) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._setSession(currentSession);\n        });\n    }\n    async _setSession(currentSession) {\n        try {\n            if (!currentSession.access_token || !currentSession.refresh_token) {\n                throw new AuthSessionMissingError();\n            }\n            const timeNow = Date.now() / 1000;\n            let expiresAt = timeNow;\n            let hasExpired = true;\n            let session = null;\n            const { payload } = decodeJWT(currentSession.access_token);\n            if (payload.exp) {\n                expiresAt = payload.exp;\n                hasExpired = expiresAt <= timeNow;\n            }\n            if (hasExpired) {\n                const { session: refreshedSession, error } = await this._callRefreshToken(currentSession.refresh_token);\n                if (error) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                if (!refreshedSession) {\n                    return { data: { user: null, session: null }, error: null };\n                }\n                session = refreshedSession;\n            }\n            else {\n                const { data, error } = await this._getUser(currentSession.access_token);\n                if (error) {\n                    throw error;\n                }\n                session = {\n                    access_token: currentSession.access_token,\n                    refresh_token: currentSession.refresh_token,\n                    user: data.user,\n                    token_type: 'bearer',\n                    expires_in: expiresAt - timeNow,\n                    expires_at: expiresAt,\n                };\n                await this._saveSession(session);\n                await this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return { data: { user: session.user, session }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { session: null, user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Returns a new session, regardless of expiry status.\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n     * If the current session's refresh token is invalid, an error will be thrown.\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\n     */\n    async refreshSession(currentSession) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._refreshSession(currentSession);\n        });\n    }\n    async _refreshSession(currentSession) {\n        try {\n            return await this._useSession(async (result) => {\n                var _a;\n                if (!currentSession) {\n                    const { data, error } = result;\n                    if (error) {\n                        throw error;\n                    }\n                    currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n                }\n                if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\n                    throw new AuthSessionMissingError();\n                }\n                const { session, error } = await this._callRefreshToken(currentSession.refresh_token);\n                if (error) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                if (!session) {\n                    return { data: { user: null, session: null }, error: null };\n                }\n                return { data: { user: session.user, session }, error: null };\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Gets the session data from a URL string\n     */\n    async _getSessionFromURL(params, callbackUrlType) {\n        try {\n            if (!isBrowser())\n                throw new AuthImplicitGrantRedirectError('No browser detected.');\n            // If there's an error in the URL, it doesn't matter what flow it is, we just return the error.\n            if (params.error || params.error_description || params.error_code) {\n                // The error class returned implies that the redirect is from an implicit grant flow\n                // but it could also be from a redirect error from a PKCE flow.\n                throw new AuthImplicitGrantRedirectError(params.error_description || 'Error in URL with unspecified error_description', {\n                    error: params.error || 'unspecified_error',\n                    code: params.error_code || 'unspecified_code',\n                });\n            }\n            // Checks for mismatches between the flowType initialised in the client and the URL parameters\n            switch (callbackUrlType) {\n                case 'implicit':\n                    if (this.flowType === 'pkce') {\n                        throw new AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n                    }\n                    break;\n                case 'pkce':\n                    if (this.flowType === 'implicit') {\n                        throw new AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n                    }\n                    break;\n                default:\n                // there's no mismatch so we continue\n            }\n            // Since this is a redirect for PKCE, we attempt to retrieve the code from the URL for the code exchange\n            if (callbackUrlType === 'pkce') {\n                this._debug('#_initialize()', 'begin', 'is PKCE flow', true);\n                if (!params.code)\n                    throw new AuthPKCEGrantCodeExchangeError('No code detected.');\n                const { data, error } = await this._exchangeCodeForSession(params.code);\n                if (error)\n                    throw error;\n                const url = new URL(window.location.href);\n                url.searchParams.delete('code');\n                window.history.replaceState(window.history.state, '', url.toString());\n                return { data: { session: data.session, redirectType: null }, error: null };\n            }\n            const { provider_token, provider_refresh_token, access_token, refresh_token, expires_in, expires_at, token_type, } = params;\n            if (!access_token || !expires_in || !refresh_token || !token_type) {\n                throw new AuthImplicitGrantRedirectError('No session defined in URL');\n            }\n            const timeNow = Math.round(Date.now() / 1000);\n            const expiresIn = parseInt(expires_in);\n            let expiresAt = timeNow + expiresIn;\n            if (expires_at) {\n                expiresAt = parseInt(expires_at);\n            }\n            const actuallyExpiresIn = expiresAt - timeNow;\n            if (actuallyExpiresIn * 1000 <= AUTO_REFRESH_TICK_DURATION_MS) {\n                console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${actuallyExpiresIn}s, should have been closer to ${expiresIn}s`);\n            }\n            const issuedAt = expiresAt - expiresIn;\n            if (timeNow - issuedAt >= 120) {\n                console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale', issuedAt, expiresAt, timeNow);\n            }\n            else if (timeNow - issuedAt < 0) {\n                console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew', issuedAt, expiresAt, timeNow);\n            }\n            const { data, error } = await this._getUser(access_token);\n            if (error)\n                throw error;\n            const session = {\n                provider_token,\n                provider_refresh_token,\n                access_token,\n                expires_in: expiresIn,\n                expires_at: expiresAt,\n                refresh_token,\n                token_type,\n                user: data.user,\n            };\n            // Remove tokens from URL\n            window.location.hash = '';\n            this._debug('#_getSessionFromURL()', 'clearing window.location.hash');\n            return { data: { session, redirectType: params.type }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { session: null, redirectType: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n     */\n    _isImplicitGrantCallback(params) {\n        return Boolean(params.access_token || params.error_description);\n    }\n    /**\n     * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n     */\n    async _isPKCECallback(params) {\n        const currentStorageContent = await getItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n        return !!(params.code && currentStorageContent);\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n     *\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n     *\n     * If using `others` scope, no `SIGNED_OUT` event is fired!\n     */\n    async signOut(options = { scope: 'global' }) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._signOut(options);\n        });\n    }\n    async _signOut({ scope } = { scope: 'global' }) {\n        return await this._useSession(async (result) => {\n            var _a;\n            const { data, error: sessionError } = result;\n            if (sessionError) {\n                return { error: sessionError };\n            }\n            const accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n            if (accessToken) {\n                const { error } = await this.admin.signOut(accessToken, scope);\n                if (error) {\n                    // ignore 404s since user might not exist anymore\n                    // ignore 401s since an invalid or expired JWT should sign out the current session\n                    if (!(isAuthApiError(error) &&\n                        (error.status === 404 || error.status === 401 || error.status === 403))) {\n                        return { error };\n                    }\n                }\n            }\n            if (scope !== 'others') {\n                await this._removeSession();\n                await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n            }\n            return { error: null };\n        });\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @param callback A callback function to be invoked when an auth event happens.\n     */\n    onAuthStateChange(callback) {\n        const id = uuid();\n        const subscription = {\n            id,\n            callback,\n            unsubscribe: () => {\n                this._debug('#unsubscribe()', 'state change callback with id removed', id);\n                this.stateChangeEmitters.delete(id);\n            },\n        };\n        this._debug('#onAuthStateChange()', 'registered callback with id', id);\n        this.stateChangeEmitters.set(id, subscription);\n        (async () => {\n            await this.initializePromise;\n            await this._acquireLock(-1, async () => {\n                this._emitInitialSession(id);\n            });\n        })();\n        return { data: { subscription } };\n    }\n    async _emitInitialSession(id) {\n        return await this._useSession(async (result) => {\n            var _a, _b;\n            try {\n                const { data: { session }, error, } = result;\n                if (error)\n                    throw error;\n                await ((_a = this.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session));\n                this._debug('INITIAL_SESSION', 'callback id', id, 'session', session);\n            }\n            catch (err) {\n                await ((_b = this.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null));\n                this._debug('INITIAL_SESSION', 'callback id', id, 'error', err);\n                console.error(err);\n            }\n        });\n    }\n    /**\n     * Sends a password reset request to an email address. This method supports the PKCE flow.\n     *\n     * @param email The email address of the user.\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n     */\n    async resetPasswordForEmail(email, options = {}) {\n        let codeChallenge = null;\n        let codeChallengeMethod = null;\n        if (this.flowType === 'pkce') {\n            ;\n            [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey, true // isPasswordRecovery\n            );\n        }\n        try {\n            return await _request(this.fetch, 'POST', `${this.url}/recover`, {\n                body: {\n                    email,\n                    code_challenge: codeChallenge,\n                    code_challenge_method: codeChallengeMethod,\n                    gotrue_meta_security: { captcha_token: options.captchaToken },\n                },\n                headers: this.headers,\n                redirectTo: options.redirectTo,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Gets all the identities linked to a user.\n     */\n    async getUserIdentities() {\n        var _a;\n        try {\n            const { data, error } = await this.getUser();\n            if (error)\n                throw error;\n            return { data: { identities: (_a = data.user.identities) !== null && _a !== void 0 ? _a : [] }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Links an oauth identity to an existing user.\n     * This method supports the PKCE flow.\n     */\n    async linkIdentity(credentials) {\n        var _a;\n        try {\n            const { data, error } = await this._useSession(async (result) => {\n                var _a, _b, _c, _d, _e;\n                const { data, error } = result;\n                if (error)\n                    throw error;\n                const url = await this._getUrlForProvider(`${this.url}/user/identities/authorize`, credentials.provider, {\n                    redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n                    scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n                    queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n                    skipBrowserRedirect: true,\n                });\n                return await _request(this.fetch, 'GET', url, {\n                    headers: this.headers,\n                    jwt: (_e = (_d = data.session) === null || _d === void 0 ? void 0 : _d.access_token) !== null && _e !== void 0 ? _e : undefined,\n                });\n            });\n            if (error)\n                throw error;\n            if (isBrowser() && !((_a = credentials.options) === null || _a === void 0 ? void 0 : _a.skipBrowserRedirect)) {\n                window.location.assign(data === null || data === void 0 ? void 0 : data.url);\n            }\n            return { data: { provider: credentials.provider, url: data === null || data === void 0 ? void 0 : data.url }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { provider: credentials.provider, url: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\n     */\n    async unlinkIdentity(identity) {\n        try {\n            return await this._useSession(async (result) => {\n                var _a, _b;\n                const { data, error } = result;\n                if (error) {\n                    throw error;\n                }\n                return await _request(this.fetch, 'DELETE', `${this.url}/user/identities/${identity.identity_id}`, {\n                    headers: this.headers,\n                    jwt: (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined,\n                });\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    async _refreshAccessToken(refreshToken) {\n        const debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`;\n        this._debug(debugName, 'begin');\n        try {\n            const startedAt = Date.now();\n            // will attempt to refresh the token with exponential backoff\n            return await retryable(async (attempt) => {\n                if (attempt > 0) {\n                    await sleep(200 * Math.pow(2, attempt - 1)); // 200, 400, 800, ...\n                }\n                this._debug(debugName, 'refreshing attempt', attempt);\n                return await _request(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n                    body: { refresh_token: refreshToken },\n                    headers: this.headers,\n                    xform: _sessionResponse,\n                });\n            }, (attempt, error) => {\n                const nextBackOffInterval = 200 * Math.pow(2, attempt);\n                return (error &&\n                    isAuthRetryableFetchError(error) &&\n                    // retryable only if the request can be sent before the backoff overflows the tick duration\n                    Date.now() + nextBackOffInterval - startedAt < AUTO_REFRESH_TICK_DURATION_MS);\n            });\n        }\n        catch (error) {\n            this._debug(debugName, 'error', error);\n            if (isAuthError(error)) {\n                return { data: { session: null, user: null }, error };\n            }\n            throw error;\n        }\n        finally {\n            this._debug(debugName, 'end');\n        }\n    }\n    _isValidSession(maybeSession) {\n        const isValidSession = typeof maybeSession === 'object' &&\n            maybeSession !== null &&\n            'access_token' in maybeSession &&\n            'refresh_token' in maybeSession &&\n            'expires_at' in maybeSession;\n        return isValidSession;\n    }\n    async _handleProviderSignIn(provider, options) {\n        const url = await this._getUrlForProvider(`${this.url}/authorize`, provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n            queryParams: options.queryParams,\n        });\n        this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url);\n        // try to open on the browser\n        if (isBrowser() && !options.skipBrowserRedirect) {\n            window.location.assign(url);\n        }\n        return { data: { provider, url }, error: null };\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes the token\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    async _recoverAndRefresh() {\n        var _a;\n        const debugName = '#_recoverAndRefresh()';\n        this._debug(debugName, 'begin');\n        try {\n            const currentSession = await getItemAsync(this.storage, this.storageKey);\n            this._debug(debugName, 'session from storage', currentSession);\n            if (!this._isValidSession(currentSession)) {\n                this._debug(debugName, 'session is not valid');\n                if (currentSession !== null) {\n                    await this._removeSession();\n                }\n                return;\n            }\n            const expiresWithMargin = ((_a = currentSession.expires_at) !== null && _a !== void 0 ? _a : Infinity) * 1000 - Date.now() < EXPIRY_MARGIN_MS;\n            this._debug(debugName, `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${EXPIRY_MARGIN_MS}s`);\n            if (expiresWithMargin) {\n                if (this.autoRefreshToken && currentSession.refresh_token) {\n                    const { error } = await this._callRefreshToken(currentSession.refresh_token);\n                    if (error) {\n                        console.error(error);\n                        if (!isAuthRetryableFetchError(error)) {\n                            this._debug(debugName, 'refresh failed with a non-retryable error, removing the session', error);\n                            await this._removeSession();\n                        }\n                    }\n                }\n            }\n            else {\n                // no need to persist currentSession again, as we just loaded it from\n                // local storage; persisting it again may overwrite a value saved by\n                // another client with access to the same local storage\n                await this._notifyAllSubscribers('SIGNED_IN', currentSession);\n            }\n        }\n        catch (err) {\n            this._debug(debugName, 'error', err);\n            console.error(err);\n            return;\n        }\n        finally {\n            this._debug(debugName, 'end');\n        }\n    }\n    async _callRefreshToken(refreshToken) {\n        var _a, _b;\n        if (!refreshToken) {\n            throw new AuthSessionMissingError();\n        }\n        // refreshing is already in progress\n        if (this.refreshingDeferred) {\n            return this.refreshingDeferred.promise;\n        }\n        const debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`;\n        this._debug(debugName, 'begin');\n        try {\n            this.refreshingDeferred = new Deferred();\n            const { data, error } = await this._refreshAccessToken(refreshToken);\n            if (error)\n                throw error;\n            if (!data.session)\n                throw new AuthSessionMissingError();\n            await this._saveSession(data.session);\n            await this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n            const result = { session: data.session, error: null };\n            this.refreshingDeferred.resolve(result);\n            return result;\n        }\n        catch (error) {\n            this._debug(debugName, 'error', error);\n            if (isAuthError(error)) {\n                const result = { session: null, error };\n                if (!isAuthRetryableFetchError(error)) {\n                    await this._removeSession();\n                }\n                (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(result);\n                return result;\n            }\n            (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\n            throw error;\n        }\n        finally {\n            this.refreshingDeferred = null;\n            this._debug(debugName, 'end');\n        }\n    }\n    async _notifyAllSubscribers(event, session, broadcast = true) {\n        const debugName = `#_notifyAllSubscribers(${event})`;\n        this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`);\n        try {\n            if (this.broadcastChannel && broadcast) {\n                this.broadcastChannel.postMessage({ event, session });\n            }\n            const errors = [];\n            const promises = Array.from(this.stateChangeEmitters.values()).map(async (x) => {\n                try {\n                    await x.callback(event, session);\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            });\n            await Promise.all(promises);\n            if (errors.length > 0) {\n                for (let i = 0; i < errors.length; i += 1) {\n                    console.error(errors[i]);\n                }\n                throw errors[0];\n            }\n        }\n        finally {\n            this._debug(debugName, 'end');\n        }\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    async _saveSession(session) {\n        this._debug('#_saveSession()', session);\n        // _saveSession is always called whenever a new session has been acquired\n        // so we can safely suppress the warning returned by future getSession calls\n        this.suppressGetSessionWarning = true;\n        await setItemAsync(this.storage, this.storageKey, session);\n    }\n    async _removeSession() {\n        this._debug('#_removeSession()');\n        await removeItemAsync(this.storage, this.storageKey);\n        await this._notifyAllSubscribers('SIGNED_OUT', null);\n    }\n    /**\n     * Removes any registered visibilitychange callback.\n     *\n     * {@see #startAutoRefresh}\n     * {@see #stopAutoRefresh}\n     */\n    _removeVisibilityChangedCallback() {\n        this._debug('#_removeVisibilityChangedCallback()');\n        const callback = this.visibilityChangedCallback;\n        this.visibilityChangedCallback = null;\n        try {\n            if (callback && isBrowser() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n                window.removeEventListener('visibilitychange', callback);\n            }\n        }\n        catch (e) {\n            console.error('removing visibilitychange callback failed', e);\n        }\n    }\n    /**\n     * This is the private implementation of {@link #startAutoRefresh}. Use this\n     * within the library.\n     */\n    async _startAutoRefresh() {\n        await this._stopAutoRefresh();\n        this._debug('#_startAutoRefresh()');\n        const ticker = setInterval(() => this._autoRefreshTokenTick(), AUTO_REFRESH_TICK_DURATION_MS);\n        this.autoRefreshTicker = ticker;\n        if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n            // ticker is a NodeJS Timeout object that has an `unref` method\n            // https://nodejs.org/api/timers.html#timeoutunref\n            // When auto refresh is used in NodeJS (like for testing) the\n            // `setInterval` is preventing the process from being marked as\n            // finished and tests run endlessly. This can be prevented by calling\n            // `unref()` on the returned object.\n            ticker.unref();\n            // @ts-expect-error TS has no context of Deno\n        }\n        else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n            // similar like for NodeJS, but with the Deno API\n            // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n            // @ts-expect-error TS has no context of Deno\n            Deno.unrefTimer(ticker);\n        }\n        // run the tick immediately, but in the next pass of the event loop so that\n        // #_initialize can be allowed to complete without recursively waiting on\n        // itself\n        setTimeout(async () => {\n            await this.initializePromise;\n            await this._autoRefreshTokenTick();\n        }, 0);\n    }\n    /**\n     * This is the private implementation of {@link #stopAutoRefresh}. Use this\n     * within the library.\n     */\n    async _stopAutoRefresh() {\n        this._debug('#_stopAutoRefresh()');\n        const ticker = this.autoRefreshTicker;\n        this.autoRefreshTicker = null;\n        if (ticker) {\n            clearInterval(ticker);\n        }\n    }\n    /**\n     * Starts an auto-refresh process in the background. The session is checked\n     * every few seconds. Close to the time of expiration a process is started to\n     * refresh the session. If refreshing fails it will be retried for as long as\n     * necessary.\n     *\n     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n     * to call this function, it will be called for you.\n     *\n     * On browsers the refresh process works only when the tab/window is in the\n     * foreground to conserve resources as well as prevent race conditions and\n     * flooding auth with requests. If you call this method any managed\n     * visibility change callback will be removed and you must manage visibility\n     * changes on your own.\n     *\n     * On non-browser platforms the refresh process works *continuously* in the\n     * background, which may not be desirable. You should hook into your\n     * platform's foreground indication mechanism and call these methods\n     * appropriately to conserve resources.\n     *\n     * {@see #stopAutoRefresh}\n     */\n    async startAutoRefresh() {\n        this._removeVisibilityChangedCallback();\n        await this._startAutoRefresh();\n    }\n    /**\n     * Stops an active auto refresh process running in the background (if any).\n     *\n     * If you call this method any managed visibility change callback will be\n     * removed and you must manage visibility changes on your own.\n     *\n     * See {@link #startAutoRefresh} for more details.\n     */\n    async stopAutoRefresh() {\n        this._removeVisibilityChangedCallback();\n        await this._stopAutoRefresh();\n    }\n    /**\n     * Runs the auto refresh token tick.\n     */\n    async _autoRefreshTokenTick() {\n        this._debug('#_autoRefreshTokenTick()', 'begin');\n        try {\n            await this._acquireLock(0, async () => {\n                try {\n                    const now = Date.now();\n                    try {\n                        return await this._useSession(async (result) => {\n                            const { data: { session }, } = result;\n                            if (!session || !session.refresh_token || !session.expires_at) {\n                                this._debug('#_autoRefreshTokenTick()', 'no session');\n                                return;\n                            }\n                            // session will expire in this many ticks (or has already expired if <= 0)\n                            const expiresInTicks = Math.floor((session.expires_at * 1000 - now) / AUTO_REFRESH_TICK_DURATION_MS);\n                            this._debug('#_autoRefreshTokenTick()', `access token expires in ${expiresInTicks} ticks, a tick lasts ${AUTO_REFRESH_TICK_DURATION_MS}ms, refresh threshold is ${AUTO_REFRESH_TICK_THRESHOLD} ticks`);\n                            if (expiresInTicks <= AUTO_REFRESH_TICK_THRESHOLD) {\n                                await this._callRefreshToken(session.refresh_token);\n                            }\n                        });\n                    }\n                    catch (e) {\n                        console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\n                    }\n                }\n                finally {\n                    this._debug('#_autoRefreshTokenTick()', 'end');\n                }\n            });\n        }\n        catch (e) {\n            if (e.isAcquireTimeout || e instanceof LockAcquireTimeoutError) {\n                this._debug('auto refresh token tick lock not available');\n            }\n            else {\n                throw e;\n            }\n        }\n    }\n    /**\n     * Registers callbacks on the browser / platform, which in-turn run\n     * algorithms when the browser window/tab are in foreground. On non-browser\n     * platforms it assumes always foreground.\n     */\n    async _handleVisibilityChange() {\n        this._debug('#_handleVisibilityChange()');\n        if (!isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            if (this.autoRefreshToken) {\n                // in non-browser environments the refresh token ticker runs always\n                this.startAutoRefresh();\n            }\n            return false;\n        }\n        try {\n            this.visibilityChangedCallback = async () => await this._onVisibilityChanged(false);\n            window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n            // now immediately call the visbility changed callback to setup with the\n            // current visbility state\n            await this._onVisibilityChanged(true); // initial call\n        }\n        catch (error) {\n            console.error('_handleVisibilityChange', error);\n        }\n    }\n    /**\n     * Callback registered with `window.addEventListener('visibilitychange')`.\n     */\n    async _onVisibilityChanged(calledFromInitialize) {\n        const methodName = `#_onVisibilityChanged(${calledFromInitialize})`;\n        this._debug(methodName, 'visibilityState', document.visibilityState);\n        if (document.visibilityState === 'visible') {\n            if (this.autoRefreshToken) {\n                // in browser environments the refresh token ticker runs only on focused tabs\n                // which prevents race conditions\n                this._startAutoRefresh();\n            }\n            if (!calledFromInitialize) {\n                // called when the visibility has changed, i.e. the browser\n                // transitioned from hidden -> visible so we need to see if the session\n                // should be recovered immediately... but to do that we need to acquire\n                // the lock first asynchronously\n                await this.initializePromise;\n                await this._acquireLock(-1, async () => {\n                    if (document.visibilityState !== 'visible') {\n                        this._debug(methodName, 'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting');\n                        // visibility has changed while waiting for the lock, abort\n                        return;\n                    }\n                    // recover the session\n                    await this._recoverAndRefresh();\n                });\n            }\n        }\n        else if (document.visibilityState === 'hidden') {\n            if (this.autoRefreshToken) {\n                this._stopAutoRefresh();\n            }\n        }\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n     */\n    async _getUrlForProvider(url, provider, options) {\n        const urlParams = [`provider=${encodeURIComponent(provider)}`];\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n        }\n        if (options === null || options === void 0 ? void 0 : options.scopes) {\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n        }\n        if (this.flowType === 'pkce') {\n            const [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);\n            const flowParams = new URLSearchParams({\n                code_challenge: `${encodeURIComponent(codeChallenge)}`,\n                code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`,\n            });\n            urlParams.push(flowParams.toString());\n        }\n        if (options === null || options === void 0 ? void 0 : options.queryParams) {\n            const query = new URLSearchParams(options.queryParams);\n            urlParams.push(query.toString());\n        }\n        if (options === null || options === void 0 ? void 0 : options.skipBrowserRedirect) {\n            urlParams.push(`skip_http_redirect=${options.skipBrowserRedirect}`);\n        }\n        return `${url}?${urlParams.join('&')}`;\n    }\n    async _unenroll(params) {\n        try {\n            return await this._useSession(async (result) => {\n                var _a;\n                const { data: sessionData, error: sessionError } = result;\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                return await _request(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    async _enroll(params) {\n        try {\n            return await this._useSession(async (result) => {\n                var _a, _b;\n                const { data: sessionData, error: sessionError } = result;\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                const body = Object.assign({ friendly_name: params.friendlyName, factor_type: params.factorType }, (params.factorType === 'phone' ? { phone: params.phone } : { issuer: params.issuer }));\n                const { data, error } = await _request(this.fetch, 'POST', `${this.url}/factors`, {\n                    body,\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n                if (error) {\n                    return { data: null, error };\n                }\n                if (params.factorType === 'totp' && ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code)) {\n                    data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\n                }\n                return { data, error: null };\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * {@see GoTrueMFAApi#verify}\n     */\n    async _verify(params) {\n        return this._acquireLock(-1, async () => {\n            try {\n                return await this._useSession(async (result) => {\n                    var _a;\n                    const { data: sessionData, error: sessionError } = result;\n                    if (sessionError) {\n                        return { data: null, error: sessionError };\n                    }\n                    const { data, error } = await _request(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/verify`, {\n                        body: { code: params.code, challenge_id: params.challengeId },\n                        headers: this.headers,\n                        jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                    });\n                    if (error) {\n                        return { data: null, error };\n                    }\n                    await this._saveSession(Object.assign({ expires_at: Math.round(Date.now() / 1000) + data.expires_in }, data));\n                    await this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n                    return { data, error };\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challenge}\n     */\n    async _challenge(params) {\n        return this._acquireLock(-1, async () => {\n            try {\n                return await this._useSession(async (result) => {\n                    var _a;\n                    const { data: sessionData, error: sessionError } = result;\n                    if (sessionError) {\n                        return { data: null, error: sessionError };\n                    }\n                    return await _request(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/challenge`, {\n                        body: { channel: params.channel },\n                        headers: this.headers,\n                        jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                    });\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challengeAndVerify}\n     */\n    async _challengeAndVerify(params) {\n        // both _challenge and _verify independently acquire the lock, so no need\n        // to acquire it here\n        const { data: challengeData, error: challengeError } = await this._challenge({\n            factorId: params.factorId,\n        });\n        if (challengeError) {\n            return { data: null, error: challengeError };\n        }\n        return await this._verify({\n            factorId: params.factorId,\n            challengeId: challengeData.id,\n            code: params.code,\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#listFactors}\n     */\n    async _listFactors() {\n        // use #getUser instead of #_getUser as the former acquires a lock\n        const { data: { user }, error: userError, } = await this.getUser();\n        if (userError) {\n            return { data: null, error: userError };\n        }\n        const factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\n        const totp = factors.filter((factor) => factor.factor_type === 'totp' && factor.status === 'verified');\n        const phone = factors.filter((factor) => factor.factor_type === 'phone' && factor.status === 'verified');\n        return {\n            data: {\n                all: factors,\n                totp,\n                phone,\n            },\n            error: null,\n        };\n    }\n    /**\n     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n     */\n    async _getAuthenticatorAssuranceLevel() {\n        return this._acquireLock(-1, async () => {\n            return await this._useSession(async (result) => {\n                var _a, _b;\n                const { data: { session }, error: sessionError, } = result;\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                if (!session) {\n                    return {\n                        data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\n                        error: null,\n                    };\n                }\n                const { payload } = decodeJWT(session.access_token);\n                let currentLevel = null;\n                if (payload.aal) {\n                    currentLevel = payload.aal;\n                }\n                let nextLevel = currentLevel;\n                const verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter((factor) => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\n                if (verifiedFactors.length > 0) {\n                    nextLevel = 'aal2';\n                }\n                const currentAuthenticationMethods = payload.amr || [];\n                return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null };\n            });\n        });\n    }\n    async fetchJwk(kid, jwks = { keys: [] }) {\n        // try fetching from the supplied jwks\n        let jwk = jwks.keys.find((key) => key.kid === kid);\n        if (jwk) {\n            return jwk;\n        }\n        // try fetching from cache\n        jwk = this.jwks.keys.find((key) => key.kid === kid);\n        // jwk exists and jwks isn't stale\n        if (jwk && this.jwks_cached_at + JWKS_TTL > Date.now()) {\n            return jwk;\n        }\n        // jwk isn't cached in memory so we need to fetch it from the well-known endpoint\n        const { data, error } = await _request(this.fetch, 'GET', `${this.url}/.well-known/jwks.json`, {\n            headers: this.headers,\n        });\n        if (error) {\n            throw error;\n        }\n        if (!data.keys || data.keys.length === 0) {\n            throw new AuthInvalidJwtError('JWKS is empty');\n        }\n        this.jwks = data;\n        this.jwks_cached_at = Date.now();\n        // Find the signing key\n        jwk = data.keys.find((key) => key.kid === kid);\n        if (!jwk) {\n            throw new AuthInvalidJwtError('No matching signing key found in JWKS');\n        }\n        return jwk;\n    }\n    /**\n     * @experimental This method may change in future versions.\n     * @description Gets the claims from a JWT. If the JWT is symmetric JWTs, it will call getUser() to verify against the server. If the JWT is asymmetric, it will be verified against the JWKS using the WebCrypto API.\n     */\n    async getClaims(jwt, jwks = { keys: [] }) {\n        try {\n            let token = jwt;\n            if (!token) {\n                const { data, error } = await this.getSession();\n                if (error || !data.session) {\n                    return { data: null, error };\n                }\n                token = data.session.access_token;\n            }\n            const { header, payload, signature, raw: { header: rawHeader, payload: rawPayload }, } = decodeJWT(token);\n            // Reject expired JWTs\n            validateExp(payload.exp);\n            // If symmetric algorithm or WebCrypto API is unavailable, fallback to getUser()\n            if (!header.kid ||\n                header.alg === 'HS256' ||\n                !('crypto' in globalThis && 'subtle' in globalThis.crypto)) {\n                const { error } = await this.getUser(token);\n                if (error) {\n                    throw error;\n                }\n                // getUser succeeds so the claims in the JWT can be trusted\n                return {\n                    data: {\n                        claims: payload,\n                        header,\n                        signature,\n                    },\n                    error: null,\n                };\n            }\n            const algorithm = getAlgorithm(header.alg);\n            const signingKey = await this.fetchJwk(header.kid, jwks);\n            // Convert JWK to CryptoKey\n            const publicKey = await crypto.subtle.importKey('jwk', signingKey, algorithm, true, [\n                'verify',\n            ]);\n            // Verify the signature\n            const isValid = await crypto.subtle.verify(algorithm, publicKey, signature, stringToUint8Array(`${rawHeader}.${rawPayload}`));\n            if (!isValid) {\n                throw new AuthInvalidJwtError('Invalid JWT signature');\n            }\n            // If verification succeeds, decode and return claims\n            return {\n                data: {\n                    claims: payload,\n                    header,\n                    signature,\n                },\n                error: null,\n            };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n}\nGoTrueClient.nextInstanceID = 0;\n//# sourceMappingURL=GoTrueClient.js.map","import GoTrueClient from './GoTrueClient';\nconst AuthClient = GoTrueClient;\nexport default AuthClient;\n//# sourceMappingURL=AuthClient.js.map","import { AuthClient } from '@supabase/auth-js';\nexport class SupabaseAuthClient extends AuthClient {\n    constructor(options) {\n        super(options);\n    }\n}\n//# sourceMappingURL=SupabaseAuthClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { FunctionsClient } from '@supabase/functions-js';\nimport { PostgrestClient, } from '@supabase/postgrest-js';\nimport { RealtimeClient, } from '@supabase/realtime-js';\nimport { StorageClient as SupabaseStorageClient } from '@supabase/storage-js';\nimport { DEFAULT_GLOBAL_OPTIONS, DEFAULT_DB_OPTIONS, DEFAULT_AUTH_OPTIONS, DEFAULT_REALTIME_OPTIONS, } from './lib/constants';\nimport { fetchWithAuth } from './lib/fetch';\nimport { ensureTrailingSlash, applySettingDefaults } from './lib/helpers';\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient';\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.global.fetch A custom fetch implementation.\n     * @param options.global.headers Any additional headers to send with each network request.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n        var _a, _b, _c;\n        this.supabaseUrl = supabaseUrl;\n        this.supabaseKey = supabaseKey;\n        if (!supabaseUrl)\n            throw new Error('supabaseUrl is required.');\n        if (!supabaseKey)\n            throw new Error('supabaseKey is required.');\n        const _supabaseUrl = ensureTrailingSlash(supabaseUrl);\n        const baseUrl = new URL(_supabaseUrl);\n        this.realtimeUrl = new URL('realtime/v1', baseUrl);\n        this.realtimeUrl.protocol = this.realtimeUrl.protocol.replace('http', 'ws');\n        this.authUrl = new URL('auth/v1', baseUrl);\n        this.storageUrl = new URL('storage/v1', baseUrl);\n        this.functionsUrl = new URL('functions/v1', baseUrl);\n        // default storage key uses the supabase project ref as a namespace\n        const defaultStorageKey = `sb-${baseUrl.hostname.split('.')[0]}-auth-token`;\n        const DEFAULTS = {\n            db: DEFAULT_DB_OPTIONS,\n            realtime: DEFAULT_REALTIME_OPTIONS,\n            auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), { storageKey: defaultStorageKey }),\n            global: DEFAULT_GLOBAL_OPTIONS,\n        };\n        const settings = applySettingDefaults(options !== null && options !== void 0 ? options : {}, DEFAULTS);\n        this.storageKey = (_a = settings.auth.storageKey) !== null && _a !== void 0 ? _a : '';\n        this.headers = (_b = settings.global.headers) !== null && _b !== void 0 ? _b : {};\n        if (!settings.accessToken) {\n            this.auth = this._initSupabaseAuthClient((_c = settings.auth) !== null && _c !== void 0 ? _c : {}, this.headers, settings.global.fetch);\n        }\n        else {\n            this.accessToken = settings.accessToken;\n            this.auth = new Proxy({}, {\n                get: (_, prop) => {\n                    throw new Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(prop)} is not possible`);\n                },\n            });\n        }\n        this.fetch = fetchWithAuth(supabaseKey, this._getAccessToken.bind(this), settings.global.fetch);\n        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers, accessToken: this._getAccessToken.bind(this) }, settings.realtime));\n        this.rest = new PostgrestClient(new URL('rest/v1', baseUrl).href, {\n            headers: this.headers,\n            schema: settings.db.schema,\n            fetch: this.fetch,\n        });\n        if (!settings.accessToken) {\n            this._listenForAuthEvents();\n        }\n    }\n    /**\n     * Supabase Functions allows you to deploy and invoke edge functions.\n     */\n    get functions() {\n        return new FunctionsClient(this.functionsUrl.href, {\n            headers: this.headers,\n            customFetch: this.fetch,\n        });\n    }\n    /**\n     * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n     */\n    get storage() {\n        return new SupabaseStorageClient(this.storageUrl.href, this.headers, this.fetch);\n    }\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */\n    from(relation) {\n        return this.rest.from(relation);\n    }\n    // NOTE: signatures must be kept in sync with PostgrestClient.schema\n    /**\n     * Select a schema to query or perform an function (rpc) call.\n     *\n     * The schema needs to be on the list of exposed schemas inside Supabase.\n     *\n     * @param schema - The schema to query\n     */\n    schema(schema) {\n        return this.rest.schema(schema);\n    }\n    // NOTE: signatures must be kept in sync with PostgrestClient.rpc\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.get - When set to `true`, the function will be called with\n     * read-only access mode.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    rpc(fn, args = {}, options = {}) {\n        return this.rest.rpc(fn, args, options);\n    }\n    /**\n     * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n     *\n     * @param {string} name - The name of the Realtime channel.\n     * @param {Object} opts - The options to pass to the Realtime channel.\n     *\n     */\n    channel(name, opts = { config: {} }) {\n        return this.realtime.channel(name, opts);\n    }\n    /**\n     * Returns all Realtime channels.\n     */\n    getChannels() {\n        return this.realtime.getChannels();\n    }\n    /**\n     * Unsubscribes and removes Realtime channel from Realtime client.\n     *\n     * @param {RealtimeChannel} channel - The name of the Realtime channel.\n     *\n     */\n    removeChannel(channel) {\n        return this.realtime.removeChannel(channel);\n    }\n    /**\n     * Unsubscribes and removes all Realtime channels from Realtime client.\n     */\n    removeAllChannels() {\n        return this.realtime.removeAllChannels();\n    }\n    _getAccessToken() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.accessToken) {\n                return yield this.accessToken();\n            }\n            const { data } = yield this.auth.getSession();\n            return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : null;\n        });\n    }\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, storage, storageKey, flowType, lock, debug, }, headers, fetch) {\n        const authHeaders = {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            apikey: `${this.supabaseKey}`,\n        };\n        return new SupabaseAuthClient({\n            url: this.authUrl.href,\n            headers: Object.assign(Object.assign({}, authHeaders), headers),\n            storageKey: storageKey,\n            autoRefreshToken,\n            persistSession,\n            detectSessionInUrl,\n            storage,\n            flowType,\n            lock,\n            debug,\n            fetch,\n            // auth checks if there is a custom authorizaiton header using this flag\n            // so it knows whether to return an error when getUser is called with no session\n            hasCustomAuthorizationHeader: 'Authorization' in this.headers,\n        });\n    }\n    _initRealtimeClient(options) {\n        return new RealtimeClient(this.realtimeUrl.href, Object.assign(Object.assign({}, options), { params: Object.assign({ apikey: this.supabaseKey }, options === null || options === void 0 ? void 0 : options.params) }));\n    }\n    _listenForAuthEvents() {\n        let data = this.auth.onAuthStateChange((event, session) => {\n            this._handleTokenChanged(event, 'CLIENT', session === null || session === void 0 ? void 0 : session.access_token);\n        });\n        return data;\n    }\n    _handleTokenChanged(event, source, token) {\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n            this.changedAccessToken !== token) {\n            this.changedAccessToken = token;\n        }\n        else if (event === 'SIGNED_OUT') {\n            this.realtime.setAuth();\n            if (source == 'STORAGE')\n                this.auth.signOut();\n            this.changedAccessToken = undefined;\n        }\n    }\n}\n//# sourceMappingURL=SupabaseClient.js.map","import SupabaseClient from './SupabaseClient';\nexport * from '@supabase/auth-js';\nexport { PostgrestError, } from '@supabase/postgrest-js';\nexport { FunctionsHttpError, FunctionsFetchError, FunctionsRelayError, FunctionsError, FunctionRegion, } from '@supabase/functions-js';\nexport * from '@supabase/realtime-js';\nexport { default as SupabaseClient } from './SupabaseClient';\n/**\n * Creates a new Supabase Client.\n */\nexport const createClient = (supabaseUrl, supabaseKey, options) => {\n    return new SupabaseClient(supabaseUrl, supabaseKey, options);\n};\n//# sourceMappingURL=index.js.map","import { createClient, SupabaseClient, User } from '@supabase/supabase-js';\n\n// Supabase Configuration\n// Get them from: https://app.supabase.com/project/[your-project]/settings/api\nconst SUPABASE_URL = 'https://ehutpsrutyiorhqrwstz.supabase.co';\nconst SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVodXRwc3J1dHlpb3JocXJ3c3R6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTExMTMyNzQsImV4cCI6MjA2NjY4OTI3NH0.lcfz59Uc2S6q9Mn2lj2OC_WAMG5CncrNbEnHX7MFTeI';\n\n// INSTRUCTIONS: \n// 1. Go to https://app.supabase.com/project/ehutpsrutyiorhqrwstz/editor\n// 2. Run the SQL script from database-setup.sql to create the tables\n// 3. The application will automatically connect to your Supabase database\n\n// Initialize Supabase client\nexport let supabase: SupabaseClient | null = null;\n\n// Storage interface for consistent API\nexport interface Storage {\n  getItem(key: string): string | null;\n  setItem(key: string, value: string): void;\n  removeItem(key: string): void;\n}\n\n// Initialize Supabase or fall back to localStorage\nexport function initializeSupabase(): void {\n  // Prevent multiple client instances\n  if (supabase) {\n    console.log('Supabase client already initialized, skipping...');\n    return;\n  }\n  \n  try {\n    supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\n    console.log('✅ Supabase client initialized successfully');\n  } catch (error) {\n    console.error('❌ Error initializing Supabase client:', error);\n    supabase = null;\n  }\n}\n\n// LocalStorage wrapper that mimics Supabase interface\nexport const localStorageWrapper: Storage = {\n  getItem: (key: string) => localStorage.getItem(`nutrivalor_${key}`),\n  setItem: (key: string, value: string) => localStorage.setItem(`nutrivalor_${key}`, value),\n  removeItem: (key: string) => localStorage.removeItem(`nutrivalor_${key}`)\n};\n\n// Check if user is authenticated\nexport async function isAuthenticated(): Promise<boolean> {\n  if (supabase) {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      return !!user;\n    } catch (error) {\n      return false;\n    }\n  }\n  // Fallback to localStorage\n  return !!localStorageWrapper.getItem('currentUser');\n}\n\n// Get current user\nexport async function getCurrentUser(): Promise<User | null> {\n  if (supabase) {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      return user;\n    } catch (error) {\n      return null;\n    }\n  }\n  // Fallback to localStorage\n  const userData = localStorageWrapper.getItem('currentUser');\n  return userData ? JSON.parse(userData) : null;\n} ","import { supabase, getCurrentUser, localStorageWrapper } from './supabase-client';\r\nimport type { User } from '@supabase/supabase-js';\r\n\r\n// Authentication Module for NutriValor\r\nlet currentUser: User | null = null;\r\n\r\n// Initialize authentication\r\nexport async function initializeAuth(): Promise<void> {\r\n  // Removed excessive logging for performance\r\n  await checkAuthState();\r\n  setupEventListeners();\r\n}\r\n\r\n// Set up event listeners\r\nfunction setupEventListeners(): void {\r\n  // Auth form handlers - target the actual form elements inside the containers\r\n  const loginForm = document.querySelector('#loginForm form') as HTMLFormElement;\r\n  const signupForm = document.querySelector('#signupForm form') as HTMLFormElement;\r\n  const forgotForm = document.querySelector('#forgotForm form') as HTMLFormElement;\r\n  const logoutBtn = document.getElementById('logoutBtn') as HTMLButtonElement;\r\n\r\n  if (loginForm) {\r\n    loginForm.addEventListener('submit', handleLogin);\r\n    // Removed excessive logging for performance\r\n  } else {\r\n    console.warn('❌ Login form not found');\r\n  }\r\n  \r\n  if (signupForm) {\r\n    signupForm.addEventListener('submit', handleSignup);\r\n    // Removed excessive logging for performance\r\n  } else {\r\n    console.warn('❌ Signup form not found');\r\n  }\r\n  \r\n  if (forgotForm) {\r\n    forgotForm.addEventListener('submit', handleForgotPassword);\r\n    // Removed excessive logging for performance\r\n  } else {\r\n    console.warn('❌ Forgot password form not found');\r\n  }\r\n  \r\n  if (logoutBtn) {\r\n    logoutBtn.addEventListener('click', handleLogout);\r\n    // Removed excessive logging for performance\r\n  } else {\r\n    console.warn('❌ Logout button not found');\r\n  }\r\n\r\n  // Auth tab buttons\r\n  document.querySelectorAll('[data-auth-tab]').forEach(tab => {\r\n    tab.addEventListener('click', (e) => {\r\n      const target = e.target as HTMLElement;\r\n      const tabName = target.getAttribute('data-auth-tab');\r\n      if (tabName) showAuthTab(tabName);\r\n    });\r\n  });\r\n\r\n  // Forgot password link\r\n  const forgotLink = document.querySelector('[data-forgot-password]');\r\n  if (forgotLink) {\r\n    forgotLink.addEventListener('click', (e) => {\r\n      e.preventDefault();\r\n      showForgotPassword();\r\n    });\r\n  }\r\n}\r\n\r\n// Check current authentication state\r\nexport async function checkAuthState(): Promise<void> {\r\n  try {\r\n    showLoading();\r\n    \r\n    const user = await getCurrentUser();\r\n    \r\n    if (user) {\r\n      await handleAuthSuccess(user);\r\n    } else {\r\n      showAuthSection();\r\n    }\r\n  } catch (error) {\r\n    console.error('Error checking auth state:', error);\r\n    showAuthSection();\r\n  }\r\n}\r\n\r\n// Check if user is authenticated\r\nexport async function isAuthenticated(): Promise<boolean> {\r\n  const user = await getCurrentUser();\r\n  return !!user;\r\n}\r\n\r\n// Get current user\r\nexport function getCurrentAuthUser(): User | null {\r\n  return currentUser;\r\n}\r\n\r\n// Handle successful authentication\r\nasync function handleAuthSuccess(user: User): Promise<void> {\r\n  currentUser = user;\r\n  hideLoading();\r\n  showMainApp();\r\n  await updateUserInfo(user);\r\n  loadUserData();\r\n  \r\n  // Auto-load profile data to populate the Settings form\r\n  try {\r\n    const mainModule = await import('../main');\r\n    if ('loadProfile' in mainModule && typeof mainModule.loadProfile === 'function') {\r\n      await mainModule.loadProfile();\r\n      console.log('✅ Profile auto-loaded after login');\r\n    }\r\n  } catch (error) {\r\n    console.log('ℹ️ Profile auto-load skipped (not available or error):', error);\r\n  }\r\n  \r\n  // Update admin navigation based on user role\r\n  updateAdminNavigation();\r\n}\r\n\r\n// Show/hide different sections\r\nfunction showLoading(): void {\r\n  const loadingScreen = document.getElementById('loadingScreen');\r\n  const authSection = document.getElementById('auth-section');\r\n  const mainApp = document.getElementById('app-section');\r\n  \r\n  if (loadingScreen) loadingScreen.style.display = 'flex';\r\n  if (authSection) authSection.style.display = 'none';\r\n  if (mainApp) mainApp.style.display = 'none';\r\n}\r\n\r\nfunction hideLoading(): void {\r\n  const loadingScreen = document.getElementById('loadingScreen');\r\n  if (loadingScreen) loadingScreen.style.display = 'none';\r\n}\r\n\r\nfunction showAuthSection(): void {\r\n  hideLoading();\r\n  const authSection = document.getElementById('auth-section');\r\n  const mainApp = document.getElementById('app-section');\r\n  \r\n  if (authSection) authSection.style.display = 'flex';\r\n  if (mainApp) mainApp.style.display = 'none';\r\n}\r\n\r\nfunction showMainApp(): void {\r\n  hideLoading();\r\n  const authSection = document.getElementById('auth-section');\r\n  const mainApp = document.getElementById('app-section');\r\n  \r\n  if (authSection) authSection.style.display = 'none';\r\n  if (mainApp) mainApp.style.display = 'block';\r\n}\r\n\r\n// Update user info in header\r\nasync function updateUserInfo(user: User): Promise<void> {\r\n  const userEmailElement = document.getElementById('userEmail');\r\n  const headerAvatar = document.getElementById('headerAvatar') as HTMLImageElement;\r\n  const headerAvatarPlaceholder = document.getElementById('headerAvatarPlaceholder');\r\n  \r\n  if (userEmailElement) {\r\n    let displayName = user.email || 'User';\r\n    let avatarSrc = null;\r\n    \r\n    // Try to load profile from Supabase database\r\n    try {\r\n      const { loadProfileFromDatabase } = await import('./database');\r\n      const profileData = await loadProfileFromDatabase();\r\n      \r\n      if (profileData) {\r\n        if (profileData.name && profileData.name.trim()) {\r\n          displayName = profileData.name;\r\n        }\r\n        if (profileData.avatar_url) {\r\n          avatarSrc = profileData.avatar_url;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log('Could not load profile from database for header display:', error);\r\n      \r\n      // Fallback to localStorage\r\n      const savedProfile = localStorage.getItem('nutrivalor_profile');\r\n      if (savedProfile) {\r\n        try {\r\n          const profileData = JSON.parse(savedProfile);\r\n          if (profileData.name && profileData.name.trim()) {\r\n            displayName = profileData.name;\r\n          }\r\n          if (profileData.avatar) {\r\n            avatarSrc = profileData.avatar;\r\n          }\r\n        } catch (error) {\r\n          console.log('Could not parse saved profile for display name');\r\n        }\r\n      }\r\n    }\r\n    \r\n    userEmailElement.textContent = displayName;\r\n    \r\n    // Update header avatar\r\n    if (headerAvatar && headerAvatarPlaceholder) {\r\n      if (avatarSrc) {\r\n        headerAvatar.src = avatarSrc;\r\n        headerAvatar.style.display = 'block';\r\n        headerAvatarPlaceholder.style.display = 'none';\r\n      } else {\r\n        headerAvatar.style.display = 'none';\r\n        headerAvatarPlaceholder.style.display = 'flex';\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Auth tab switching\r\nexport function showAuthTab(tab: string): void {\r\n  // Remove active class from all tabs\r\n  document.querySelectorAll('.auth-tab').forEach(t => t.classList.remove('active'));\r\n  \r\n  // Hide all forms\r\n  const loginForm = document.getElementById('loginForm');\r\n  const signupForm = document.getElementById('signupForm');\r\n  const forgotForm = document.getElementById('forgotForm');\r\n  \r\n  if (loginForm) loginForm.style.display = 'none';\r\n  if (signupForm) signupForm.style.display = 'none';\r\n  if (forgotForm) forgotForm.style.display = 'none';\r\n  \r\n  // Show selected tab and form\r\n  if (tab === 'login') {\r\n    const loginTab = document.querySelector('.auth-tab');\r\n    if (loginTab) loginTab.classList.add('active');\r\n    if (loginForm) loginForm.style.display = 'block';\r\n  } else if (tab === 'signup') {\r\n    const signupTab = document.querySelectorAll('.auth-tab')[1];\r\n    if (signupTab) signupTab.classList.add('active');\r\n    if (signupForm) signupForm.style.display = 'block';\r\n  }\r\n}\r\n\r\n// Show forgot password form\r\nexport function showForgotPassword(): void {\r\n  document.querySelectorAll('.auth-tab').forEach(t => t.classList.remove('active'));\r\n  \r\n  const loginForm = document.getElementById('loginForm');\r\n  const signupForm = document.getElementById('signupForm');\r\n  const forgotForm = document.getElementById('forgotForm');\r\n  \r\n  if (loginForm) loginForm.style.display = 'none';\r\n  if (signupForm) signupForm.style.display = 'none';\r\n  if (forgotForm) forgotForm.style.display = 'block';\r\n}\r\n\r\n// Show message toast\r\nfunction showMessage(message: string, type: 'success' | 'error' | 'info' = 'success'): void {\r\n  const toast = document.createElement('div');\r\n  toast.className = `message-toast ${type}`;\r\n  toast.textContent = message;\r\n  \r\n  document.body.appendChild(toast);\r\n  \r\n  // Force reflow to ensure animation works\r\n  void toast.offsetWidth;\r\n  \r\n  toast.classList.add('show');\r\n  \r\n  setTimeout(() => {\r\n    toast.classList.remove('show');\r\n    \r\n    setTimeout(() => {\r\n      document.body.removeChild(toast);\r\n    }, 300); // Match transition duration\r\n  }, 5000);\r\n}\r\n\r\n// Handle login\r\nasync function handleLogin(event: Event): Promise<void> {\r\n  event.preventDefault();\r\n  \r\n  const form = event.target as HTMLFormElement;\r\n  const formData = new FormData(form);\r\n  const email = formData.get('email') as string;\r\n  const password = formData.get('password') as string;\r\n  \r\n  if (!email || !password) {\r\n    showMessage('Please fill in all fields', 'error');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    showLoading();\r\n    \r\n    if (!supabase) {\r\n      // Fallback to localStorage\r\n      const users = JSON.parse(localStorageWrapper.getItem('users') || '[]');\r\n      const user = users.find((u: any) => u.email === email && u.password === password);\r\n      \r\n      if (!user) {\r\n        showMessage('Invalid email or password', 'error');\r\n        showAuthSection();\r\n        return;\r\n      }\r\n      \r\n      const userWithoutPassword = { ...user };\r\n      delete userWithoutPassword.password;\r\n      localStorageWrapper.setItem('currentUser', JSON.stringify(userWithoutPassword));\r\n      await handleAuthSuccess(userWithoutPassword);\r\n      return;\r\n    }\r\n    \r\n    const { data, error } = await supabase.auth.signInWithPassword({\r\n      email,\r\n      password\r\n    });\r\n    \r\n    if (error) {\r\n      showMessage(error.message, 'error');\r\n      showAuthSection();\r\n      return;\r\n    }\r\n    \r\n    if (data.user) {\r\n      await handleAuthSuccess(data.user);\r\n      showMessage('Login successful!', 'success');\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    showMessage('An error occurred during login', 'error');\r\n    showAuthSection();\r\n  }\r\n}\r\n\r\n// Handle signup\r\nasync function handleSignup(event: Event): Promise<void> {\r\n  event.preventDefault();\r\n  \r\n  const form = event.target as HTMLFormElement;\r\n  const formData = new FormData(form);\r\n  const name = formData.get('name') as string;\r\n  const email = formData.get('email') as string;\r\n  const password = formData.get('password') as string;\r\n  \r\n  if (!name || !email || !password) {\r\n    showMessage('Please fill in all fields', 'error');\r\n    return;\r\n  }\r\n  \r\n  if (password.length < 6) {\r\n    showMessage('Password must be at least 6 characters', 'error');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    showLoading();\r\n    \r\n    if (!supabase) {\r\n      // Fallback to localStorage\r\n      const users = JSON.parse(localStorageWrapper.getItem('users') || '[]');\r\n      const existingUser = users.find((u: any) => u.email === email);\r\n      \r\n      if (existingUser) {\r\n        showMessage('User already exists', 'error');\r\n        showAuthSection();\r\n        return;\r\n      }\r\n      \r\n      const user = {\r\n        id: generateId(),\r\n        email,\r\n        user_metadata: { name },\r\n        app_metadata: {},\r\n        aud: 'authenticated',\r\n        created_at: new Date().toISOString()\r\n      };\r\n      \r\n      users.push({ ...user, password });\r\n      localStorageWrapper.setItem('users', JSON.stringify(users));\r\n      localStorageWrapper.setItem('currentUser', JSON.stringify(user));\r\n      await handleAuthSuccess(user as User);\r\n      showMessage('Account created successfully!', 'success');\r\n      return;\r\n    }\r\n    \r\n    const { data, error } = await supabase.auth.signUp({\r\n      email,\r\n      password,\r\n      options: {\r\n        data: { name }\r\n      }\r\n    });\r\n    \r\n    if (error) {\r\n      showMessage(error.message, 'error');\r\n      showAuthSection();\r\n      return;\r\n    }\r\n    \r\n    if (data.user) {\r\n      // Show verification modal instead of proceeding to app\r\n      hideLoading();\r\n      showVerificationModal(email);\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('Signup error:', error);\r\n    showMessage('An error occurred during signup', 'error');\r\n    showAuthSection();\r\n  }\r\n}\r\n\r\n// Show verification modal after signup\r\nfunction showVerificationModal(email: string): void {\r\n  // Set the email in the modal\r\n  const emailSpan = document.getElementById('verificationEmail');\r\n  if (emailSpan) {\r\n    emailSpan.textContent = email;\r\n  }\r\n  \r\n  // Show the modal\r\n  const modal = document.getElementById('verificationModal');\r\n  if (modal) {\r\n    modal.style.display = 'flex';\r\n    modal.classList.add('show');\r\n  }\r\n  \r\n  // Set up button event listeners\r\n  const gotItBtn = document.getElementById('verificationGotIt');\r\n  const goBackBtn = document.getElementById('verificationGoBack');\r\n  \r\n  if (gotItBtn) {\r\n    gotItBtn.onclick = () => {\r\n      // Hide modal and show login tab\r\n      hideVerificationModal();\r\n      showAuthTab('login');\r\n      showMessage('Please check your email to verify your account before logging in.', 'info');\r\n    };\r\n  }\r\n  \r\n  if (goBackBtn) {\r\n    goBackBtn.onclick = () => {\r\n      // Hide modal and stay on signup tab\r\n      hideVerificationModal();\r\n      showAuthTab('signup');\r\n    };\r\n  }\r\n}\r\n\r\n// Hide verification modal\r\nfunction hideVerificationModal(): void {\r\n  const modal = document.getElementById('verificationModal');\r\n  if (modal) {\r\n    modal.classList.remove('show');\r\n    setTimeout(() => {\r\n      modal.style.display = 'none';\r\n    }, 300);\r\n  }\r\n}\r\n\r\n// Handle forgot password\r\nasync function handleForgotPassword(event: Event): Promise<void> {\r\n  event.preventDefault();\r\n  \r\n  const form = event.target as HTMLFormElement;\r\n  const formData = new FormData(form);\r\n  const email = formData.get('email') as string;\r\n  \r\n  if (!email) {\r\n    showMessage('Please enter your email', 'error');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    if (!supabase) {\r\n      showMessage('Password reset functionality requires Supabase connection', 'error');\r\n      return;\r\n    }\r\n    \r\n    const { error } = await supabase.auth.resetPasswordForEmail(email);\r\n    \r\n    if (error) {\r\n      showMessage(error.message, 'error');\r\n      return;\r\n    }\r\n    \r\n    showMessage('Password reset email sent!', 'success');\r\n    showAuthTab('login');\r\n    \r\n  } catch (error) {\r\n    console.error('Password reset error:', error);\r\n    showMessage('An error occurred sending reset email', 'error');\r\n  }\r\n}\r\n\r\n// Handle logout\r\nexport async function handleLogout(): Promise<void> {\r\n  try {\r\n    if (supabase) {\r\n      await supabase.auth.signOut();\r\n    }\r\n    \r\n    // Clear localStorage - all user data\r\n    localStorageWrapper.removeItem('currentUser');\r\n    localStorageWrapper.removeItem('nutrivalor_profile'); // Clear cached profile data\r\n    localStorageWrapper.removeItem('nutrivalor_meals'); // Clear cached meal data\r\n    localStorageWrapper.removeItem('nutrivalor_weeklyPlan'); // Clear meal plan data\r\n    \r\n    // Clear profile form fields for next user\r\n    clearProfileForm();\r\n    \r\n    // Clear any macro calculator saved data for this user\r\n    if (currentUser?.id) {\r\n      localStorageWrapper.removeItem(`macroProfile_${currentUser.id}`);\r\n    }\r\n    \r\n    // Clear in-memory data structures to ensure privacy\r\n    try {\r\n      // Clear food tracker data (foods + shopping list)\r\n      const foodTrackerModule = await import('./food-tracker');\r\n      if ('clearAllData' in foodTrackerModule) {\r\n        await (foodTrackerModule as any).clearAllData();\r\n      }\r\n      \r\n      // Clear food grid display\r\n      const foodGrid = document.getElementById('foodGrid');\r\n      if (foodGrid) {\r\n        foodGrid.innerHTML = '<p class=\"empty-state\">Please log in to view your food data.</p>';\r\n      }\r\n      \r\n      // Clear shopping list display  \r\n      const shoppingListContainer = document.getElementById('shoppingListContainer');\r\n      if (shoppingListContainer) {\r\n        shoppingListContainer.innerHTML = '<p class=\"empty-state\">Please log in to view your shopping list.</p>';\r\n      }\r\n      \r\n      // Clear meal data and meal plan display\r\n      const mealsModule = await import('./meals');\r\n      if ('clearAllMealData' in mealsModule) {\r\n        await (mealsModule as any).clearAllMealData();\r\n      }\r\n      \r\n      // Clear meal grid display\r\n      const mealGrid = document.getElementById('mealGrid');\r\n      if (mealGrid) {\r\n        mealGrid.innerHTML = '<p class=\"empty-state\">Please log in to view your meals.</p>';\r\n      }\r\n      \r\n      // Clear weekly meal plan display\r\n      const weeklyPlanContainer = document.querySelector('.weekly-meal-plan-container');\r\n      if (weeklyPlanContainer) {\r\n        weeklyPlanContainer.innerHTML = '<p class=\"empty-state\">Please log in to view your meal plan.</p>';\r\n      }\r\n      \r\n      console.log('🧹 All user data cleared from memory and display');\r\n      \r\n    } catch (error) {\r\n      console.warn('⚠️ Some data clearing operations failed (this is okay):', error);\r\n    }\r\n    \r\n    currentUser = null;\r\n    showAuthSection();\r\n    \r\n    console.log('🔐 User logged out - all data cleared for next user');\r\n    \r\n  } catch (error) {\r\n    console.error('Logout error:', error);\r\n    showMessage('Error during logout', 'error');\r\n  }\r\n}\r\n\r\n// Clear all profile form fields\r\nfunction clearProfileForm(): void {\r\n  try {\r\n    // Profile form fields\r\n    const profileFields = [\r\n      'profileName',\r\n      'dateOfBirth', \r\n      'profileAge',\r\n      'profileGender',\r\n      'profileHeight',\r\n      'heightUnit',\r\n      'profileIdealWeight',\r\n      'weightUnit',\r\n      'profileCountry'\r\n    ];\r\n    \r\n    profileFields.forEach(fieldId => {\r\n      const field = document.getElementById(fieldId) as HTMLInputElement | HTMLSelectElement;\r\n      if (field) {\r\n        if (field instanceof HTMLSelectElement) {\r\n          field.selectedIndex = 0; // Reset to first option\r\n        } else {\r\n          field.value = ''; // Clear input fields\r\n        }\r\n      }\r\n    });\r\n    \r\n    // Clear avatar display\r\n    const avatarPreview = document.getElementById('avatarPreview') as HTMLImageElement;\r\n    const avatarPlaceholder = document.getElementById('avatarPlaceholder') as HTMLElement;\r\n    const removeAvatarBtn = document.getElementById('removeAvatarBtn') as HTMLButtonElement;\r\n    \r\n    if (avatarPreview) {\r\n      avatarPreview.src = '';\r\n      avatarPreview.style.display = 'none';\r\n    }\r\n    \r\n    if (avatarPlaceholder) {\r\n      avatarPlaceholder.style.display = 'flex';\r\n    }\r\n    \r\n    if (removeAvatarBtn) {\r\n      removeAvatarBtn.style.display = 'none';\r\n    }\r\n    \r\n    // Reset header display\r\n    const userEmailElement = document.getElementById('userEmail');\r\n    const headerAvatar = document.getElementById('headerAvatar') as HTMLImageElement;\r\n    const headerAvatarPlaceholder = document.getElementById('headerAvatarPlaceholder');\r\n    \r\n    if (userEmailElement) {\r\n      userEmailElement.textContent = 'User';\r\n    }\r\n    \r\n    if (headerAvatar) {\r\n      headerAvatar.style.display = 'none';\r\n    }\r\n    \r\n    if (headerAvatarPlaceholder) {\r\n      headerAvatarPlaceholder.style.display = 'flex';\r\n    }\r\n    \r\n    console.log('🧹 Profile form cleared for next user');\r\n    \r\n  } catch (error) {\r\n    console.error('Error clearing profile form:', error);\r\n  }\r\n}\r\n\r\n// Load user-specific data\r\nasync function loadUserData(): Promise<void> {\r\n  try {\r\n    // Removed excessive logging for performance\r\n    \r\n    // Import and initialize food tracker (includes foods + shopping list)\r\n    const { initializeFoodTracker } = await import('./food-tracker');\r\n    await initializeFoodTracker();\r\n          // Removed excessive logging for performance\r\n    \r\n    // Import and initialize meals (includes meal data + meal plan)\r\n    const { initializeMeals } = await import('./meals');\r\n    await initializeMeals();\r\n          // Removed excessive logging for performance\r\n    \r\n          // Removed excessive logging for performance\r\n  } catch (error) {\r\n    console.error('❌ Error loading user data:', error);\r\n  }\r\n}\r\n\r\n// Generate unique ID\r\nfunction generateId(): string {\r\n  return 'id_' + Math.random().toString(36).substr(2, 9) + Date.now().toString(36);\r\n}\r\n\r\n// =====================================================\r\n// ADMIN ROLE CHECKING FUNCTIONS\r\n// =====================================================\r\n\r\n// Check if current user is admin or super admin\r\nexport async function isCurrentUserAdmin(): Promise<boolean> {\r\n      // Removed excessive logging for performance\r\n  \r\n  try {\r\n    const user = await getCurrentUser();\r\n    // Removed excessive logging for performance\r\n    \r\n    if (!user) {\r\n      console.log('🔐 No user found, returning false');\r\n      return false;\r\n    }\r\n    \r\n    // Removed excessive logging for performance\r\n    \r\n    const { data, error } = await supabase\r\n      .from('user_roles')\r\n      .select('role')\r\n      .eq('user_id', user.id)\r\n      .single();\r\n    \r\n    if (error && error.code !== 'PGRST116') { // PGRST116 = no rows returned\r\n      console.error('❌ Error checking admin status:', error);\r\n      return false;\r\n    }\r\n    \r\n    if (error && error.code === 'PGRST116') {\r\n      console.log('🔐 No role record found for user, defaulting to user role');\r\n    }\r\n    \r\n    const role = data?.role || 'user';\r\n    // Removed excessive logging for performance\r\n    \r\n    const isAdmin = role === 'admin' || role === 'super_admin';\r\n    // Removed excessive logging for performance\r\n    \r\n    return isAdmin;\r\n  } catch (error) {\r\n    console.error('❌ Error checking admin status:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// Check if current user is super admin\r\nexport async function isCurrentUserSuperAdmin(): Promise<boolean> {\r\n  try {\r\n    const user = await getCurrentUser();\r\n    if (!user) return false;\r\n    \r\n    const { data, error } = await supabase\r\n      .from('user_roles')\r\n      .select('role')\r\n      .eq('user_id', user.id)\r\n      .single();\r\n    \r\n    if (error && error.code !== 'PGRST116') {\r\n      console.error('Error checking super admin status:', error);\r\n      return false;\r\n    }\r\n    \r\n    const role = data?.role || 'user';\r\n    console.log('🔐 User role:', role);\r\n    return role === 'super_admin';\r\n  } catch (error) {\r\n    console.error('Error checking super admin status:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// Get current user's role\r\nexport async function getCurrentUserRole(): Promise<string> {\r\n  try {\r\n    const user = await getCurrentUser();\r\n    if (!user) return 'guest';\r\n    \r\n    const { data, error } = await supabase\r\n      .from('user_roles')\r\n      .select('role')\r\n      .eq('user_id', user.id)\r\n      .single();\r\n    \r\n    if (error && error.code !== 'PGRST116') {\r\n      console.error('Error getting user role:', error);\r\n      return 'user';\r\n    }\r\n    \r\n    return data?.role || 'user';\r\n  } catch (error) {\r\n    console.error('Error getting user role:', error);\r\n    return 'user';\r\n  }\r\n}\r\n\r\n// Show/hide admin navigation based on user role\r\nexport async function updateAdminNavigation(): Promise<void> {\r\n      // Removed excessive logging for performance\r\n  \r\n  const adminTab = document.getElementById('adminTab');\r\n  if (!adminTab) {\r\n    console.error('❌ Admin tab element not found in DOM');\r\n    return;\r\n  }\r\n  \r\n      // Removed excessive logging for performance\r\n  \r\n  try {\r\n    const isAdmin = await isCurrentUserAdmin();\r\n    // Removed excessive logging for performance\r\n    \r\n    adminTab.style.display = isAdmin ? 'block' : 'none';\r\n    \r\n    // Removed excessive logging for performance\r\n    // Removed excessive logging for performance\r\n  } catch (error) {\r\n    console.error('❌ Error in updateAdminNavigation:', error);\r\n    // Hide admin tab on error\r\n    adminTab.style.display = 'none';\r\n  }\r\n}\r\n\r\n// Debug function - can be called from browser console\r\nexport async function debugAdminStatus(): Promise<void> {\r\n  console.log('🐛 === ADMIN DEBUG START ===');\r\n  \r\n  const user = await getCurrentUser();\r\n  console.log('🐛 Current user:', user);\r\n  \r\n  if (!user) {\r\n    console.log('🐛 No user logged in');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    const role = await getCurrentUserRole();\r\n    console.log('🐛 User role:', role);\r\n    \r\n    const isAdmin = await isCurrentUserAdmin();\r\n    console.log('🐛 Is admin:', isAdmin);\r\n    \r\n    const isSuperAdmin = await isCurrentUserSuperAdmin();\r\n    console.log('🐛 Is super admin:', isSuperAdmin);\r\n    \r\n    const adminTab = document.getElementById('adminTab');\r\n    console.log('🐛 Admin tab element:', adminTab);\r\n    console.log('🐛 Admin tab display:', adminTab?.style.display);\r\n    \r\n    // Force update admin navigation\r\n    await updateAdminNavigation();\r\n    \r\n  } catch (error) {\r\n    console.error('🐛 Debug error:', error);\r\n  }\r\n  \r\n  console.log('🐛 === ADMIN DEBUG END ===');\r\n}\r\n\r\n// Make debug function available globally\r\n(window as any).debugAdminStatus = debugAdminStatus; ","// Database Module for NutriValor\n// This module handles database operations and provides a unified interface\n\nimport { supabase } from './supabase-client';\nimport { getCurrentAuthUser } from './auth';\n\n// Initialize database connection\nexport async function initializeDatabase(): Promise<void> {\n    // Removed excessive logging for performance\n    \n    if (!supabase) {\n        throw new Error('Supabase client not initialized');\n    }\n    \n    // Verify connection by checking if we can access the database\n    try {\n        const { data, error } = await supabase.from('foods').select('count').limit(1);\n        if (error && error.code !== 'PGRST116') { // PGRST116 is \"table not found\" which is expected\n            console.warn('Database tables may not be created yet:', error.message);\n            console.log('Please run the SQL script from database-setup.sql in your Supabase dashboard');\n        } else {\n            // Removed excessive logging for performance\n        }\n    } catch (error) {\n        console.warn('Database verification failed:', error);\n    }\n}\n\n// Food operations\nexport async function saveFoodToDatabase(food: any): Promise<any> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    // Get current user to add attribution\n    const { data: { user }, error: userError } = await supabase.auth.getUser();\n    let createdBy = 'Unknown User';\n    \n    if (!userError && user) {\n        // Try to get user's display name from profile\n        try {\n            const { data: profile } = await supabase\n                .from('user_profiles')\n                .select('name')\n                .eq('user_id', user.id)\n                .single();\n            \n            createdBy = profile?.name || user.email || 'Unknown User';\n        } catch (error) {\n            // Fallback to email if profile doesn't exist\n            createdBy = user.email || 'Unknown User';\n        }\n    }\n    \n    // Add creator attribution to food data\n    const foodWithAttribution = {\n        ...food,\n        created_by: createdBy\n    };\n    \n    const { data, error } = await supabase\n        .from('foods')\n        .insert([foodWithAttribution])\n        .select();\n        \n    if (error) throw error;\n    return data[0];\n}\n\n// Bulk save multiple foods to database (much faster than individual saves)\nexport async function saveAllFoodsToDatabase(foods: any[]): Promise<any[]> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    // Supabase can handle bulk inserts efficiently\n    const { data, error } = await supabase\n        .from('foods')\n        .insert(foods)\n        .select();\n        \n    if (error) throw error;\n    return data || [];\n}\n\nexport async function loadFoodsFromDatabase(): Promise<any[]> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    // Get current user\n    const { data: { user }, error: userError } = await supabase.auth.getUser();\n    if (userError || !user) {\n        console.log('No authenticated user, returning empty food list');\n        return [];\n    }\n    \n    // Get foods for current user and global foods (no user_id restriction for admin-added foods)\n    const { data, error } = await supabase\n        .from('foods')\n        .select('*')\n        .order('name');\n        \n    if (error) throw error;\n    \n    return data || [];\n}\n\nexport async function updateFoodInDatabase(id: string, updates: any): Promise<any> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    const { data, error } = await supabase\n        .from('foods')\n        .update(updates)\n        .eq('id', id)\n        .select();\n        \n    if (error) throw error;\n    return data[0];\n}\n\nexport async function deleteFoodFromDatabase(id: string): Promise<void> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    const { error } = await supabase\n        .from('foods')\n        .delete()\n        .eq('id', id);\n        \n    if (error) throw error;\n}\n\n// Serving Units operations\nexport async function loadServingUnitsForFood(foodId: string): Promise<any[]> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    const { data, error } = await supabase\n        .from('serving_units')\n        .select('*')\n        .eq('food_id', foodId)\n        .order('is_default', { ascending: false })\n        .order('unit_name');\n        \n    if (error) throw error;\n    return data || [];\n}\n\nexport async function saveServingUnitToDatabase(servingUnit: any): Promise<any> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    const { data, error } = await supabase\n        .from('serving_units')\n        .insert([servingUnit])\n        .select();\n        \n    if (error) throw error;\n    return data[0];\n}\n\nexport async function updateServingUnitInDatabase(id: string, updates: any): Promise<any> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    const { data, error } = await supabase\n        .from('serving_units')\n        .update(updates)\n        .eq('id', id)\n        .select();\n        \n    if (error) throw error;\n    return data[0];\n}\n\nexport async function deleteServingUnitFromDatabase(id: string): Promise<void> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    const { error } = await supabase\n        .from('serving_units')\n        .delete()\n        .eq('id', id);\n        \n    if (error) throw error;\n}\n\n// Get default serving unit for a food\nexport async function getDefaultServingUnit(foodId: string): Promise<any | null> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    const { data, error } = await supabase\n        .from('serving_units')\n        .select('*')\n        .eq('food_id', foodId)\n        .eq('is_default', true)\n        .single();\n        \n    if (error && error.code !== 'PGRST116') throw error;\n    return data;\n}\n\n// Calculate macros for a serving of food\nexport function calculateMacrosForServing(food: any, servingUnit: any, quantity: number) {\n    // For EACH units, use direct multiplication (no grams calculation needed)\n    if (servingUnit.unit_name.toUpperCase() === 'EACH') {\n        return {\n            calories: Math.round((food.calories || 0) * quantity * 10) / 10,\n            protein: Math.round(food.protein * quantity * 10) / 10,\n            fat: Math.round(food.fat * quantity * 10) / 10,\n            carbs: Math.round(food.carbs * quantity * 10) / 10,\n            totalGrams: null // Don't track grams for EACH units\n        };\n    }\n\n    // For all other units, calculate based on grams\n    const totalGrams = servingUnit.grams_per_unit * quantity;\n    const factor = totalGrams / 100;\n\n    return {\n        calories: Math.round((food.calories || 0) * factor * 10) / 10,\n        protein: Math.round(food.protein * factor * 10) / 10,\n        fat: Math.round(food.fat * factor * 10) / 10,\n        carbs: Math.round(food.carbs * factor * 10) / 10,\n        totalGrams: Math.round(totalGrams * 10) / 10\n    };\n}\n\n// Clear all foods for the current user\nexport async function clearAllFoodsForUser(): Promise<void> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    // Get current user\n    const { data: { user }, error: userError } = await supabase.auth.getUser();\n    if (userError || !user) {\n        throw new Error('User must be authenticated to clear foods');\n    }\n    \n    // Delete all foods for this specific user\n    const { error } = await supabase\n        .from('foods')\n        .delete()\n        .eq('user_id', user.id);\n        \n    if (error) throw error;\n    console.log('✅ Cleared all existing foods for user:', user.id);\n}\n\n// Meal operations\nexport async function saveMealToDatabase(meal: any): Promise<any> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    const { data, error } = await supabase\n        .from('meals')\n        .insert([meal])\n        .select();\n        \n    if (error) throw error;\n    return data[0];\n}\n\nexport async function loadMealsFromDatabase(): Promise<any[]> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    const { data, error } = await supabase\n        .from('meals')\n        .select('*')\n        .order('name');\n        \n    if (error) throw error;\n    return data || [];\n}\n\nexport async function updateMealInDatabase(id: string, updates: any): Promise<any> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    const { data, error } = await supabase\n        .from('meals')\n        .update(updates)\n        .eq('id', id)\n        .select();\n        \n    if (error) throw error;\n    return data[0];\n}\n\nexport async function deleteMealFromDatabase(id: string): Promise<void> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    const { error } = await supabase\n        .from('meals')\n        .delete()\n        .eq('id', id);\n        \n    if (error) throw error;\n}\n\n// Shopping list operations\nexport async function addToShoppingList(foodId: string, quantity: number = 1, unit: string = 'EACH'): Promise<any> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    // Get current user\n    const { data: { user }, error: userError } = await supabase.auth.getUser();\n    if (userError || !user) throw new Error('No authenticated user');\n    \n    // Add to shopping list with minimal fields first\n    const shoppingItem = {\n        food_id: foodId,\n        user_id: user.id,\n        quantity: quantity,\n        unit: unit\n    };\n    \n    const { data, error } = await supabase\n        .from('shopping_list')\n        .insert([shoppingItem])\n        .select();\n        \n    if (error) throw error;\n    return data[0];\n}\n\nexport async function loadShoppingListFromDatabase(): Promise<any[]> {\n    const user = await getCurrentAuthUser();\n    if (!user) return null;\n\n    const { data, error } = await supabase\n        .from('shopping_list')\n        .select(`\n            *,\n            food:food_id (\n                name,\n                brand,\n                category,\n                carbs,\n                fat,\n                protein\n            )\n        `)\n        .eq('user_id', user.id);\n\n    if (error) {\n        console.error('Error loading shopping list:', error.message);\n        return null;\n    }\n\n    const transformedData = data.map(item => ({\n        ...item,\n        checked: item.checked || false\n    }));\n\n    return transformedData;\n}\n\nexport async function removeFromShoppingList(id: string): Promise<void> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    // Get current user\n    const { data: { user }, error: userError } = await supabase.auth.getUser();\n    if (userError || !user) {\n        throw new Error('User must be authenticated to remove from shopping list');\n    }\n    \n    const { error } = await supabase\n        .from('shopping_list')\n        .delete()\n        .eq('id', id)\n        .eq('user_id', user.id);\n        \n    if (error) throw error;\n}\n\nexport async function updateShoppingListQuantity(id: string, quantity: number): Promise<any> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    // Get current user\n    const { data: { user }, error: userError } = await supabase.auth.getUser();\n    if (userError || !user) {\n        throw new Error('User must be authenticated to update shopping list');\n    }\n    \n    const { data, error } = await supabase\n        .from('shopping_list')\n        .update({ quantity })\n        .eq('id', id)\n        .eq('user_id', user.id)\n        .select();\n        \n    if (error) throw error;\n    return data[0];\n}\n\nexport async function clearShoppingListFromDatabase(): Promise<void> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    // Get current user\n    const { data: { user }, error: userError } = await supabase.auth.getUser();\n    if (userError || !user) {\n        throw new Error('User must be authenticated to clear shopping list');\n    }\n    \n    const { error } = await supabase\n        .from('shopping_list')\n        .delete()\n        .eq('user_id', user.id);\n        \n    if (error) throw error;\n    console.log('✅ Cleared shopping list for user:', user.id);\n}\n\n// Profile operations\nexport async function saveProfileToDatabase(profileData: any): Promise<any> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    // Get current user\n    const { data: { user }, error: userError } = await supabase.auth.getUser();\n    if (userError || !user) {\n        throw new Error('User must be authenticated to save profile');\n    }\n    \n    const profileRecord = {\n        user_id: user.id,\n        name: profileData.name,\n        date_of_birth: profileData.dateOfBirth,\n        age: profileData.age ? parseInt(profileData.age) : null,\n        gender: profileData.gender,\n        height: profileData.height ? parseFloat(profileData.height) : null,\n        height_unit: profileData.heightUnit || 'cm',\n        ideal_weight: profileData.idealWeight ? parseFloat(profileData.idealWeight) : null,\n        weight_unit: profileData.weightUnit || 'kg',\n        country: profileData.country,\n        avatar_url: profileData.avatar,\n        updated_at: new Date().toISOString()\n    };\n    \n    // Check if profile already exists\n    const { data: existingProfile, error: checkError } = await supabase\n        .from('user_profiles')\n        .select('id')\n        .eq('user_id', user.id)\n        .single();\n    \n    if (checkError && checkError.code !== 'PGRST116') {\n        throw checkError;\n    }\n    \n    if (existingProfile) {\n        // Update existing profile\n        const { data, error } = await supabase\n            .from('user_profiles')\n            .update(profileRecord)\n            .eq('user_id', user.id)\n            .select();\n        \n        if (error) throw error;\n        return data[0];\n    } else {\n        // Insert new profile\n        const { data, error } = await supabase\n            .from('user_profiles')\n            .insert([profileRecord])\n            .select();\n        \n        if (error) throw error;\n        return data[0];\n    }\n}\n\nexport async function loadProfileFromDatabase(): Promise<any | null> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    // Get current user\n    const { data: { user }, error: userError } = await supabase.auth.getUser();\n    if (userError || !user) {\n        console.log('No authenticated user, returning null profile');\n        return null;\n    }\n    \n    const { data, error } = await supabase\n        .from('user_profiles')\n        .select('*')\n        .eq('user_id', user.id)\n        .single();\n    \n    if (error) {\n        if (error.code === 'PGRST116') {\n            // No profile found - this is normal for new users\n            return null;\n        }\n        throw error;\n    }\n    \n    return data;\n}\n\nexport async function deleteProfileFromDatabase(): Promise<void> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    // Get current user\n    const { data: { user }, error: userError } = await supabase.auth.getUser();\n    if (userError || !user) {\n        throw new Error('User must be authenticated to delete profile');\n    }\n    \n    const { error } = await supabase\n        .from('user_profiles')\n        .delete()\n        .eq('user_id', user.id);\n    \n    if (error) throw error;\n    console.log('✅ Deleted profile for user:', user.id);\n}\n\n// Weight tracking operations\nexport async function saveWeightEntryToDatabase(weight: number, entryDate: string, notes?: string): Promise<any> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    // Get current user\n    const { data: { user }, error: userError } = await supabase.auth.getUser();\n    if (userError || !user) {\n        throw new Error('User must be authenticated to save weight entry');\n    }\n    \n    const weightEntry = {\n        user_id: user.id,\n        weight: weight,\n        entry_date: entryDate,\n        notes: notes || null\n    };\n    \n    const { data, error } = await supabase\n        .from('weight_entries')\n        .insert([weightEntry])\n        .select();\n    \n    if (error) throw error;\n    return data[0];\n}\n\nexport async function loadWeightEntriesFromDatabase(): Promise<any[]> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    // Get current user\n    const { data: { user }, error: userError } = await supabase.auth.getUser();\n    if (userError || !user) {\n        console.log('No authenticated user, returning empty weight entries');\n        return [];\n    }\n    \n    const { data, error } = await supabase\n        .from('weight_entries')\n        .select('*')\n        .eq('user_id', user.id)\n        .order('entry_date', { ascending: true });\n    \n    if (error) throw error;\n    return data || [];\n}\n\nexport async function deleteWeightEntryFromDatabase(entryId: string): Promise<void> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    const { error } = await supabase\n        .from('weight_entries')\n        .delete()\n        .eq('id', entryId);\n    \n    if (error) throw error;\n}\n\nexport async function clearAllWeightEntriesFromDatabase(): Promise<void> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    // Get current user\n    const { data: { user }, error: userError } = await supabase.auth.getUser();\n    if (userError || !user) {\n        throw new Error('User must be authenticated to clear weight entries');\n    }\n    \n    const { error } = await supabase\n        .from('weight_entries')\n        .delete()\n        .eq('user_id', user.id);\n    \n    if (error) throw error;\n    console.log('✅ Cleared all weight entries for user:', user.id);\n}\n\n// Calculate total macros for a meal based on its ingredients\nexport async function calculateMealTotals(\n    ingredients: Array<{\n        food_id: string;\n        quantity: number;\n        serving_unit_id?: string;\n    }>\n): Promise<{\n    totalCalories: number;\n    totalProtein: number;\n    totalFat: number;\n    totalCarbs: number;\n    totalGrams: number;\n    perFoodBreakdown: Array<{\n        food_id: string;\n        name: string;\n        calories: number;\n        protein: number;\n        fat: number;\n        carbs: number;\n        grams: number;\n    }>;\n}> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    const totals = {\n        totalCalories: 0,\n        totalProtein: 0,\n        totalFat: 0,\n        totalCarbs: 0,\n        totalGrams: 0,\n        perFoodBreakdown: [] as any[]\n    };\n    \n    // Process each ingredient\n    for (const ingredient of ingredients) {\n        // Get food data\n        const { data: food } = await supabase\n            .from('foods')\n            .select('*')\n            .eq('id', ingredient.food_id)\n            .single();\n            \n        if (!food) continue;\n        \n        // Get serving unit (default or specified)\n        let servingUnit;\n        if (ingredient.serving_unit_id) {\n            const { data } = await supabase\n                .from('serving_units')\n                .select('*')\n                .eq('id', ingredient.serving_unit_id)\n                .single();\n            servingUnit = data;\n        } else {\n            servingUnit = await getDefaultServingUnit(ingredient.food_id);\n        }\n        \n        // If no serving unit found, assume grams (1g per unit)\n        if (!servingUnit) {\n            servingUnit = { unit_name: 'g', grams_per_unit: 1 };\n        }\n        \n        // Calculate macros for this ingredient\n        const macros = calculateMacrosForServing(food, servingUnit, ingredient.quantity);\n        \n        // Add to totals\n        totals.totalCalories += macros.calories;\n        totals.totalProtein += macros.protein;\n        totals.totalFat += macros.fat;\n        totals.totalCarbs += macros.carbs;\n        totals.totalGrams += macros.totalGrams;\n        \n        // Add to per-food breakdown\n        totals.perFoodBreakdown.push({\n            food_id: ingredient.food_id,\n            name: food.name,\n            calories: macros.calories,\n            protein: macros.protein,\n            fat: macros.fat,\n            carbs: macros.carbs,\n            grams: macros.totalGrams\n        });\n    }\n    \n    // Round all numbers to 2 decimal places\n    totals.totalCalories = Math.round(totals.totalCalories * 100) / 100;\n    totals.totalProtein = Math.round(totals.totalProtein * 100) / 100;\n    totals.totalFat = Math.round(totals.totalFat * 100) / 100;\n    totals.totalCarbs = Math.round(totals.totalCarbs * 100) / 100;\n    totals.totalGrams = Math.round(totals.totalGrams * 100) / 100;\n    \n    return totals;\n}\n\n// Add non-food item to SUNDRIES section of shopping list\nexport async function addToSundries(ingredient: any, quantity: number = 1): Promise<any> {\n    if (!supabase) throw new Error('Supabase not initialized');\n    \n    // Get current user\n    const { data: { user }, error: userError } = await supabase.auth.getUser();\n    if (userError || !user) throw new Error('No authenticated user');\n    \n    // Add to shopping list with SUNDRIES category\n    const shoppingItem = {\n        name: ingredient.name,\n        user_id: user.id,\n        quantity: quantity,\n        unit: 'EACH',\n        category: 'SUNDRIES'\n    };\n    \n    const { data, error } = await supabase\n        .from('shopping_list')\n        .insert([shoppingItem])\n        .select();\n        \n    if (error) throw error;\n    return data[0];\n}\n","import { supabase } from './supabase-client';\nimport { \n  saveFoodToDatabase, \n  saveAllFoodsToDatabase,\n  loadFoodsFromDatabase, \n  updateFoodInDatabase, \n  deleteFoodFromDatabase,\n  addToShoppingList as addToShoppingListDB,\n  loadShoppingListFromDatabase,\n  clearAllFoodsForUser,\n  clearShoppingListFromDatabase,\n  loadServingUnitsForFood,\n  getDefaultServingUnit,\n  calculateMacrosForServing\n} from './database';\nimport { getCurrentAuthUser } from './auth';\n\n// Food Tracker Module\nexport async function initializeFoodTracker(): Promise<void> {\n  // Removed excessive logging for performance\n  setupFoodTrackerEventListeners();\n  await loadAndDisplayFoods();\n  await loadShoppingListData();\n  displayLastUploadDate();\n}\n\nfunction setupFoodTrackerEventListeners(): void {\n  // Add event listeners for food tracker functionality\n  const foodFileInput = document.getElementById('foodFileInput') as HTMLInputElement;\n  if (foodFileInput) {\n    foodFileInput.addEventListener('change', handleFoodFileUpload);\n    // Removed excessive logging for performance\n  } else {\n    console.warn('❌ Food file input not found');\n  }\n\n  // Add other event listeners as needed\n  setupCategoryFilters();\n  setupSearchFunctionality();\n}\n\nfunction setupCategoryFilters(): void {\n  // Category filtering will be set up after foods are loaded\n  // Removed excessive logging for performance\n}\n\nfunction setupSearchFunctionality(): void {\n  // Implementation for search functionality will be added\n  // Removed excessive logging for performance\n}\n\n// Store all foods for filtering and shopping list\nexport let allFoods: any[] = [];\nlet shoppingList: any[] = [];\n\n// Load shopping list data from database\nasync function loadShoppingListData(): Promise<void> {\n  try {\n    // Removed excessive logging for performance\n    const dbShoppingList = await loadShoppingListFromDatabase();\n    shoppingList = dbShoppingList || [];\n    // Removed excessive logging for performance\n    updateShoppingListDisplay();\n  } catch (error) {\n    console.error('❌ Error loading shopping list:', error);\n    shoppingList = []; // Initialize as empty array on error\n  }\n}\n\nexport async function loadAndDisplayFoods(): Promise<void> {\n  try {\n          // Removed excessive logging for performance\n      const foods = await loadFoodsFromDatabase();\n    \n    // Store all foods for filtering\n    allFoods = foods;\n    \n    // Update category filters\n    updateCategoryFilters(foods);\n    \n    // Display all foods initially (since ALL button is active by default)\n    displayFoods(foods);\n  } catch (error) {\n    console.error('❌ Error loading foods:', error);\n    showMessage('Error loading foods: ' + (error as Error).message, 'error');\n  }\n}\n\nfunction updateCategoryFilters(foods: any[]): void {\n  const categoryFiltersContainer = document.querySelector('.category-filters');\n  if (!categoryFiltersContainer) return;\n\n  // Extract unique categories from foods (excluding 'General')\n  const availableCategories = [...new Set(foods.map(food => food.category).filter(cat => cat && cat !== 'General'))];\n  \n  // Define the specific order requested: ALL VEGETABLES SALAD DAIRY PROTEIN CONDIMENTS DRINKS OTHER\n  const categoryOrder = ['VEGETABLES', 'SALAD', 'DAIRY', 'PROTEIN', 'CONDIMENTS', 'DRINKS', 'OTHER'];\n  \n  // Start with ALL button, then add categories in the specified order that exist in our data\n  const categories = ['all', ...categoryOrder.filter(cat => availableCategories.includes(cat))];\n  \n  // Generate filter buttons (ALL button will be active by default)\n  categoryFiltersContainer.innerHTML = categories.map((category, index) => {\n    const isActive = index === 0 ? 'active' : '';\n    const displayName = category === 'all' ? 'ALL' : category;\n    return `\n      <button class=\"filter-btn ${isActive}\" onclick=\"filterByCategory('${category}')\" data-category=\"${category}\">\n        ${displayName}\n      </button>\n    `;\n  }).join('');\n  \n      // Removed excessive logging for performance\n}\n\nexport function filterByCategory(category: string): void {\n  console.log(`🔍 Filtering by category: ${category}`);\n  \n  // Update active button\n  document.querySelectorAll('.filter-btn').forEach(btn => {\n    btn.classList.remove('active');\n  });\n  \n  const activeBtn = document.querySelector(`[data-category=\"${category}\"]`);\n  if (activeBtn) {\n    activeBtn.classList.add('active');\n  }\n  \n  // Filter foods\n  let filteredFoods = allFoods;\n  if (category !== 'all') {\n    filteredFoods = allFoods.filter(food => \n      food.category && food.category.toLowerCase() === category.toLowerCase()\n    );\n  }\n  \n  console.log(`📊 Filtered to ${filteredFoods.length} foods`);\n  displayFoods(filteredFoods);\n}\n\nexport function displayFoods(foods: any[]): void {\n  const foodGrid = document.getElementById('foodGrid');\n  if (!foodGrid) {\n    console.warn('❌ Food grid element not found');\n    return;\n  }\n\n  if (foods.length === 0) {\n    foodGrid.innerHTML = '<p class=\"empty-state\">No foods found. Upload your food data to get started!</p>';\n    return;\n  }\n\n  // Sort foods alphabetically\n  foods.sort((a, b) => a.name.localeCompare(b.name));\n\n  // Generate HTML for food cards\n  foodGrid.innerHTML = foods.map(food => {\n    // Check if item is in shopping list\n    const isInShoppingList = shoppingList.some(item => \n      item.food_id === food.id\n    );\n    const buttonClass = isInShoppingList ? 'add-btn added' : 'add-btn';\n    const buttonText = isInShoppingList ? 'Remove from List' : 'Add to List';\n    const buttonAction = isInShoppingList ? `handleRemoveFromShoppingList('${food.id}', true)` : `addToShoppingList('${food.id}')`;\n    \n    return `\n      <div class=\"food-card\" data-food-id=\"${food.id}\">\n        <h4>${food.name}</h4>\n        ${food.brand ? `<div class=\"brand-info\">Brand: ${food.brand}</div>` : ''}\n        <div class=\"nutrition-info\">\n          <span>Carbs: ${formatNutrition(food.carbs)}g</span>\n          <span>Fat: ${formatNutrition(food.fat)}g</span>\n          <span>Protein: ${formatNutrition(food.protein)}g</span>\n        </div>\n        ${food.instructions ? `<div class=\"food-instructions\">${food.instructions}</div>` : ''}\n        <div class=\"food-attribution\">\n          Created by: ${food.created_by || 'Unknown'}\n        </div>\n        <div class=\"food-actions\">\n          <div class=\"quantity-unit-group\">\n            <input type=\"number\" \n                   class=\"quantity-input\" \n                   value=\"1\" \n                   min=\"1\" \n                   id=\"qty-${food.id}\"\n                   onchange=\"updateQuantity('${food.id}', this.value)\"\n                   placeholder=\"Qty\">\n          </div>\n          <button class=\"${buttonClass}\" onclick=\"${buttonAction}\">\n            ${buttonText}\n          </button>\n        </div>\n      </div>\n    `;\n  }).join('');\n}\n\nfunction formatNutrition(value: any): string {\n  if (value === null || value === undefined || value === '') return '0';\n  const num = parseFloat(value);\n  return isNaN(num) ? '0' : num.toFixed(1);\n}\n\n// Load serving units for all foods and populate dropdowns\nasync function loadServingUnitsForAllFoods(foods: any[]): Promise<void> {\n  for (const food of foods) {\n    try {\n      // First try to get serving units from the database\n      const { data: servingUnits, error } = await supabase\n        .from('serving_units')\n        .select('*')\n        .eq('food_id', food.id)\n        .order('is_default', { ascending: false });\n\n      if (error) throw error;\n      \n      const selectElement = document.getElementById(`unit-${food.id}`) as HTMLSelectElement;\n      \n      if (selectElement) {\n        // Clear existing options except for the default gram option\n        selectElement.innerHTML = '<option value=\"g\">g</option>';\n        \n        // Add serving unit options if we have any\n        if (servingUnits && servingUnits.length > 0) {\n          servingUnits.forEach(unit => {\n            const option = document.createElement('option');\n            option.value = unit.unit_name;\n            option.textContent = unit.unit_name;\n            option.dataset.gramsPerUnit = unit.grams_per_unit.toString();\n            option.dataset.unitId = unit.id;\n            if (unit.is_default) {\n              option.selected = true;\n            }\n            selectElement.appendChild(option);\n          });\n        } else {\n          // If no serving units found, check if this is a known food with default units\n          const defaultUnits = getDefaultUnitsForFood(food.name);\n          if (defaultUnits) {\n            // Add default unit and save it to database\n            const unit = {\n              food_id: food.id,\n              unit_name: defaultUnits.name,\n              grams_per_unit: defaultUnits.grams,\n              is_default: true\n            };\n            \n            try {\n              const { data: savedUnit, error: saveError } = await supabase\n                .from('serving_units')\n                .insert([unit])\n                .select()\n                .single();\n                \n              if (!saveError && savedUnit) {\n                const option = document.createElement('option');\n                option.value = savedUnit.unit_name;\n                option.textContent = savedUnit.unit_name;\n                option.dataset.gramsPerUnit = savedUnit.grams_per_unit.toString();\n                option.dataset.unitId = savedUnit.id;\n                option.selected = true;\n                selectElement.appendChild(option);\n              }\n            } catch (err) {\n              console.error('Error saving default unit:', err);\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error(`Error loading serving units for food ${food.id}:`, error);\n    }\n  }\n}\n\n// Helper function to get default units for known foods\nfunction getDefaultUnitsForFood(foodName: string): { name: string, grams: number } | null {\n  const name = foodName.toLowerCase();\n  const defaultUnits: { [key: string]: { name: string, grams: number } } = {\n    'bacon': { name: 'slice', grams: 28 },\n    'bread': { name: 'slice', grams: 30 },\n    'chicken breast': { name: 'piece', grams: 120 },\n    'egg': { name: 'EACH', grams: 50 },\n    'banana': { name: 'piece', grams: 120 },\n    'apple': { name: 'piece', grams: 180 },\n    'rice': { name: 'cup', grams: 200 },\n    'pasta': { name: 'cup', grams: 140 },\n    'milk': { name: 'cup', grams: 240 },\n    'yogurt': { name: 'cup', grams: 245 },\n    'cheese': { name: 'slice', grams: 30 },\n    'butter': { name: 'tablespoon', grams: 14 },\n    'oil': { name: 'tablespoon', grams: 15 },\n    'sugar': { name: 'teaspoon', grams: 4 },\n    'flour': { name: 'cup', grams: 120 },\n  };\n\n  // Check for exact matches first\n  if (defaultUnits[name]) {\n    return defaultUnits[name];\n  }\n\n  // Check for partial matches\n  for (const [key, value] of Object.entries(defaultUnits)) {\n    if (name.includes(key)) {\n      return value;\n    }\n  }\n\n  return null;\n}\n\n// Add these functions to handle quantity and serving unit changes\nfunction updateQuantity(foodId: string, value: string) {\n  const qty = parseFloat(value);\n  if (isNaN(qty) || qty < 1) return;\n  \n  const unitSelect = document.getElementById(`unit-${foodId}`) as HTMLSelectElement;\n  if (!unitSelect) return;\n  \n  const selectedOption = unitSelect.options[unitSelect.selectedIndex];\n  const gramsPerUnit = selectedOption.dataset.gramsPerUnit ? parseFloat(selectedOption.dataset.gramsPerUnit) : 1;\n  \n  // Update display or calculations as needed\n  console.log(`Updated quantity for food ${foodId}: ${qty} ${unitSelect.value} (${qty * gramsPerUnit}g total)`);\n}\n\nfunction updateServingUnit(foodId: string, unitName: string) {\n  const qtyInput = document.getElementById(`qty-${foodId}`) as HTMLInputElement;\n  const unitSelect = document.getElementById(`unit-${foodId}`) as HTMLSelectElement;\n  if (!qtyInput || !unitSelect) return;\n  \n  const qty = parseFloat(qtyInput.value);\n  const selectedOption = unitSelect.options[unitSelect.selectedIndex];\n  const gramsPerUnit = selectedOption.dataset.gramsPerUnit ? parseFloat(selectedOption.dataset.gramsPerUnit) : 1;\n  \n  // Update display or calculations as needed\n  console.log(`Updated unit for food ${foodId}: ${qty} ${unitName} (${qty * gramsPerUnit}g total)`);\n}\n\n// Last update date functions\nfunction updateLastUploadDate(): void {\n  const now = new Date();\n  const dateString = now.toLocaleDateString() + ' ' + now.toLocaleTimeString();\n  localStorage.setItem('lastFoodUploadDate', dateString);\n  displayLastUploadDate();\n}\n\nfunction displayLastUploadDate(): void {\n  const lastUpdate = localStorage.getItem('lastFoodUploadDate');\n  const infoElement = document.getElementById('lastUpdateInfo');\n  const dateElement = document.getElementById('lastUpdateDate');\n  \n  if (lastUpdate && infoElement && dateElement) {\n    dateElement.textContent = lastUpdate;\n    infoElement.style.display = 'block';\n  } else if (infoElement) {\n    infoElement.style.display = 'none';\n  }\n}\n\nexport async function handleFoodFileUpload(event: Event): Promise<void> {\n  const input = event.target as HTMLInputElement;\n  if (!input.files || input.files.length === 0) return;\n\n  const file = input.files[0];\n  \n  try {\n    showMessage('Processing file...', 'success');\n    console.log('📄 Processing file:', file.name);\n    \n    // Basic file validation\n    if (!file.name.endsWith('.xlsx') && !file.name.endsWith('.xls')) {\n      throw new Error('Please upload an Excel file (.xlsx or .xls)');\n    }\n\n    // Get current user\n    if (!supabase) {\n      throw new Error('Supabase client not initialized');\n    }\n    \n    const { data: { user }, error: userError } = await supabase.auth.getUser();\n    if (userError || !user) {\n      throw new Error('You must be logged in to upload food data');\n    }\n\n    console.log('👤 Current user:', user.id);\n\n    // Parse the Excel file\n    const foods = await parseExcelFile(file);\n    \n    if (foods && foods.length > 0) {\n      console.log(`📊 Parsed ${foods.length} foods from Excel`);\n      \n      // Show progress message\n      showMessage('Clearing existing foods and uploading new data...', 'success');\n      \n              // Smart upload strategy: Check if user is admin\n        const { isCurrentUserAdmin } = await import('./auth');\n        const isAdmin = await isCurrentUserAdmin();\n        let shareGlobally = false; // Initialize for scope\n      \n      if (isAdmin) {\n        // Admin upload: Choice between replacing all OR only Excel-sourced foods\n        console.log('🔧 Admin upload detected - choosing upload strategy');\n        \n        const choice = confirm(\n          '🔧 SMART MODE UPLOAD (Recommended) 🔧\\n\\n' +\n          'This will:\\n' +\n          '✅ Replace Excel-uploaded foods with new data\\n' +\n          '✅ PRESERVE your manually added foods\\n' +\n          '✅ Keep admin panel foods safe\\n\\n' +\n          'Click OK to use Smart Mode (recommended)\\n' +\n          'Click Cancel for old \"Replace All\" mode'\n        );\n        \n        if (choice) {\n          // SMART MODE: Only delete foods that were uploaded from Excel (preserve manual foods)\n          console.log('🔧 Smart Mode activated: Preserving manually added admin foods');\n          try {\n            const { error } = await supabase\n              .from('foods')\n              .delete()\n              .eq('created_by', 'Excel Upload')\n              .is('user_id', null); // Only delete global Excel foods\n            \n            if (error) throw error;\n            console.log('🗑️ Cleared only Excel-uploaded foods, manually added admin foods preserved');\n          } catch (error) {\n            console.warn('⚠️ Could not clear Excel foods:', error);\n          }\n        } else {\n          // REPLACE ALL MODE: Traditional behavior\n          const confirmed = confirm(\n            '⚠️ FINAL WARNING ⚠️\\n\\n' +\n            'This will DELETE ALL FOODS including manually added ones.\\n' +\n            'Are you absolutely sure?'\n          );\n          \n          if (!confirmed) {\n            showMessage('Upload cancelled', 'error');\n            input.value = '';\n            return;\n          }\n          \n          try {\n            // Clear ALL foods in database (admin privilege)\n            const { error } = await supabase\n              .from('foods')\n              .delete()\n              .neq('id', '00000000-0000-0000-0000-000000000000'); // Delete all\n            \n            if (error) throw error;\n            console.log('🗑️ Cleared entire food database');\n          } catch (error) {\n            console.warn('⚠️ Could not clear database:', error);\n          }\n        }\n        \n      } else {\n        // Regular user upload: Smart approach to prevent database bloat\n        console.log('👤 User upload detected - using smart sharing approach');\n        \n        shareGlobally = confirm(\n          '🌍 SMART SHARING (Recommended) 🌍\\n\\n' +\n          'To prevent database bloat, we recommend sharing Excel data globally:\\n\\n' +\n          '✅ Adds foods to shared global database\\n' +\n          '✅ Prevents duplicate storage\\n' +\n          '✅ All users benefit from shared data\\n' +\n          '✅ Shows your name as contributor\\n\\n' +\n          'Click OK to share globally (recommended)\\n' +\n          'Click Cancel for personal-only storage'\n        );\n        \n        if (shareGlobally) {\n          // SMART SHARING: Add to global database with user attribution\n          console.log('🌍 Smart sharing mode: Adding to global database');\n          try {\n            // Clear only Excel uploads to prevent endless duplication\n            const { error } = await supabase\n              .from('foods')\n              .delete()\n              .eq('created_by', 'Excel Upload')\n              .is('user_id', null); // Only delete global Excel foods\n            \n            if (error) throw error;\n            console.log('🗑️ Cleared previous Excel uploads to prevent duplication');\n          } catch (error) {\n            console.warn('⚠️ Could not clear previous Excel uploads:', error);\n          }\n        } else {\n          // PERSONAL MODE: Traditional user-specific storage\n          console.log('👤 Personal mode: User-specific storage');\n          try {\n            await clearAllFoodsForUser();\n            console.log('🗑️ Cleared user\\'s existing foods');\n          } catch (error) {\n            console.warn('⚠️ Could not clear existing foods:', error);\n          }\n        }\n      }\n      \n      // Determine metadata based on upload strategy\n      let foodsWithMetadata;\n      \n      if (isAdmin) {\n        // Admin uploads: Always global\n        foodsWithMetadata = foods.map(food => ({\n          ...food,\n          user_id: null,\n          created_by: 'Excel Upload'\n        }));\n      } else {\n        // Regular user uploads: Check sharing choice\n        if (shareGlobally) {\n          // Smart sharing: Global with user attribution\n          foodsWithMetadata = foods.map(food => ({\n            ...food,\n            user_id: null, // Global access\n            created_by: `Excel Upload by ${user.email || 'User'}`\n          }));\n        } else {\n          // Personal storage: User-specific\n          foodsWithMetadata = foods.map(food => ({\n            ...food,\n            user_id: user.id,\n            created_by: user.email\n          }));\n        }\n      }\n      \n      // Save all foods to database in bulk (much faster!)\n      console.log(`💾 Saving ${foodsWithMetadata.length} foods in bulk...`);\n      \n      let savedCount = 0;\n      let errorCount = 0;\n      \n      try {\n        await saveAllFoodsToDatabase(foodsWithMetadata);\n        console.log(`✅ Successfully saved all ${foodsWithMetadata.length} foods`);\n        savedCount = foodsWithMetadata.length;\n        errorCount = 0;\n      } catch (error) {\n        console.error('❌ Failed to save foods in bulk:', error);\n        // Fallback to individual saves if bulk fails\n        console.log('🔄 Falling back to individual saves...');\n        savedCount = 0;\n        errorCount = 0;\n        \n        for (const food of foodsWithMetadata) {\n          try {\n            await saveFoodToDatabase(food);\n            savedCount++;\n          } catch (error) {\n            console.warn('❌ Failed to save food:', food.name, error);\n            errorCount++;\n          }\n        }\n      }\n      \n      console.log(`📊 Save results: ${savedCount} saved, ${errorCount} errors`);\n      \n      // Refresh the display\n      await loadAndDisplayFoods();\n      \n      // Close modal\n      const modal = document.getElementById('uploadModal');\n      if (modal) modal.style.display = 'none';\n      \n      const message = errorCount > 0 \n        ? `Uploaded ${savedCount} foods (${errorCount} failed)` \n        : `Successfully uploaded ${savedCount} food items!`;\n      showMessage(message, 'success');\n      \n      // Update last upload date\n      updateLastUploadDate();\n      \n    } else {\n      showMessage('No valid food data found in the file', 'error');\n    }\n    \n  } catch (error) {\n    console.error('❌ Error processing food file:', error);\n    showMessage(`Error: ${error instanceof Error ? error.message : 'Unknown error'}`, 'error');\n  }\n  \n  // Reset file input\n  input.value = '';\n}\n\n// Parse Excel files using XLSX library\nasync function parseExcelFile(file: File): Promise<any[]> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    \n    reader.onload = function(e) {\n      try {\n        // Load XLSX library if not already loaded\n        if (typeof (window as any).XLSX === 'undefined') {\n          loadXLSXLibrary(() => {\n            parseExcelData(e.target?.result, resolve, reject);\n          });\n        } else {\n          parseExcelData(e.target?.result, resolve, reject);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    };\n    \n    reader.onerror = () => reject(new Error('Failed to read file'));\n    reader.readAsArrayBuffer(file);\n  });\n}\n\nfunction loadXLSXLibrary(callback: () => void): void {\n  const script = document.createElement('script');\n  script.src = 'https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js';\n  script.onload = callback;\n  script.onerror = () => {\n    throw new Error('Failed to load XLSX library');\n  };\n  document.head.appendChild(script);\n}\n\nfunction parseExcelData(data: any, resolve: (foods: any[]) => void, reject: (error: Error) => void): void {\n  try {\n    const XLSX = (window as any).XLSX;\n    const workbook = XLSX.read(data, { type: 'array' });\n    const sheetName = workbook.SheetNames[0];\n    const worksheet = workbook.Sheets[sheetName];\n    \n    // Get the range of the worksheet\n    const range = XLSX.utils.decode_range(worksheet['!ref']);\n    const lines = [];\n    \n    // Read cell by cell to get all data including multiple sections\n    for (let row = range.s.r; row <= range.e.r; row++) {\n      const line = [];\n      for (let col = range.s.c; col <= range.e.c; col++) {\n        const cellAddress = XLSX.utils.encode_cell({ r: row, c: col });\n        const cell = worksheet[cellAddress];\n        const value = cell ? (cell.v || '') : '';\n        line.push(value.toString().trim());\n      }\n      lines.push(line);\n    }\n    \n    console.log('📊 Excel data converted to 2D array, first 3 rows:', lines.slice(0, 3));\n    \n    // Parse food data from the 2D array using the multi-section logic\n    const foods = parseFoodLines(lines);\n    \n    console.log(`📊 Parsed ${foods.length} foods from Excel file`);\n    resolve(foods);\n  } catch (error) {\n    console.error('❌ Error parsing Excel data:', error);\n    reject(new Error('Failed to parse Excel file. Please check the format.'));\n  }\n}\n\nfunction parseFoodLines(lines: any[][]): any[] {\n  const foods: any[] = [];\n  \n  if (lines.length < 3) {\n    console.error(\"Excel has too few rows to parse.\");\n    return [];\n  }\n  \n  const numCols = lines[0].length;\n  \n  // Loop through columns in steps of 6: 5 data cols + 1 blank\n  for (let col = 0; col + 4 < numCols; col += 6) {\n    const sectionHeader = (lines[0][col] || '').toString().trim();\n    if (!sectionHeader) continue;\n    \n    // Check headers for this group (should be: Food Item, Brand, Carb, Fat, Prot)\n    const groupHeaders = [\n      (lines[1][col] || '').toString().trim().toLowerCase(),\n      (lines[1][col + 1] || '').toString().trim().toLowerCase(),\n      (lines[1][col + 2] || '').toString().trim().toLowerCase(),\n      (lines[1][col + 3] || '').toString().trim().toLowerCase(),\n      (lines[1][col + 4] || '').toString().trim().toLowerCase()\n    ];\n    \n    // Validate headers (should be: food item, brand, carb, fat, prot)\n    if (groupHeaders.join(',') !== 'food item,brand,carb,fat,prot') {\n      console.log(`⚠️ Skipping section \"${sectionHeader}\" - headers don't match expected format:`, groupHeaders);\n      continue;\n    }\n    \n    console.log(`📊 Processing section \"${sectionHeader}\" at column ${col}`);\n    \n    // Process data rows (starting from row 2)\n    for (let row = 2; row < lines.length; row++) {\n      const line = lines[row];\n      if (!line || line.length <= col + 4) continue;\n      \n      const foodName = (line[col] || '').toString().trim();\n      if (!foodName) continue;\n      \n      let brand = (line[col + 1] || '').toString().trim();\n      const carbs = parseFloat(line[col + 2]) || 0;\n      const fat = parseFloat(line[col + 3]) || 0;\n      const protein = parseFloat(line[col + 4]) || 0;\n      \n      // Strict brand validation (filter out invalid brand values)\n      if (!brand || \n          brand.length <= 1 || \n          /^\\d+$/.test(brand) || \n          /^\\d+\\.\\d+$/.test(brand) || \n          /^[0-9\\s\\.]+$/.test(brand) ||\n          brand.toLowerCase().includes('carb') ||\n          brand.toLowerCase().includes('fat') ||\n          brand.toLowerCase().includes('prot') ||\n          brand.toLowerCase().includes('protein') ||\n          brand.toLowerCase().includes('brand') ||\n          brand.toLowerCase().includes('item') ||\n          brand.toLowerCase().includes('total') ||\n          brand.toLowerCase().includes('example')) {\n        brand = '';\n      }\n      \n      // Check if this is a valid food row\n      if (foodName && foodName.length > 0 && foodName.length < 100) {\n        const lowerName = foodName.toLowerCase();\n        const invalidKeywords = ['food item', 'foor item', 'brand', 'item', 'carb', 'fat', 'prot', 'total', 'add up values', 'example'];\n        if (invalidKeywords.some(kw => lowerName.includes(kw))) continue;\n        \n        // Check if this food already exists (avoid duplicates)\n        const existingFood = foods.find(f => \n          f.name.toLowerCase() === toTitleCase(foodName).toLowerCase() && \n          f.brand.toLowerCase() === (brand ? toTitleCase(brand) : '').toLowerCase() &&\n          f.category === sectionHeader\n        );\n        \n        if (!existingFood) {\n          foods.push({\n            // Let Supabase auto-generate UUID for id\n            name: toTitleCase(foodName),\n            brand: brand ? toTitleCase(brand) : '',\n            carbs: carbs,\n            fat: fat,\n            instructions: '',  // Initialize empty instructions for Excel imports\n            protein: protein,\n            category: sectionHeader,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n          });\n        }\n      }\n    }\n  }\n  \n  return foods;\n}\n\nfunction toTitleCase(str: string): string {\n  return str.replace(/\\w\\S*/g, (txt) => {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n}\n\nexport async function addFood(foodData: any): Promise<void> {\n  try {\n    // Get current user\n    if (!supabase) {\n      throw new Error('Supabase client not initialized');\n    }\n    \n    const { data: { user }, error: userError } = await supabase.auth.getUser();\n    if (userError || !user) {\n      throw new Error('You must be logged in to add food data');\n    }\n\n    const foodWithUserId = {\n      ...foodData,\n      user_id: user.id,\n      created_by: user.email\n    };\n\n    await saveFoodToDatabase(foodWithUserId);\n    await loadAndDisplayFoods(); // Refresh the display\n    showMessage('Food added successfully', 'success');\n  } catch (error) {\n    console.error('Error adding food:', error);\n    showMessage('Error adding food', 'error');\n  }\n}\n\nexport async function addToShoppingList(foodId: string): Promise<void> {\n    try {\n        const quantityInput = document.getElementById(`qty-${foodId}`) as HTMLInputElement;\n        \n        if (!quantityInput) {\n            throw new Error('Could not find quantity input');\n        }\n        \n        const quantity = parseInt(quantityInput.value) || 1;\n        \n        await addToShoppingListDB(foodId, quantity);\n        \n        // Update UI\n        const addButton = document.querySelector(`[onclick=\"addToShoppingList('${foodId}')\"]`);\n        if (addButton) {\n            addButton.classList.add('added');\n            addButton.textContent = 'Remove from List';\n            addButton.setAttribute('onclick', `handleRemoveFromShoppingList('${foodId}', true)`);\n        }\n        \n        // Refresh shopping list display\n        await loadShoppingListData();\n        \n        showMessage(`Added ${quantity} to shopping list!`, 'success');\n        \n    } catch (error) {\n        console.error('Error adding to shopping list:', error);\n        showMessage('Error adding to shopping list', 'error');\n    }\n}\n\nfunction showMessage(message: string, type: 'success' | 'error' = 'success'): void {\n  // Create or update message element\n  let messageEl = document.getElementById('food-tracker-message');\n  if (!messageEl) {\n    messageEl = document.createElement('div');\n    messageEl.id = 'food-tracker-message';\n    messageEl.className = 'message';\n    const container = document.getElementById('food-tracker') || document.body;\n    container.insertBefore(messageEl, container.firstChild);\n  }\n  \n  messageEl.textContent = message;\n  messageEl.className = `message ${type}`;\n  messageEl.style.display = 'block';\n  \n  // Hide after 3 seconds\n  setTimeout(() => {\n    if (messageEl) messageEl.style.display = 'none';\n  }, 3000);\n}\n\n// Remove from shopping list function\nexport async function removeFromShoppingList(foodId: string, fromFoodCard: boolean = false): Promise<void> {\n  try {\n    // Find the item in the shopping list to get its database ID\n    const itemToRemove = shoppingList.find(item => item.food_id === foodId || item.id === foodId);\n    \n    if (itemToRemove) {\n      // Remove from database using the shopping list item's ID\n      const { removeFromShoppingList: removeFromShoppingListDB } = await import('./database');\n      await removeFromShoppingListDB(itemToRemove.id);\n      \n      // Remove from local array (filter by food_id)\n      shoppingList = shoppingList.filter(item => \n        item.food_id !== foodId\n      );\n      \n      updateShoppingListDisplay();\n      \n      // Always refresh the food display to update button states\n      displayFoods(allFoods.filter(food => {\n        const activeBtn = document.querySelector('.filter-btn.active');\n        const activeCategory = activeBtn?.getAttribute('data-category') || 'all';\n        return activeCategory === 'all' || food.category?.toLowerCase() === activeCategory.toLowerCase();\n      }));\n      \n      // Force update all food card buttons with a small delay\n      setTimeout(() => {\n        const foodCards = document.querySelectorAll('.food-card');\n        foodCards.forEach(card => {\n          const button = card.querySelector('.add-btn');\n          const foodId = card.getAttribute('data-food-id');\n          if (button && foodId) {\n            const isInShoppingList = shoppingList.some(item => item.food_id === foodId || item.id === foodId);\n            button.textContent = isInShoppingList ? 'Remove' : 'Add to List';\n            button.classList.toggle('added', isInShoppingList);\n          }\n        });\n      }, 100);\n      \n\n    }\n  } catch (error) {\n    console.error('Error removing from shopping list:', error);\n    showMessage('Error removing item from shopping list', 'error');\n  }\n}\n\n// Update shopping list display\nexport function updateShoppingListDisplay(): void {\n    const container = document.getElementById('shoppingItems');\n    if (!container) return;\n\n    if (shoppingList.length === 0) {\n        container.innerHTML = '<p class=\"empty-state\">Your shopping list is empty. Add items from the Food Tracker!</p>';\n        return;\n    }\n\n    // Group items by category\n    const groupedItems = shoppingList.reduce((acc: any, item: any) => {\n        const category = item.food?.category || 'Other';\n        if (!acc[category]) acc[category] = [];\n        acc[category].push(item);\n        return acc;\n    }, {});\n\n    // Sort categories and items within categories\n    const sortedCategories = Object.keys(groupedItems).sort();\n    sortedCategories.forEach(category => {\n        groupedItems[category].sort((a: any, b: any) => {\n            const nameA = a?.food?.name || '';\n            const nameB = b?.food?.name || '';\n            return nameA.localeCompare(nameB);\n        });\n    });\n\n    // Generate HTML\n    const html = sortedCategories.map(category => `\n        <div class=\"shopping-category\">\n            <h3>${category}</h3>\n            <div class=\"shopping-items-list\">\n                ${groupedItems[category].map((item: any) => `\n                    <div class=\"shopping-item\" data-id=\"${item.id}\">\n                        <div class=\"item-info\">\n                            <span class=\"item-name\">${item.food?.name || 'Unknown Food'}</span>\n                            ${item.food?.brand ? `<span class=\"item-brand\">(${item.food.brand})</span>` : ''}\n                            <div class=\"macro-info\">\n                                <span>Carbs: ${item.food?.carbs || 0}g</span>\n                                <span>Fat: ${item.food?.fat || 0}g</span>\n                                <span>Protein: ${item.food?.protein || 0}g</span>\n                            </div>\n                        </div>\n                        <div class=\"item-quantity\">\n                            <input type=\"number\" \n                                   value=\"${item.quantity}\" \n                                   min=\"1\" \n                                   onchange=\"updateShoppingItemQuantity('${item.id}', this.value)\">\n                            <button onclick=\"handleRemoveFromShoppingList('${item.id}')\" class=\"remove-btn\">\n                                Remove\n                            </button>\n                        </div>\n                    </div>\n                `).join('')}\n            </div>\n        </div>\n    `).join('');\n\n    container.innerHTML = html;\n\n    // Update totals\n    updateShoppingListTotals();\n}\n\nfunction updateShoppingListTotals(): void {\n    const totalsContainer = document.getElementById('shoppingTotals');\n    if (!totalsContainer) return;\n\n    // Calculate totals\n    const totals = shoppingList.reduce((acc: any, item: any) => {\n        const quantity = item.quantity || 0;\n        const gramsPerUnit = item.grams_per_unit || 1;\n        const totalGrams = quantity * gramsPerUnit;\n        const multiplier = totalGrams / 100; // Convert to per 100g basis\n\n        acc.carbs += (item.carbs || 0) * multiplier;\n        acc.fat += (item.fat || 0) * multiplier;\n        acc.protein += (item.protein || 0) * multiplier;\n        return acc;\n    }, { carbs: 0, fat: 0, protein: 0 });\n\n    // Format totals to 1 decimal place\n    const formattedTotals = {\n        carbs: totals.carbs.toFixed(1),\n        fat: totals.fat.toFixed(1),\n        protein: totals.protein.toFixed(1)\n    };\n\n    totalsContainer.innerHTML = `\n        <div class=\"totals-header\">Shopping List Totals</div>\n        <div class=\"macro-totals\">\n            <div class=\"macro-total\">\n                <span class=\"macro-label\">Carbs:</span>\n                <span class=\"macro-value\">${formattedTotals.carbs}g</span>\n            </div>\n            <div class=\"macro-total\">\n                <span class=\"macro-label\">Fat:</span>\n                <span class=\"macro-value\">${formattedTotals.fat}g</span>\n            </div>\n            <div class=\"macro-total\">\n                <span class=\"macro-label\">Protein:</span>\n                <span class=\"macro-value\">${formattedTotals.protein}g</span>\n            </div>\n        </div>\n    `;\n\n    totalsContainer.style.display = 'block';\n}\n\n// Force refresh shopping list data (clears orphaned data)\nasync function forceRefreshShoppingList(): Promise<void> {\n  try {\n    console.log('🔧 Force refreshing shopping list to clear orphaned data...');\n    \n    // Clear database shopping list for current user\n    await clearShoppingListFromDatabase();\n    \n    // Clear local array\n    shoppingList = [];\n    \n    // Reload fresh data\n    await loadShoppingListData();\n    \n    console.log('✅ Shopping list force refresh completed');\n  } catch (error) {\n    console.error('❌ Error during force refresh:', error);\n  }\n}\n\n// Clear shopping list function\nexport async function clearShoppingList(): Promise<void> {\n  try {\n    console.log('🧹 FOOD-TRACKER: Starting shopping list clear...');\n    \n    // Clear from database first\n    await clearShoppingListFromDatabase();\n    console.log('✅ Database cleared');\n    \n    // Clear from local array\n    shoppingList = [];\n    console.log('✅ Local food-tracker array cleared');\n    \n    // Also try to clear the shopping-list.ts system (skip database since we already cleared it)\n    try {\n      if (typeof (window as any).clearAllShoppingItems === 'function') {\n        await (window as any).clearAllShoppingItems(true); // true = skip database clear\n        console.log('✅ shopping-list.ts system also cleared');\n      }\n    } catch (error) {\n      console.warn('⚠️ Could not clear shopping-list.ts system:', error);\n    }\n    \n    updateShoppingListDisplay();\n    \n    // Refresh the food display to update all button states\n    displayFoods(allFoods.filter(food => {\n      const activeBtn = document.querySelector('.filter-btn.active');\n      const activeCategory = activeBtn?.getAttribute('data-category') || 'all';\n      return activeCategory === 'all' || food.category?.toLowerCase() === activeCategory.toLowerCase();\n    }));\n    \n    console.log('🎉 Shopping list fully cleared!');\n    showMessage('Shopping list cleared! 🧹', 'success');\n  } catch (error) {\n    console.error('❌ Error clearing shopping list:', error);\n    showMessage('Error clearing shopping list', 'error');\n  }\n}\n\n// Reload shopping list from database and update display\nexport async function reloadShoppingListFromDatabase(): Promise<void> {\n  console.log('🔄 Reloading shopping list from database...');\n  await loadShoppingListData();\n  console.log('✅ Shopping list reloaded successfully');\n}\n\n// Global declarations for TypeScript\ndeclare global {\n  interface Window {\n    addToShoppingList: (foodId: string) => Promise<void>;\n    removeFromShoppingList: (foodId: string, fromFoodCard?: boolean) => Promise<void>;\n    handleRemoveFromShoppingList: (foodId: string, fromFoodCard?: boolean) => void;\n    filterByCategory: (category: string) => void;\n    clearShoppingList: () => Promise<void>;\n    handleClearShoppingList: () => void;\n    updateShoppingListDisplay: () => void;\n    reloadShoppingListFromDatabase: () => Promise<void>;\n    printShoppingList: () => void;\n    handleClearFoodTracker: () => void;\n    reloadFoodTracker: () => Promise<void>;\n    loadAndDisplayFoods: () => Promise<void>;\n    editFood: (foodId: string) => void;\n    updateQuantity: (foodId: string, value: string) => void;\n    updateServingUnit: (foodId: string, unitName: string) => void;\n  }\n}\n\n// Make functions globally available\nwindow.addToShoppingList = addToShoppingList;\nwindow.removeFromShoppingList = removeFromShoppingList;\nwindow.handleRemoveFromShoppingList = handleRemoveFromShoppingList;\nwindow.filterByCategory = filterByCategory;\nwindow.clearShoppingList = clearShoppingList;\nwindow.handleClearShoppingList = handleClearShoppingList;\nwindow.updateShoppingListDisplay = updateShoppingListDisplay;\nwindow.reloadShoppingListFromDatabase = reloadShoppingListFromDatabase;\nwindow.printShoppingList = printShoppingList;\nwindow.loadAndDisplayFoods = loadAndDisplayFoods;\nwindow.reloadFoodTracker = loadAndDisplayFoods; // Alias for reloadFoodTracker\nwindow.editFood = editFood;\nwindow.updateQuantity = updateQuantity;\nwindow.updateServingUnit = updateServingUnit;\n\n// Debug function for console use\n(window as any).debugShoppingList = function() {\n  console.log('🔧 DEBUG: Shopping List State');\n  console.log('📊 FOOD-TRACKER array length:', shoppingList.length);\n  console.log('📋 FOOD-TRACKER array contents:', shoppingList);\n  \n  // Also check shopping-list.ts system\n  if (typeof (window as any).getCurrentShoppingList === 'function') {\n    const currentList = (window as any).getCurrentShoppingList();\n    console.log('📊 SHOPPING-LIST array length:', currentList.length);\n    console.log('📋 SHOPPING-LIST array contents:', currentList);\n  }\n  \n  updateShoppingListDisplay();\n};\n\n(window as any).forceFixShoppingList = function() {\n  console.log('🔧 FORCE FIX: Clearing shopping list completely');\n  forceRefreshShoppingList().then(() => {\n    console.log('✅ Shopping list force fix completed');\n  }).catch(error => {\n    console.error('❌ Error during force fix:', error);\n  });\n};\n\n// Wrapper function for clear shopping list - ensure both systems are cleared\nfunction handleClearShoppingList(): void {\n  console.log('🗑️ FOOD-TRACKER: Clear shopping list requested...');\n  \n  // Check if we have items to clear\n  if (!shoppingList || shoppingList.length === 0) {\n    showMessage('Shopping list is already empty!', 'success');\n    return;\n  }\n  \n  const confirmed = confirm(`Are you sure you want to clear all ${shoppingList.length} items from your shopping list? This cannot be undone.`);\n  \n  if (confirmed) {\n    clearShoppingList().catch(error => {\n      console.error('Error clearing shopping list:', error);\n      showMessage('Error clearing shopping list', 'error');\n    });\n  } else {\n    console.log('🚫 Clear shopping list cancelled by user');\n  }\n}\n\n// Wrapper function for remove from shopping list  \nfunction handleRemoveFromShoppingList(foodId: string, fromFoodCard: boolean = false): void {\n  removeFromShoppingList(foodId, fromFoodCard).catch(error => {\n    console.error('Error removing from shopping list:', error);\n    showMessage('Error removing item', 'error');\n  });\n}\n\n// Print shopping list function\nexport function printShoppingList(): void {\n  if (!shoppingList || shoppingList.length === 0) {\n    showMessage('Your shopping list is empty. Add some items first!', 'error');\n    return;\n  }\n\n  // Get current user information\n  const currentUser = getCurrentAuthUser();\n  const userName = currentUser?.user_metadata?.name || currentUser?.email || 'User';\n\n  // Create a print-friendly version of the shopping list\n  const printWindow = window.open('', '_blank');\n  if (!printWindow) {\n    showMessage('Please allow popups to print your shopping list', 'error');\n    return;\n  }\n\n  // Calculate totals\n  let totalCarbs = 0;\n  let totalFat = 0;\n  let totalProtein = 0;\n  let totalItems = 0;\n\n  shoppingList.forEach(item => {\n    totalCarbs += (parseFloat(item.carbs) || 0) * item.quantity;\n    totalFat += (parseFloat(item.fat) || 0) * item.quantity;\n    totalProtein += (parseFloat(item.protein) || 0) * item.quantity;\n    totalItems += item.quantity;\n  });\n\n  // Group items by category\n  const grouped: { [key: string]: any[] } = {};\n  shoppingList.forEach(item => {\n    const category = item.category || 'Other';\n    if (!grouped[category]) grouped[category] = [];\n    grouped[category].push(item);\n  });\n\n  // Generate print HTML\n  const printContent = `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <title>NutriValor - Shopping List</title>\n      <style>\n        body { \n          font-family: Arial, sans-serif; \n          margin: 10px; \n          line-height: 1.2;\n          font-size: 12px;\n        }\n        .header {\n          text-align: center;\n          border-bottom: 1px solid #333;\n          padding-bottom: 8px;\n          margin-bottom: 15px;\n        }\n        .header h1 {\n          font-size: 18px;\n          margin: 0 0 5px 0;\n        }\n        .user-info {\n          font-size: 12px;\n          color: #667eea;\n          font-weight: bold;\n          margin-bottom: 5px;\n        }\n        .header p {\n          font-size: 10px;\n          margin: 0;\n          color: #666;\n        }\n        .content-wrapper {\n          display: grid;\n          grid-template-columns: 1fr 1fr;\n          gap: 15px;\n          column-fill: balance;\n        }\n        .category {\n          margin-bottom: 12px;\n          break-inside: avoid;\n          page-break-inside: avoid;\n        }\n        .category-title {\n          background: #f5f5f5;\n          padding: 4px 8px;\n          font-weight: bold;\n          font-size: 13px;\n          border-left: 3px solid #667eea;\n          margin-bottom: 5px;\n        }\n        .item {\n          padding: 3px 8px;\n          border-bottom: 1px solid #eee;\n          display: flex;\n          justify-content: space-between;\n          align-items: flex-start;\n          font-size: 11px;\n        }\n        .item-checkbox {\n          width: 12px;\n          height: 12px;\n          border: 1px solid #333;\n          margin-right: 8px;\n          margin-top: 2px;\n          flex-shrink: 0;\n        }\n        .item-details {\n          flex: 1;\n          margin-right: 8px;\n        }\n        .item-name {\n          font-weight: bold;\n          font-size: 12px;\n          line-height: 1.2;\n        }\n        .item-brand {\n          color: #666;\n          font-style: italic;\n          font-size: 10px;\n          line-height: 1.1;\n        }\n        .item-nutrition {\n          font-size: 9px;\n          color: #888;\n          line-height: 1.1;\n          margin-top: 2px;\n        }\n        .item-quantity {\n          font-weight: bold;\n          color: #667eea;\n          font-size: 11px;\n          white-space: nowrap;\n        }\n        .totals {\n          margin-top: 15px;\n          border: 1px solid #333;\n          padding: 10px;\n          background: #f9f9f9;\n          break-inside: avoid;\n          page-break-inside: avoid;\n          grid-column: 1 / -1;\n        }\n        .totals-title {\n          font-size: 14px;\n          font-weight: bold;\n          margin-bottom: 8px;\n          text-align: center;\n        }\n        .totals-grid {\n          display: grid;\n          grid-template-columns: repeat(4, 1fr);\n          gap: 8px;\n          text-align: center;\n        }\n        .total-item {\n          padding: 5px;\n          background: white;\n          border-radius: 3px;\n        }\n        .total-label {\n          font-size: 9px;\n          color: #666;\n          display: block;\n        }\n        .total-value {\n          font-size: 12px;\n          font-weight: bold;\n          color: #333;\n        }\n        .footer {\n          margin-top: 15px;\n          text-align: center;\n          font-size: 9px;\n          color: #666;\n          border-top: 1px solid #ccc;\n          padding-top: 5px;\n          grid-column: 1 / -1;\n        }\n        @media screen and (max-width: 600px) {\n          .content-wrapper {\n            grid-template-columns: 1fr;\n          }\n        }\n        @media print {\n          body { margin: 5px; }\n          .category { break-inside: avoid; page-break-inside: avoid; }\n          .item { break-inside: avoid; }\n          .totals { break-inside: avoid; page-break-inside: avoid; }\n        }\n      </style>\n    </head>\n    <body>\n      <div class=\"header\">\n        <h1>NutriValor Shopping List</h1>\n        <div class=\"user-info\">For: ${userName}</div>\n        <p>${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}</p>\n      </div>\n      \n      <div class=\"content-wrapper\">\n        ${Object.keys(grouped).sort().map(category => `\n          <div class=\"category\">\n            <div class=\"category-title\">${category}</div>\n            ${grouped[category].map(item => `\n              <div class=\"item\">\n                <div class=\"item-checkbox\"></div>\n                <div class=\"item-details\">\n                  <div class=\"item-name\">${item.name}</div>\n                  ${item.brand ? `<div class=\"item-brand\">${item.brand}</div>` : ''}\n                  <div class=\"item-nutrition\">\n                    C:${formatNutrition(item.carbs)}g F:${formatNutrition(item.fat)}g P:${formatNutrition(item.protein)}g\n                  </div>\n                </div>\n                <div class=\"item-quantity\">${item.quantity}</div>\n              </div>\n            `).join('')}\n          </div>\n        `).join('')}\n        \n        <div class=\"totals\">\n          <div class=\"totals-title\">Nutrition Totals</div>\n          <div class=\"totals-grid\">\n            <div class=\"total-item\">\n              <span class=\"total-label\">Items</span>\n              <div class=\"total-value\">${totalItems}</div>\n            </div>\n            <div class=\"total-item\">\n              <span class=\"total-label\">Carbs</span>\n              <div class=\"total-value\">${totalCarbs.toFixed(1)}g</div>\n            </div>\n            <div class=\"total-item\">\n              <span class=\"total-label\">Fat</span>\n              <div class=\"total-value\">${totalFat.toFixed(1)}g</div>\n            </div>\n            <div class=\"total-item\">\n              <span class=\"total-label\">Protein</span>\n              <div class=\"total-value\">${totalProtein.toFixed(1)}g</div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"footer\">\n          <p>© NutriValor - Value your Nutrition</p>\n        </div>\n      </div>\n      \n      <script>\n        window.onload = function() {\n          window.print();\n        }\n      </script>\n    </body>\n    </html>\n  `;\n\n  printWindow.document.write(printContent);\n  printWindow.document.close();\n  \n  showMessage('Opening print dialog...', 'success');\n}\n\n// Add editFood function\nexport function editFood(foodId: string): void {\n    const food = allFoods.find(f => f.id === foodId);\n    if (!food) {\n        console.error('Food not found:', foodId);\n        return;\n    }\n\n    // Get form elements\n    const editForm = document.getElementById('editFoodForm') as HTMLFormElement;\n    const editFoodId = document.getElementById('editFoodId') as HTMLInputElement;\n    const editFoodName = document.getElementById('editFoodName') as HTMLInputElement;\n    const editFoodBrand = document.getElementById('editFoodBrand') as HTMLInputElement;\n    const editFoodCarbs = document.getElementById('editFoodCarbs') as HTMLInputElement;\n    const editFoodFat = document.getElementById('editFoodFat') as HTMLInputElement;\n    const editFoodProtein = document.getElementById('editFoodProtein') as HTMLInputElement;\n    const editFoodInstructions = document.getElementById('editFoodInstructions') as HTMLTextAreaElement;\n    const editFoodCategory = document.getElementById('editFoodCategory') as HTMLSelectElement;\n\n    if (!editForm || !editFoodId || !editFoodName || !editFoodBrand || !editFoodCarbs || \n        !editFoodFat || !editFoodProtein || !editFoodInstructions || !editFoodCategory) {\n        console.error('Edit form elements not found');\n        return;\n    }\n\n    // Populate form\n    editFoodId.value = food.id;\n    editFoodName.value = food.name;\n    editFoodBrand.value = food.brand || '';\n    editFoodCarbs.value = food.carbs || '0';\n    editFoodFat.value = food.fat || '0';\n    editFoodProtein.value = food.protein || '0';\n    editFoodInstructions.value = food.instructions || '';\n    editFoodCategory.value = food.category || 'OTHER';\n\n    // Show edit form modal\n    const editModal = document.getElementById('editFoodModal');\n    if (editModal) {\n        editModal.style.display = 'block';\n    }\n}\n\n// Cancel food edit\nexport function cancelFoodEdit(): void {\n    const modal = document.getElementById('editFoodModal');\n    if (modal) {\n        modal.style.display = 'none';\n    }\n}\n\n// Delete food\nexport async function deleteFoodFromEdit(): Promise<void> {\n    const editFoodId = document.getElementById('editFoodId') as HTMLInputElement;\n    if (!editFoodId || !editFoodId.value) {\n        showMessage('No food selected for deletion', 'error');\n        return;\n    }\n\n    const confirmed = confirm('Are you sure you want to delete this food?');\n    if (!confirmed) return;\n\n    try {\n        await deleteFoodFromDatabase(editFoodId.value);\n        showMessage('Food deleted successfully', 'success');\n        cancelFoodEdit();\n        await loadAndDisplayFoods();\n    } catch (error) {\n        console.error('Error deleting food:', error);\n        showMessage('Error deleting food', 'error');\n    }\n}\n\n// Setup form submission handler\ndocument.addEventListener('DOMContentLoaded', () => {\n    const editFoodForm = document.getElementById('editFoodForm') as HTMLFormElement;\n    if (editFoodForm) {\n        console.log('Food edit form found, event handling moved to simple-edit.ts');\n    }\n});","// Weight Tracker Module for NutriValor\nimport { getCurrentAuthUser } from './auth';\nimport { saveWeightEntryToDatabase, loadWeightEntriesFromDatabase, clearAllWeightEntriesFromDatabase } from './database';\n\ninterface WeightEntry {\n  date: string;\n  weight: number;\n  user_id?: string;\n}\n\nlet weights: WeightEntry[] = [];\nlet startingWeight: string = '';\nlet idealWeight: string = '';\nlet targetDate: string = '';\nlet weightChart: any = null;\nlet isClearingData: boolean = false;\n\n// Initialize weight tracker functionality\nexport async function initializeWeightTracker(): Promise<void> {\n  // Removed excessive logging for performance\n  await loadWeightData();\n  setupWeightChart();\n  setupEventListeners();\n  setupFieldListeners();\n  updateChart();\n  updateProgress();\n  setTodayAsDefault();\n  checkForMissingProfileData();\n}\n\n// Setup listeners to check when fields are filled and hide tip if complete\nfunction setupFieldListeners(): void {\n  const idealWeightInput = document.getElementById('idealWeight') as HTMLInputElement;\n\n  const checkFieldsAndHideTip = () => {\n    // Check if ideal weight is now filled\n    if (idealWeightInput?.value) {\n      hidePersistentProfileTip();\n    }\n  };\n\n  // Add listener to ideal weight field\n  if (idealWeightInput) idealWeightInput.addEventListener('input', checkFieldsAndHideTip);\n}\n\n// Check for missing profile data and show persistent tip\nfunction checkForMissingProfileData(): void {\n  setTimeout(() => {\n    const idealWeightInput = document.getElementById('idealWeight') as HTMLInputElement;\n    \n    if (!idealWeightInput?.value) {\n      showPersistentProfileTip('💡 Tip: Fill out your ideal weight in Settings → Profile to auto-populate here');\n    } else {\n      hidePersistentProfileTip();\n    }\n  }, 500);\n}\n\n// Load weight data from Supabase\nasync function loadWeightData(): Promise<void> {\n  // Skip loading if we're currently clearing data\n  if (isClearingData) {\n    return;\n  }\n  \n  try {\n    const weightEntries = await loadWeightEntriesFromDatabase();\n    weights = weightEntries.map(entry => ({\n      date: entry.entry_date,\n      weight: entry.weight,\n      user_id: entry.user_id\n    }));\n  } catch (error) {\n    weights = [];\n  }\n  \n  // Load ideal weight from user profile, fallback to localStorage for other goals\n  const user = getCurrentAuthUser();\n  const userId = user?.id || 'anonymous';\n  \n  try {\n    // Import database functions to load profile\n    const { loadProfileFromDatabase } = await import('./database');\n    const profileData = await loadProfileFromDatabase();\n    \n    if (profileData && profileData.ideal_weight) {\n      // Convert weight to kg if it's in lbs\n      let idealWeightInKg = profileData.ideal_weight;\n      if (profileData.weight_unit === 'lbs') {\n        idealWeightInKg = profileData.ideal_weight * 0.453592; // Convert lbs to kg\n      }\n      idealWeight = idealWeightInKg.toString();\n      \n      // Add visual indicator that ideal weight came from profile\n      setTimeout(() => {\n        const idealWeightInput = document.getElementById('idealWeight') as HTMLInputElement;\n        if (idealWeightInput) {\n          addProfileIndicator(idealWeightInput, `Ideal weight loaded from profile (${profileData.ideal_weight} ${profileData.weight_unit})`);\n        }\n      }, 100); // Small delay to ensure DOM is ready\n    } else {\n      // Fallback to localStorage\n      idealWeight = localStorage.getItem(`idealWeight_${userId}`) || '';\n    }\n  } catch (error) {\n    idealWeight = localStorage.getItem(`idealWeight_${userId}`) || '';\n  }\n  \n  // Other goals still stored locally\n  startingWeight = localStorage.getItem(`startingWeight_${userId}`) || '';\n  targetDate = localStorage.getItem(`targetDate_${userId}`) || '';\n}\n\n// Save goals data to localStorage (weight entries are saved to Supabase)\nfunction saveGoalsData(): void {\n  const user = getCurrentAuthUser();\n  const userId = user?.id || 'anonymous';\n  \n  localStorage.setItem(`startingWeight_${userId}`, startingWeight);\n  localStorage.setItem(`idealWeight_${userId}`, idealWeight);\n  localStorage.setItem(`targetDate_${userId}`, targetDate);\n}\n\n// Set today as default date\nfunction setTodayAsDefault(): void {\n  const today = new Date().toISOString().split('T')[0];\n  const entryDateInput = document.getElementById('entryDate') as HTMLInputElement;\n  if (entryDateInput && !entryDateInput.value) {\n    entryDateInput.value = today;\n  }\n}\n\n// Setup event listeners\nfunction setupEventListeners(): void {\n  const startInput = document.getElementById('startingWeight') as HTMLInputElement;\n  const idealWeightInput = document.getElementById('idealWeight') as HTMLInputElement;\n  const targetDateInput = document.getElementById('targetDate') as HTMLInputElement;\n  \n  if (startInput) {\n    startInput.value = startingWeight;\n    startInput.addEventListener('input', saveGoalAndUpdateWithoutPopulate);\n    startInput.addEventListener('change', saveGoalAndUpdate);\n    \n    // Also listen for blur event as backup for change\n    startInput.addEventListener('blur', () => {\n      saveGoalAndUpdate();\n    });\n  }\n  \n  if (idealWeightInput) {\n    idealWeightInput.value = idealWeight;\n    idealWeightInput.addEventListener('change', saveGoalAndUpdate);\n  }\n  \n  if (targetDateInput) {\n    targetDateInput.value = targetDate;\n    targetDateInput.addEventListener('change', saveGoalAndUpdate);\n  }\n}\n\n// Setup weight chart\nfunction setupWeightChart(): void {\n  const ctx = document.getElementById('weightChart') as HTMLCanvasElement;\n  if (!ctx) return;\n\n  // Load Chart.js if not already loaded\n  if (typeof (window as any).Chart === 'undefined') {\n    const script = document.createElement('script');\n    script.src = 'https://cdn.jsdelivr.net/npm/chart.js';\n    script.onload = () => createWeightChart();\n    document.head.appendChild(script);\n  } else {\n    createWeightChart();\n  }\n}\n\n// Create weight chart\nfunction createWeightChart(): void {\n  const ctx = document.getElementById('weightChart') as HTMLCanvasElement;\n  if (!ctx) return;\n\n  // Destroy existing chart if it exists\n  if (weightChart) {\n    weightChart.destroy();\n    weightChart = null;\n  }\n\n  const chartCtx = ctx.getContext('2d');\n  if (!chartCtx) return;\n\n  weightChart = new (window as any).Chart(chartCtx, {\n    type: 'line',\n    data: {\n      labels: [],\n      datasets: [{\n        label: 'Actual Weight',\n        data: [],\n        borderColor: '#667eea',\n        backgroundColor: 'rgba(102, 126, 234, 0.1)',\n        tension: 0.3,\n        fill: true\n      }, {\n        label: 'Ideal Path',\n        data: [],\n        borderColor: '#10b981',\n        borderDash: [5, 5],\n        tension: 0,\n        fill: false,\n        pointRadius: 0\n      }]\n    },\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        x: { \n          title: { display: true, text: 'Date' }\n        },\n        y: { \n          title: { display: true, text: 'Weight (kg)' }\n        }\n      },\n      plugins: {\n        title: {\n          display: true,\n          text: 'Weight Progress',\n          font: {\n            size: 16,\n            weight: 'bold'\n          }\n        },\n        legend: {\n          position: 'bottom',\n          labels: {\n            padding: 20,\n            font: {\n              size: 12\n            }\n          }\n        }\n      }\n    }\n  });\n}\n\n// Calculate ideal weight path\nfunction calculateIdealPath(labels: string[]): any[] {\n  // Need at least starting weight, ideal weight, and some weight entries\n  if (!startingWeight || !idealWeight || weights.length === 0) {\n    return [];\n  }\n  \n  const firstDateStr = weights[0].date;\n  const startDate = new Date(firstDateStr).getTime();\n  \n  // If no target date, use a reasonable timeline (e.g., 6 months from first entry)\n  let endDate: number;\n  if (targetDate) {\n    endDate = new Date(targetDate).getTime();\n  } else {\n    // Default to 6 months from start date if no target date\n    endDate = startDate + (6 * 30 * 24 * 60 * 60 * 1000); // 6 months in milliseconds\n  }\n  \n  const totalTime = endDate - startDate;\n  if (totalTime <= 0) {\n    return [];\n  }\n  \n  const startWeight = parseFloat(startingWeight);\n  const endWeight = parseFloat(idealWeight);\n  const weightDiff = endWeight - startWeight;\n\n  // Create a combined set of labels to ensure the ideal line extends properly\n  const allLabels = targetDate ? [...new Set([...labels, targetDate])].sort() : labels;\n\n  const idealPath = allLabels.map(label => {\n    const currentDate = new Date(label).getTime();\n    if (currentDate < startDate) return null;\n\n    const timeElapsed = currentDate - startDate;\n    const progress = Math.min(1, timeElapsed / totalTime);\n    const idealWeightForDate = startWeight + (weightDiff * progress);\n    return { x: label, y: parseFloat(idealWeightForDate.toFixed(1)) };\n  }).filter(item => item !== null);\n  \n  return idealPath;\n}\n\n// Update chart with current data\nfunction updateChart(): void {\n  if (!weightChart) {\n    return;\n  }\n  \n  weights.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n  const labels = weights.map(w => w.date);\n\n  // Update actual weight data (dataset 0)\n  const actualWeightData = weights.map(w => ({ x: w.date, y: w.weight }));\n  weightChart.data.datasets[0].data = actualWeightData;\n  \n  // Update ideal path data (dataset 1)\n  const idealPathData = calculateIdealPath(labels);\n  weightChart.data.datasets[1].data = idealPathData;\n  \n  // Set chart labels\n  const allLabels = [...new Set([...labels, targetDate].filter(Boolean))].sort();\n  if (targetDate && startingWeight && idealWeight) {\n    weightChart.data.labels = allLabels;\n  } else {\n    weightChart.data.labels = labels;\n  }\n\n  weightChart.update();\n}\n\n// Update progress text\nfunction updateProgress(): void {\n  const progressText = document.getElementById('progressText');\n  if (!progressText) return;\n  \n  // Clear progress text if no starting weight or no weight entries\n  if (!startingWeight || weights.length === 0) {\n    progressText.textContent = '';\n    return;\n  }\n  \n  // Additional check: ensure we have valid numeric starting weight\n  const startWeight = parseFloat(startingWeight);\n  if (isNaN(startWeight)) {\n    progressText.textContent = '';\n    return;\n  }\n  \n  if (weights.length > 0 && !startingWeight) {\n    progressText.textContent = 'Please click \"Clear All Data\" to reset tracking.';\n    progressText.style.color = '#d97706';\n    return;\n  }\n  \n  const latest = weights[weights.length - 1].weight;\n  const diff = (startWeight - latest).toFixed(1);\n  \n  if (parseFloat(diff) > 0) {\n    progressText.textContent = `Congratulations! You've lost ${diff}kg so far.`;\n    progressText.style.color = '#065f46';\n  } else if (parseFloat(diff) < 0) {\n    progressText.textContent = `You've gained ${Math.abs(parseFloat(diff))}kg. Keep going!`;\n    progressText.style.color = '#991b1b';\n  } else {\n    progressText.textContent = 'You\\'re at your starting weight. Keep going!';\n    progressText.style.color = '#1e293b';\n  }\n}\n\n// Add weight entry\nexport async function addWeightEntry(): Promise<void> {\n  const dateInput = document.getElementById('entryDate') as HTMLInputElement;\n  const weightInput = document.getElementById('entryWeight') as HTMLInputElement;\n  const startInput = document.getElementById('startingWeight') as HTMLInputElement;\n  \n  const date = dateInput?.value;\n  const weight = parseFloat(weightInput?.value || '0');\n  const start = parseFloat(startInput?.value || '0');\n  \n  if (!date || !weight) {\n    showMessage('Please enter a date and weight.');\n    return;\n  }\n  \n  if (!start && !startingWeight) {\n    showMessage('Please enter a starting weight first.');\n    return;\n  }\n  \n  if (start && !startingWeight) {\n    startingWeight = start.toString();\n  }\n  \n  try {\n    // Save to Supabase\n    await saveWeightEntryToDatabase(weight, date);\n    \n    // Update local array for immediate UI update\n    const existingEntryIndex = weights.findIndex(w => w.date === date);\n    if (existingEntryIndex > -1) {\n      weights[existingEntryIndex].weight = weight;\n    } else {\n      weights.push({ date, weight });\n    }\n    \n    saveGoalsData(); // Save goals locally\n    updateChart();\n    updateProgress();\n    \n    // Clear the weight input\n    if (weightInput) weightInput.value = '';\n    \n    showMessage('Weight entry added successfully!');\n  } catch (error) {\n    showMessage('Error saving weight entry. Please try again.');\n  }\n}\n\n// Save goals and update chart/progress (without population logic - for input events)\nasync function saveGoalAndUpdateWithoutPopulate(): Promise<void> {\n  const startInput = document.getElementById('startingWeight') as HTMLInputElement;\n  const idealWeightInput = document.getElementById('idealWeight') as HTMLInputElement;\n  const targetDateInput = document.getElementById('targetDate') as HTMLInputElement;\n  \n  // For input events, we only update ideal weight and target date, NOT starting weight\n  // This prevents the starting weight from being updated on every keystroke\n  const newIdealWeight = idealWeightInput?.value || '';\n  const newTargetDate = targetDateInput?.value || '';\n\n  // Check if ideal weight changed before updating\n  const idealWeightChanged = newIdealWeight && newIdealWeight !== idealWeight;\n  \n  // Update local values (but skip starting weight for input events)\n  idealWeight = newIdealWeight;\n  targetDate = newTargetDate;\n\n  // Save to localStorage for target date only (starting weight saved in change event)\n  const user = getCurrentAuthUser();\n  const userId = user?.id || 'anonymous';\n  localStorage.setItem(`idealWeight_${userId}`, idealWeight);\n  localStorage.setItem(`targetDate_${userId}`, targetDate);\n  \n  // Sync ideal weight to user profile if it changed\n  if (idealWeightChanged) {\n    try {\n      const { loadProfileFromDatabase, saveProfileToDatabase } = await import('./database');\n      const profileData = await loadProfileFromDatabase();\n      \n      if (profileData) {\n        // Update the profile with the new ideal weight\n        const updatedProfileData = {\n          name: profileData.name,\n          dateOfBirth: profileData.date_of_birth,\n          age: profileData.age,\n          gender: profileData.gender,\n          height: profileData.height,\n          heightUnit: profileData.height_unit,\n          idealWeight: newIdealWeight, // Update ideal weight\n          weightUnit: profileData.weight_unit || 'kg',\n          country: profileData.country,\n          avatar: profileData.avatar_url\n        };\n        \n        await saveProfileToDatabase(updatedProfileData);\n      }\n    } catch (error) {\n      // Continue with local storage update even if profile sync fails\n    }\n  }\n\n  updateChart();\n  updateProgress();\n}\n\n// Save goals and update chart/progress (with population logic - for change events)\nasync function saveGoalAndUpdate(): Promise<void> {\n  const startInput = document.getElementById('startingWeight') as HTMLInputElement;\n  const idealWeightInput = document.getElementById('idealWeight') as HTMLInputElement;\n  const targetDateInput = document.getElementById('targetDate') as HTMLInputElement;\n  \n  const newStartingWeight = startInput?.value || '';\n  const newIdealWeight = idealWeightInput?.value || '';\n  const newTargetDate = targetDateInput?.value || '';\n\n  // Check if ideal weight changed before updating\n  const idealWeightChanged = newIdealWeight && newIdealWeight !== idealWeight;\n\n  // Update local values\n  startingWeight = newStartingWeight;\n  idealWeight = newIdealWeight;\n  targetDate = newTargetDate;\n\n  // Save to localStorage for starting weight and target date\n  saveGoalsData();\n  \n  // Simple logic: populate weight field if starting weight exists and weight field is empty\n  const entryWeightInput = document.getElementById('entryWeight') as HTMLInputElement;\n  const today = new Date().toISOString().split('T')[0];\n  const existingTodayEntry = weights.find(w => w.date === today);\n  \n  const shouldPopulateWeight = newStartingWeight && \n    entryWeightInput && \n    !entryWeightInput.value && \n    !existingTodayEntry;\n    \n  if (shouldPopulateWeight) {\n    entryWeightInput.value = newStartingWeight;\n    showMessage(`💡 Your starting weight (${newStartingWeight}kg) has been added to today's weight field. Click \"Add Entry\" to save it.`);\n  }\n  \n  // Sync ideal weight to user profile if it changed\n  if (idealWeightChanged) {\n    try {\n      const { loadProfileFromDatabase, saveProfileToDatabase } = await import('./database');\n      const profileData = await loadProfileFromDatabase();\n      \n      if (profileData) {\n        // Update the profile with the new ideal weight\n        const updatedProfileData = {\n          name: profileData.name,\n          dateOfBirth: profileData.date_of_birth,\n          age: profileData.age,\n          gender: profileData.gender,\n          height: profileData.height,\n          heightUnit: profileData.height_unit,\n          idealWeight: newIdealWeight, // Update ideal weight\n          weightUnit: profileData.weight_unit || 'kg',\n          country: profileData.country,\n          avatar: profileData.avatar_url\n        };\n        \n        await saveProfileToDatabase(updatedProfileData);\n      }\n    } catch (error) {\n      // Continue with local storage update even if profile sync fails\n    }\n  }\n\n  updateChart();\n  updateProgress();\n}\n\n// Populate the Weight (kg) field with starting weight (user can then choose to add it)\nfunction populateWeightFieldWithStartingWeight(startingWeightValue: number): void {\n  if (isNaN(startingWeightValue) || startingWeightValue <= 0) {\n    return;\n  }\n  \n  const today = new Date().toISOString().split('T')[0];\n  \n  // Check if there's already a weight entry for today\n  const existingTodayEntry = weights.find(w => w.date === today);\n  if (existingTodayEntry) {\n    return;\n  }\n  \n  const entryWeightInput = document.getElementById('entryWeight') as HTMLInputElement;\n  \n  if (entryWeightInput) {\n    entryWeightInput.value = startingWeightValue.toString();\n    showMessage(`💡 Your starting weight (${startingWeightValue}kg) has been added to today's weight field. Click \"Add Entry\" to save it.`);\n  }\n}\n\n// Clear all weight data\nexport async function clearWeightData(): Promise<void> {\n  if (!confirm('Are you sure you want to delete all weight data? This cannot be undone.')) {\n    return;\n  }\n  \n  // Set flag to prevent data reloading during clearing\n  isClearingData = true;\n  \n  try {\n    // Delete all weight entries from Supabase\n    await clearAllWeightEntriesFromDatabase();\n    \n    // Verify clearing worked by trying to load again\n    const verifyEntries = await loadWeightEntriesFromDatabase();\n    \n    if (verifyEntries.length > 0) {\n      showMessage('Warning: Not all data was cleared. Please try again.');\n      return; // Don't continue with clearing if database still has data\n    }\n    \n    const user = getCurrentAuthUser();\n    const userId = user?.id || 'anonymous';\n    \n    // Clear ALL goals from localStorage first\n    localStorage.removeItem(`startingWeight_${userId}`);\n    localStorage.removeItem(`idealWeight_${userId}`);\n    localStorage.removeItem(`targetDate_${userId}`);\n\n    // Reset ALL local data first\n    weights = [];\n    startingWeight = '';\n    idealWeight = '';\n    targetDate = '';\n\n    // Clear ALL form inputs first\n    const startInput = document.getElementById('startingWeight') as HTMLInputElement;\n    const idealWeightInput = document.getElementById('idealWeight') as HTMLInputElement;\n    const targetDateInput = document.getElementById('targetDate') as HTMLInputElement;\n    const progressText = document.getElementById('progressText');\n    const entryWeightInput = document.getElementById('entryWeight') as HTMLInputElement;\n    \n    if (startInput) startInput.value = '';\n    if (idealWeightInput) idealWeightInput.value = '';\n    if (targetDateInput) targetDateInput.value = '';\n    if (entryWeightInput) entryWeightInput.value = '';\n    if (progressText) progressText.textContent = '';\n\n    // Check if we should restore ideal weight from profile\n    let shouldRestoreIdealWeight = false;\n    try {\n      const { loadProfileFromDatabase } = await import('./database');\n      const profileData = await loadProfileFromDatabase();\n      if (profileData && profileData.ideal_weight) {\n        shouldRestoreIdealWeight = true;\n      }\n    } catch (error) {\n      // Don't restore ideal weight if no profile found\n    }\n\n    // Clear and update chart AFTER data is reset\n    if (weightChart) {\n      weightChart.data.labels = [];\n      weightChart.data.datasets[0].data = [];\n      weightChart.data.datasets[1].data = [];\n      weightChart.update();\n    }\n    \n    // Hide any persistent tips\n    hidePersistentProfileTip();\n    \n    // Restore ideal weight from profile if it exists\n    if (shouldRestoreIdealWeight) {\n      await loadWeightData();\n      \n      // Update the ideal weight input field with profile value\n      const idealWeightInput = document.getElementById('idealWeight') as HTMLInputElement;\n      if (idealWeightInput && idealWeight) {\n        idealWeightInput.value = idealWeight;\n        addProfileIndicator(idealWeightInput, 'Ideal weight from profile');\n      }\n    }\n    \n    showMessage('All weight data cleared successfully!');\n  } catch (error) {\n    showMessage('Error clearing weight data. Please try again.');\n  } finally {\n    // Reset clearing flag\n    isClearingData = false;\n  }\n}\n\n// Show message helper\nfunction showMessage(message: string, type: 'success' | 'error' | 'info' | 'warning' = 'success'): void {\n  // Create or update message element\n  let messageEl = document.getElementById('weight-message');\n  if (!messageEl) {\n    messageEl = document.createElement('div');\n    messageEl.id = 'weight-message';\n    messageEl.className = 'message';\n    const container = document.getElementById('weight-tracker') || document.body;\n    container.insertBefore(messageEl, container.firstChild);\n  }\n  \n  messageEl.textContent = message;\n  messageEl.className = `message ${type}`;\n  messageEl.style.display = 'block';\n  \n  // Hide after 3 seconds\n  setTimeout(() => {\n    if (messageEl) messageEl.style.display = 'none';\n  }, 3000);\n}\n\n// Show persistent profile tip (orange warning that doesn't auto-hide)\nfunction showPersistentProfileTip(message: string): void {\n  // Create or update persistent tip element\n  let tipEl = document.getElementById('weight-profile-tip');\n  if (!tipEl) {\n    tipEl = document.createElement('div');\n    tipEl.id = 'weight-profile-tip';\n    tipEl.className = 'message warning';\n    const container = document.getElementById('weight-tracker') || document.body;\n    container.insertBefore(tipEl, container.firstChild);\n  }\n  \n  tipEl.textContent = message;\n  tipEl.className = 'message warning';\n  tipEl.style.display = 'block';\n}\n\n// Hide persistent profile tip\nfunction hidePersistentProfileTip(): void {\n  const tipEl = document.getElementById('weight-profile-tip');\n  if (tipEl) {\n    tipEl.style.display = 'none';\n  }\n}\n\n// Add visual indicator that data came from profile\nfunction addProfileIndicator(element: HTMLElement, tooltipText: string): void {\n  // Remove any existing indicator\n  const existingIndicator = element.parentElement?.querySelector('.profile-indicator');\n  if (existingIndicator) {\n    existingIndicator.remove();\n  }\n  \n  // Create indicator element\n  const indicator = document.createElement('span');\n  indicator.className = 'profile-indicator';\n  indicator.innerHTML = '👤';\n  indicator.title = tooltipText;\n  indicator.style.marginLeft = '8px';\n  indicator.style.color = '#10b981';\n  indicator.style.fontSize = '14px';\n  indicator.style.cursor = 'help';\n  indicator.style.filter = 'grayscale(0.3) brightness(1.2)';\n  \n  // Add some styling to the input to show it's from profile\n  element.style.borderLeft = '3px solid #10b981';\n  \n  // Insert indicator after the element\n  if (element.parentElement) {\n    element.parentElement.style.position = 'relative';\n    element.parentElement.appendChild(indicator);\n  }\n}\n\n// Refresh weight tracker data (useful when profile is updated)\nexport async function refreshWeightTracker(): Promise<void> {\n  await loadWeightData();\n  \n  // Recheck if tip should be shown/hidden after refresh\n  setTimeout(() => {\n    if (!idealWeightInput?.value) {\n      showPersistentProfileTip('💡 Tip: Fill out your ideal weight in Settings → Profile to auto-populate here');\n    } else {\n      hidePersistentProfileTip();\n    }\n  }, 100);\n  \n  updateChart();\n  updateProgress();\n}\n\n// Make functions globally available\ndeclare global {\n  interface Window {\n    addWeightEntry: () => void;\n    clearWeightData: () => void;\n  }\n}\n\nwindow.addWeightEntry = addWeightEntry;\nwindow.clearWeightData = clearWeightData; ","// Macro Calculator Module for NutriValor\nimport { getCurrentAuthUser } from './auth';\nimport { loadProfileFromDatabase } from './database';\nimport { supabase } from './supabase-client';\n\ninterface MacroProfile {\n  age: number;\n  gender: string;\n  weight: number;\n  height: number;\n  activity: number;\n  lossRate: number;\n  proteinRatio: number;\n  fatRatio: number;\n}\n\ninterface MacroResults {\n  protein: number;\n  carbs: number;\n  fat: number;\n  calories: number;\n  bmr: number;\n  tdee: number;\n}\n\n// Initialize macro calculator functionality\nexport async function initializeMacroCalculator(): Promise<void> {\n  // Removed excessive logging for performance\n  await loadSavedProfile();\n  setDefaultValues();\n  setupFieldListeners();\n}\n\n// Setup listeners to check when fields are filled and hide tip if complete\nfunction setupFieldListeners(): void {\n  const ageInput = document.getElementById('macro-age') as HTMLInputElement;\n  const genderSelect = document.getElementById('macro-gender') as HTMLSelectElement;\n  const heightInput = document.getElementById('macro-height') as HTMLInputElement;\n\n  const checkFieldsAndHideTip = () => {\n    // Check if all critical fields are now filled\n    if (ageInput?.value && genderSelect?.value && heightInput?.value) {\n      hidePersistentProfileTip();\n    }\n  };\n\n  // Add listeners to all critical fields\n  if (ageInput) ageInput.addEventListener('input', checkFieldsAndHideTip);\n  if (genderSelect) genderSelect.addEventListener('change', checkFieldsAndHideTip);\n  if (heightInput) heightInput.addEventListener('input', checkFieldsAndHideTip);\n}\n\n// Load saved profile from localStorage\nasync function loadSavedProfile(): Promise<void> {\n  try {\n    // First try to load from Supabase profile (height, age, gender)\n    const userProfile = await loadProfileFromDatabase();\n    if (userProfile) {\n      // Removed excessive logging for performance\n      \n      // Pre-populate with profile data\n      const ageInput = document.getElementById('macro-age') as HTMLInputElement;\n      const genderSelect = document.getElementById('macro-gender') as HTMLSelectElement;\n      const heightInput = document.getElementById('macro-height') as HTMLInputElement;\n      \n      if (ageInput && userProfile.age) {\n        ageInput.value = userProfile.age.toString();\n        addProfileIndicator(ageInput, 'Age loaded from profile');\n        // Removed excessive logging for performance\n      }\n      if (genderSelect && userProfile.gender) {\n        genderSelect.value = userProfile.gender;\n        addProfileIndicator(genderSelect, 'Gender loaded from profile');\n        // Removed excessive logging for performance\n      }\n      if (heightInput && userProfile.height) {\n        // Convert height to cm if needed\n        let heightInCm = userProfile.height;\n        if (userProfile.height_unit === 'ft') {\n          heightInCm = userProfile.height * 30.48; // Convert feet to cm\n        }\n        heightInput.value = heightInCm.toString();\n        addProfileIndicator(heightInput, `Height loaded from profile (${userProfile.height} ${userProfile.height_unit})`);\n        // Removed excessive logging for performance\n      }\n    }\n    \n    // Check if critical profile fields are missing and show helpful tip\n    setTimeout(() => {\n      const ageInput = document.getElementById('macro-age') as HTMLInputElement;\n      const genderSelect = document.getElementById('macro-gender') as HTMLSelectElement;\n      const heightInput = document.getElementById('macro-height') as HTMLInputElement;\n      \n      const missingFields = [];\n      if (!ageInput?.value) missingFields.push('Age');\n      if (!genderSelect?.value || genderSelect?.value === '') missingFields.push('Gender');\n      if (!heightInput?.value) missingFields.push('Height');\n      \n      if (missingFields.length > 0) {\n        const missingText = missingFields.join(', ');\n        showPersistentProfileTip(`💡 Tip: Fill out your profile in Settings to auto-populate ${missingText}`);\n      } else {\n        // Hide the tip if all fields are filled\n        hidePersistentProfileTip();\n      }\n    }, 500);\n    \n    // Then load macro-specific settings (weight, activity, etc.)\n    const user = getCurrentAuthUser();\n    const userId = user?.id || 'anonymous';\n    \n    const savedProfile = localStorage.getItem(`macroProfile_${userId}`);\n    if (savedProfile) {\n      try {\n        const profile: MacroProfile = JSON.parse(savedProfile);\n        console.log('📦 Found localStorage macro profile:', profile);\n        \n        // Only populate fields that aren't already set from user profile\n        if (!userProfile) {\n          console.log('⚠️ No Supabase profile, using full localStorage profile');\n          populateForm(profile);\n        } else {\n          console.log('✅ Using Supabase profile + localStorage macro settings');\n          // Populate only macro-specific fields (not personal data like age, height, gender, weight)\n          const weightInput = document.getElementById('macro-weight') as HTMLInputElement;\n          const activitySelect = document.getElementById('macro-activity') as HTMLSelectElement;\n          const lossRateSelect = document.getElementById('macro-lossRate') as HTMLSelectElement;\n          const proteinRatioSelect = document.getElementById('macro-proteinRatio') as HTMLSelectElement;\n          const fatRatioSelect = document.getElementById('macro-fatRatio') as HTMLSelectElement;\n          \n          // Only load non-personal data from localStorage\n          if (activitySelect) activitySelect.value = profile.activity.toString();\n          if (lossRateSelect) lossRateSelect.value = profile.lossRate.toString();\n          if (proteinRatioSelect) proteinRatioSelect.value = profile.proteinRatio.toString();\n          if (fatRatioSelect) fatRatioSelect.value = profile.fatRatio.toString();\n          \n          // Don't load weight from localStorage - let user enter it manually\n          console.log('ℹ️ Skipped loading weight from localStorage - user should enter manually');\n        }\n      } catch (error) {\n        console.error('Error loading saved macro profile:', error);\n      }\n    } else {\n      // Removed excessive logging for performance\n    }\n  } catch (error) {\n    console.error('Error loading profile from database:', error);\n    // Fall back to local macro profile only\n    const user = getCurrentAuthUser();\n    const userId = user?.id || 'anonymous';\n    \n    const savedProfile = localStorage.getItem(`macroProfile_${userId}`);\n    if (savedProfile) {\n      try {\n        const profile: MacroProfile = JSON.parse(savedProfile);\n        populateForm(profile);\n      } catch (error) {\n        console.error('Error loading saved macro profile:', error);\n      }\n    }\n  }\n}\n\n// Set default values only for fields that should have reasonable defaults\nfunction setDefaultValues(): void {\n  // Only set defaults for non-personal data fields\n  // Age, Weight, and Height should come from profile or user input only\n  // Activity level and ratios can have sensible defaults\n  \n  const activitySelect = document.getElementById('macro-activity') as HTMLSelectElement;\n  const lossRateSelect = document.getElementById('macro-lossRate') as HTMLSelectElement;\n  const proteinRatioSelect = document.getElementById('macro-proteinRatio') as HTMLSelectElement;\n  const fatRatioSelect = document.getElementById('macro-fatRatio') as HTMLSelectElement;\n  \n  // Only set defaults if no value is already selected\n  if (activitySelect && !activitySelect.value) activitySelect.value = '1.55'; // Moderately active\n  if (lossRateSelect && !lossRateSelect.value) lossRateSelect.value = '0'; // Maintain weight\n  if (proteinRatioSelect && !proteinRatioSelect.value) proteinRatioSelect.value = '2.2'; // 2.2g per kg\n  if (fatRatioSelect && !fatRatioSelect.value) fatRatioSelect.value = '0.8'; // 0.8g per kg\n}\n\n// Populate form with saved profile data\nfunction populateForm(profile: MacroProfile): void {\n  const ageInput = document.getElementById('macro-age') as HTMLInputElement;\n  const genderSelect = document.getElementById('macro-gender') as HTMLSelectElement;\n  const weightInput = document.getElementById('macro-weight') as HTMLInputElement;\n  const heightInput = document.getElementById('macro-height') as HTMLInputElement;\n  const activitySelect = document.getElementById('macro-activity') as HTMLSelectElement;\n  const lossRateSelect = document.getElementById('macro-lossRate') as HTMLSelectElement;\n  const proteinRatioSelect = document.getElementById('macro-proteinRatio') as HTMLSelectElement;\n  const fatRatioSelect = document.getElementById('macro-fatRatio') as HTMLSelectElement;\n  \n  if (ageInput) ageInput.value = profile.age.toString();\n  if (genderSelect) genderSelect.value = profile.gender;\n  if (weightInput) weightInput.value = profile.weight.toString();\n  if (heightInput) heightInput.value = profile.height.toString();\n  if (activitySelect) activitySelect.value = profile.activity.toString();\n  if (lossRateSelect) lossRateSelect.value = profile.lossRate.toString();\n  if (proteinRatioSelect) proteinRatioSelect.value = profile.proteinRatio.toString();\n  if (fatRatioSelect) fatRatioSelect.value = profile.fatRatio.toString();\n}\n\n// Calculate macros using Mifflin-St Jeor Equation\nexport function calculateMacros(): void {\n  const ageInput = document.getElementById('macro-age') as HTMLInputElement;\n  const genderSelect = document.getElementById('macro-gender') as HTMLSelectElement;\n  const weightInput = document.getElementById('macro-weight') as HTMLInputElement;\n  const heightInput = document.getElementById('macro-height') as HTMLInputElement;\n  const activitySelect = document.getElementById('macro-activity') as HTMLSelectElement;\n  const lossRateSelect = document.getElementById('macro-lossRate') as HTMLSelectElement;\n  const proteinRatioSelect = document.getElementById('macro-proteinRatio') as HTMLSelectElement;\n  const fatRatioSelect = document.getElementById('macro-fatRatio') as HTMLSelectElement;\n  \n  const age = parseFloat(ageInput?.value || '0');\n  const gender = genderSelect?.value || 'male';\n  const weight = parseFloat(weightInput?.value || '0');\n  const height = parseFloat(heightInput?.value || '0');\n  const activity = parseFloat(activitySelect?.value || '1.55');\n  const lossRate = parseFloat(lossRateSelect?.value || '0'); // kcal deficit\n  const proteinRatio = parseFloat(proteinRatioSelect?.value || '2.2');\n  const fatRatio = parseFloat(fatRatioSelect?.value || '0.8');\n  \n  // Validation\n  if (!age || !weight || !height) {\n    showMessage('Please fill in all required fields (Age, Weight, Height)', 'error');\n    return;\n  }\n  \n  if (age < 10 || age > 120) {\n    showMessage('Please enter a valid age between 10 and 120', 'error');\n    return;\n  }\n  \n  if (weight < 20 || weight > 300) {\n    showMessage('Please enter a valid weight between 20 and 300 kg', 'error');\n    return;\n  }\n  \n  if (height < 100 || height > 250) {\n    showMessage('Please enter a valid height between 100 and 250 cm', 'error');\n    return;\n  }\n  \n  // Calculate BMR using Mifflin-St Jeor Equation\n  let bmr: number;\n  if (gender === 'male') {\n    bmr = 10 * weight + 6.25 * height - 5 * age + 5;\n  } else {\n    bmr = 10 * weight + 6.25 * height - 5 * age - 161;\n  }\n  \n  // Calculate TDEE (Total Daily Energy Expenditure)\n  let tdee = bmr * activity;\n  \n  // Adjust for weight loss rate\n  const adjustedCalories = tdee + lossRate; // lossRate is negative for weight loss\n  \n  // Calculate macros\n  let protein = weight * proteinRatio;\n  let fat = weight * fatRatio;\n  let carbs = (adjustedCalories - (protein * 4) - (fat * 9)) / 4;\n  \n  // Ensure no negative values and minimum 10g carbs\n  protein = Math.max(0, Math.round(protein));\n  fat = Math.max(0, Math.round(fat));\n  carbs = Math.max(10, Math.round(carbs));\n  \n  const results: MacroResults = {\n    protein,\n    carbs,\n    fat,\n    calories: Math.round(adjustedCalories),\n    bmr: Math.round(bmr),\n    tdee: Math.round(tdee)\n  };\n  \n  // Display results\n  displayResults(results);\n  showMessage('Macro calculations completed successfully!', 'success');\n}\n\n// Display calculation results\nfunction displayResults(results: MacroResults): void {\n  const proteinValue = document.getElementById('protein-value');\n  const carbsValue = document.getElementById('carbs-value');\n  const fatValue = document.getElementById('fat-value');\n  const caloriesValue = document.getElementById('calories-value');\n  const bmrValue = document.getElementById('bmr-value');\n  const tdeeValue = document.getElementById('tdee-value');\n  const adjustedCaloriesValue = document.getElementById('adjusted-calories');\n  const macroResults = document.getElementById('macro-results');\n  const macroExplanation = document.getElementById('macro-explanation');\n  \n  if (proteinValue) proteinValue.textContent = `${results.protein}g`;\n  if (carbsValue) carbsValue.textContent = `${results.carbs}g`;\n  if (fatValue) fatValue.textContent = `${results.fat}g`;\n  if (caloriesValue) caloriesValue.textContent = results.calories.toString();\n  if (bmrValue) bmrValue.textContent = results.bmr.toString();\n  if (tdeeValue) tdeeValue.textContent = results.tdee.toString();\n  if (adjustedCaloriesValue) adjustedCaloriesValue.textContent = results.calories.toString();\n  \n  if (macroResults) {\n    macroResults.style.display = 'grid';\n    macroResults.classList.add('show-results');\n  }\n  \n  if (macroExplanation) {\n    macroExplanation.style.display = 'block';\n  }\n}\n\n// Save macro profile\nexport function saveMacroProfile(): void {\n  const ageInput = document.getElementById('macro-age') as HTMLInputElement;\n  const genderSelect = document.getElementById('macro-gender') as HTMLSelectElement;\n  const weightInput = document.getElementById('macro-weight') as HTMLInputElement;\n  const heightInput = document.getElementById('macro-height') as HTMLInputElement;\n  const activitySelect = document.getElementById('macro-activity') as HTMLSelectElement;\n  const lossRateSelect = document.getElementById('macro-lossRate') as HTMLSelectElement;\n  const proteinRatioSelect = document.getElementById('macro-proteinRatio') as HTMLSelectElement;\n  const fatRatioSelect = document.getElementById('macro-fatRatio') as HTMLSelectElement;\n  \n  const profile: MacroProfile = {\n    age: parseFloat(ageInput?.value || '0'),\n    gender: genderSelect?.value || 'male',\n    weight: parseFloat(weightInput?.value || '0'),\n    height: parseFloat(heightInput?.value || '0'),\n    activity: parseFloat(activitySelect?.value || '1.55'),\n    lossRate: parseFloat(lossRateSelect?.value || '0'),\n    proteinRatio: parseFloat(proteinRatioSelect?.value || '2.2'),\n    fatRatio: parseFloat(fatRatioSelect?.value || '0.8')\n  };\n  \n  // Validation\n  if (!profile.age || !profile.weight || !profile.height) {\n    showMessage('Please fill in all required fields before saving', 'error');\n    return;\n  }\n  \n  const user = getCurrentAuthUser();\n  const userId = user?.id || 'anonymous';\n  \n  try {\n    localStorage.setItem(`macroProfile_${userId}`, JSON.stringify(profile));\n    showMessage('Macro profile saved successfully!', 'success');\n  } catch (error) {\n    console.error('Error saving macro profile:', error);\n    showMessage('Error saving macro profile', 'error');\n  }\n}\n\n// Show message helper\nfunction showMessage(message: string, type: 'success' | 'error' | 'info' | 'warning' = 'success'): void {\n  // Create or update message element\n  let messageEl = document.getElementById('macro-message');\n  if (!messageEl) {\n    messageEl = document.createElement('div');\n    messageEl.id = 'macro-message';\n    messageEl.className = 'message';\n    const container = document.getElementById('macro-calculator') || document.body;\n    container.insertBefore(messageEl, container.firstChild);\n  }\n  \n  messageEl.textContent = message;\n  messageEl.className = `message ${type}`;\n  messageEl.style.display = 'block';\n  \n  // Hide after 4 seconds\n  setTimeout(() => {\n    if (messageEl) messageEl.style.display = 'none';\n  }, 4000);\n}\n\n// Show persistent profile tip (orange warning that doesn't auto-hide)\nfunction showPersistentProfileTip(message: string): void {\n  // Create or update persistent tip element\n  let tipEl = document.getElementById('macro-profile-tip');\n  if (!tipEl) {\n    tipEl = document.createElement('div');\n    tipEl.id = 'macro-profile-tip';\n    tipEl.className = 'message warning';\n    const container = document.getElementById('macro-calculator') || document.body;\n    container.insertBefore(tipEl, container.firstChild);\n  }\n  \n  tipEl.textContent = message;\n  tipEl.className = 'message warning';\n  tipEl.style.display = 'block';\n  \n  // Don't auto-hide - it stays until profile is complete\n}\n\n// Hide persistent profile tip\nfunction hidePersistentProfileTip(): void {\n  const tipEl = document.getElementById('macro-profile-tip');\n  if (tipEl) {\n    tipEl.style.display = 'none';\n  }\n}\n\n// Add visual indicator that data came from profile\nfunction addProfileIndicator(element: HTMLElement, tooltipText: string): void {\n  // Remove any existing indicator\n  const existingIndicator = element.parentElement?.querySelector('.profile-indicator');\n  if (existingIndicator) {\n    existingIndicator.remove();\n  }\n  \n  // Create indicator element\n  const indicator = document.createElement('span');\n  indicator.className = 'profile-indicator';\n  indicator.innerHTML = '👤';\n  indicator.title = tooltipText;\n  indicator.style.marginLeft = '8px';\n  indicator.style.color = '#10b981';\n  indicator.style.fontSize = '14px';\n  indicator.style.cursor = 'help';\n  indicator.style.filter = 'grayscale(0.3) brightness(1.2)';\n  \n  // Add some styling to the input to show it's from profile\n  element.style.borderLeft = '3px solid #10b981';\n  \n  // Insert indicator after the element\n  if (element.parentElement) {\n    element.parentElement.style.position = 'relative';\n    element.parentElement.appendChild(indicator);\n  }\n}\n\n// Remove profile indicators (when data is manually changed)\nfunction removeProfileIndicator(element: HTMLElement): void {\n  const indicator = element.parentElement?.querySelector('.profile-indicator');\n  if (indicator) {\n    indicator.remove();\n  }\n  element.style.borderLeft = '';\n}\n\n// Refresh macro calculator data (useful when profile is updated)\nexport async function refreshMacroCalculator(): Promise<void> {\n  console.log('🔄 Refreshing macro calculator data...');\n  await loadSavedProfile();\n  \n  // Recheck if tip should be shown/hidden after refresh\n  setTimeout(() => {\n    const ageInput = document.getElementById('macro-age') as HTMLInputElement;\n    const genderSelect = document.getElementById('macro-gender') as HTMLSelectElement;\n    const heightInput = document.getElementById('macro-height') as HTMLInputElement;\n    \n    const missingFields = [];\n    if (!ageInput?.value) missingFields.push('Age');\n    if (!genderSelect?.value || genderSelect?.value === '') missingFields.push('Gender');\n    if (!heightInput?.value) missingFields.push('Height');\n    \n    if (missingFields.length > 0) {\n      const missingText = missingFields.join(', ');\n      showPersistentProfileTip(`💡 Tip: Fill out your profile in Settings to auto-populate ${missingText}`);\n    } else {\n      hidePersistentProfileTip();\n    }\n  }, 100);\n  \n  console.log('✅ Macro calculator refreshed');\n}\n\n// Make functions globally available\ndeclare global {\n  interface Window {\n    calculateMacros: () => void;\n    saveMacroProfile: () => void;\n  }\n}\n\nwindow.calculateMacros = calculateMacros;\nwindow.saveMacroProfile = saveMacroProfile; ","import { supabase } from './supabase-client.ts';\nimport { allFoods } from './food-tracker';\nimport { getDefaultServingUnit, updateMealInDatabase, addToShoppingList as addFoodToShoppingList, addToSundries } from './database';\nimport { calculateNutrientsFromInput } from '../utils/nutrition';\n\ninterface MealIngredient {\n    name: string;\n    carbs: number;\n    fat?: number;\n    protein?: number;\n    instructions: string;\n    row: number;\n    // Additional fields from admin panel\n    food_name?: string;\n    food_id?: string;\n    quantity?: number;\n    serving_unit?: string;\n    grams_per_unit?: number;\n}\n\ninterface Meal {\n    id?: string;\n    number: string;\n    name: string;\n    meal_type: string;  // Changed from mealType to match database\n    ingredients: MealIngredient[];\n    totalCarbs: number;\n    totalFat: number;\n    totalProtein: number;\n    picture: string;\n    startRow: number;\n    endRow: number;\n    images: any[];\n    user_id?: string;\n    created_by?: string;\n    cooking_instructions?: string;\n    image_url?: string;\n}\n\ninterface MealPlan {\n    [date: string]: {\n        [mealType: string]: Meal[]\n    }\n}\n\n// Global state\nlet currentMeals: any[] = [];\nexport let allMeals = currentMeals;\nlet weeklyMealPlan: MealPlan = {};\nlet mealPlan: MealPlan = {};\nlet weeklyMealPlanLoaded = false;\nlet isUpdatingShoppingCheckboxes = false;\n\nexport async function initializeMeals() {\n    // Removed excessive logging for performance\n    await loadUserMeals();\n    setupMealEventListeners();\n    loadWeeklyMealPlan(); // Load saved weekly meal plan data\n    updateWeeklyMealPlanDisplay(); // Initialize the weekly meal plan grid\n    displayLastMealUploadDate(); // Display last meal update date\n    // Removed excessive logging for performance\n}\n\n// Export function to reload meals (can be called from admin after creating new meals)\nexport async function reloadMeals() {\n    console.log('🔄 Reloading meals...');\n    await loadUserMeals();\n}\n\nfunction setupMealEventListeners(): void {\n    // Setup meal plan event listeners\n    document.addEventListener('click', (event) => {\n        const target = event.target as HTMLElement;\n        \n        // If click is not on dropdown or its trigger button, close all dropdowns\n        if (!target.closest('.add-to-plan-container')) {\n            document.querySelectorAll('.meal-plan-dropdown').forEach(dropdown => {\n                (dropdown as HTMLElement).style.display = 'none';\n            });\n        }\n    });\n\n    // Make functions globally available\n    (window as any).removeIngredientRow = removeIngredientRow;\n    (window as any).addNewIngredientRow = addNewIngredientRow;\n    (window as any).addToMealPlan = addToMealPlan;\n    (window as any).toggleMealPlanDropdown = toggleMealPlanDropdown;\n    (window as any).updateMealShoppingCheckboxes = updateMealShoppingCheckboxes;\n}\n\n// Make functions available globally for HTML onclick handlers\n(window as any).showMealUploadModal = function() {\n    showMealMessage('Meal upload functionality has been deprecated. Meals are now managed through the database.', 'info');\n};\n\n(window as any).closeMealUploadModal = function() {\n    // No-op since modal is deprecated\n};\n\n// Excel file upload functionality has been deprecated\n// Meals are now managed directly through the database\n\nasync function clearAllMealsForUser(userId: string) {\n    try {\n        if (!supabase) {\n            throw new Error('Database not available');\n        }\n        \n        const { error } = await supabase\n            .from('meals')\n            .delete()\n            .eq('user_id', userId);\n        \n        if (error) {\n            console.error('❌ Error clearing meals:', error);\n            throw error;\n        }\n        \n        console.log('🗑️ Cleared all existing meals for user');\n    } catch (error) {\n        console.error('❌ Error in clearAllMealsForUser:', error);\n        throw error;\n    }\n}\n\nasync function saveMealsToDatabase(meals: Meal[], userId: string) {\n    try {\n        if (!supabase) {\n            throw new Error('Database not available');\n        }\n        \n        const mealsToInsert = meals.map(meal => ({\n            user_id: userId,\n            number: meal.number,\n            name: meal.name,\n            meal_type: meal.meal_type,\n            ingredients: JSON.stringify(meal.ingredients),\n            total_carbs: meal.totalCarbs,\n            // TODO: Add total_fat and total_protein when database schema is updated\n            picture: meal.picture,\n            start_row: meal.startRow,\n            end_row: meal.endRow\n        }));\n        \n        const { error } = await supabase\n            .from('meals')\n            .insert(mealsToInsert);\n        \n        if (error) {\n            console.error('❌ Error saving meals:', error);\n            throw error;\n        }\n        \n        console.log(`✅ Saved ${meals.length} meals to database`);\n    } catch (error) {\n        console.error('❌ Error in saveMealsToDatabase:', error);\n        throw error;\n    }\n}\n\nexport async function loadUserMeals() {\n    try {\n        // Get user's meals\n        const { data: meals, error: mealsError } = await supabase\n            .from('meals')\n            .select('*')\n            .order('name');\n\n        if (mealsError) throw mealsError;\n\n        // Get all foods\n        const { data: foods, error: foodsError } = await supabase\n            .from('foods')\n            .select('*');\n            \n        if (foodsError) throw foodsError;\n\n        // Get all serving units\n        const { data: servingUnits, error: unitsError } = await supabase\n            .from('serving_units')\n            .select('*');\n            \n        if (unitsError) throw unitsError;\n\n        // Process each meal\n        const mappedMeals = (meals || []).map(dbMeal => {\n            // Parse ingredients if it's a string, otherwise use as is\n            let rawIngredients;\n            try {\n                rawIngredients = typeof dbMeal.ingredients === 'string' \n                    ? JSON.parse(dbMeal.ingredients)\n                    : dbMeal.ingredients || [];\n            } catch (e) {\n                console.error(`Error parsing ingredients for meal ${dbMeal.name}:`, e);\n                rawIngredients = [];\n            }\n\n            // Process ingredients and calculate nutrients\n            const processedIngredients = rawIngredients.map((ing: any) => {\n                const food = foods.find(f => f.id === ing.food_id);\n                if (!food) return ing;\n\n                const qty = ing.quantity ?? 1;\n                const unit = (ing.serving_unit || '').toUpperCase();\n                let calculatedCarbs = 0, calculatedFat = 0, calculatedProtein = 0;\n\n                // For EACH units, use direct multiplication (no grams calculation needed)\n                if (unit === 'EACH') {\n                    calculatedCarbs = +(food.carbs * qty).toFixed(1);\n                    calculatedFat = +(food.fat * qty).toFixed(1);\n                    calculatedProtein = +(food.protein * qty).toFixed(1);\n                } else {\n                    // For all other units (including SLICE), use grams calculation\n                    const suMatch = servingUnits.find(su => su.food_id === food.id && su.unit_name === unit);\n                    if (suMatch && suMatch.grams_per_unit) {\n                        const totalGrams = suMatch.grams_per_unit * qty;\n                        const factor = totalGrams / 100;\n                        calculatedCarbs = +(food.carbs * factor).toFixed(1);\n                        calculatedFat = +(food.fat * factor).toFixed(1);\n                        calculatedProtein = +(food.protein * factor).toFixed(1);\n                    } else {\n                        console.warn(`❌ [DEBUG] No serving unit found for ${food.name} ${unit}, using stored values`);\n                        return ing;\n                    }\n                }\n\n                return {\n                    ...ing,\n                    carbs: calculatedCarbs,\n                    fat: calculatedFat,\n                    protein: calculatedProtein\n                };\n            });\n\n            return {\n                ...dbMeal,\n                ingredients: processedIngredients\n            };\n        });\n\n        allMeals = mappedMeals;\n        await displayMeals(mappedMeals);\n\n    } catch (error) {\n        console.error('Error loading meals:', error);\n        showMealMessage('Error loading meals', 'error');\n    }\n}\n\nfunction showNoMealsState() {\n    const mealGrid = document.getElementById('mealGrid');\n    const availableMealsGrid = document.getElementById('availableMealsGrid');\n    if (mealGrid) mealGrid.innerHTML = '<p class=\"no-data\">No meals found in database. Meals can be created through the admin interface.</p>';\n    if (availableMealsGrid) availableMealsGrid.innerHTML = '<p class=\"no-data\">No meals found in database. Meals can be created through the admin interface.</p>';\n}\n\n// Make displayMeals function available for other modules\nexport function displayMeals(meals: Meal[], skipFilterUpdate: boolean = false) {\n    if (!meals || meals.length === 0) {\n        showNoMealsState();\n        return;\n    }\n\n    // Update category filters if needed\n    if (!skipFilterUpdate) {\n        updateMealCategoryFilters(meals);\n    }\n\n    // Get active category filter\n    const activeFilterBtn = document.querySelector('.meal-filters .filter-btn.active');\n    const activeCategory = activeFilterBtn?.getAttribute('data-category')?.toUpperCase() || 'ALL';\n\n    // Filter meals if category is not ALL\n    const filteredMeals = activeCategory === 'ALL' ? \n        meals : \n        meals.filter(meal => meal.meal_type === activeCategory);\n\n    // Get container and update grid\n    const container = document.getElementById('mealGrid');\n    if (container) {\n        updateMealGrid(container, filteredMeals);\n    }\n}\n\nfunction updateMealCategoryFilters(meals: Meal[]): void {\n    const mealFiltersContainers = document.querySelectorAll('.meal-filters');\n    if (!mealFiltersContainers.length) {\n        console.log('⚠️ No meal filter containers found');\n        return;\n    }\n\n    // Extract unique meal types (case-insensitive) from loaded meals\n    const availableMealTypes = [...new Set(meals.map(meal => meal.meal_type).filter(type => type))];\n    const availableTypesUpper = availableMealTypes.map(t => t.toUpperCase());\n    \n    // Define the order of meal categories\n    const mealTypeOrder = ['BREAKFAST', 'LUNCH', 'DINNER', 'SNACKS', 'SAUCES', 'OTHER'];\n    \n    // Start with ALL button, then add meal types in the specified order that exist in our data (case-insensitive match)\n    const categories = ['all', ...mealTypeOrder.filter(type => availableTypesUpper.includes(type))];\n    \n    // Update all meal filter containers (both meals section and meal plan section)\n    mealFiltersContainers.forEach((container, containerIndex) => {\n        // Removed excessive logging for performance\n        \n        // Generate filter buttons (ALL button will be active by default)\n        container.innerHTML = categories.map((category, index) => {\n            const isActive = index === 0 ? 'active' : '';\n            const displayName = category === 'all' ? 'All' : \n                               category === 'BREAKFAST' ? 'Breakfast' :\n                               category === 'LUNCH' ? 'Lunch' :\n                               category === 'DINNER' ? 'Dinner' :\n                               category === 'SNACKS' ? 'Snacks' :\n                               category === 'SAUCES' ? 'Sauces' :\n                               category;\n            return `\n              <button class=\"filter-btn ${isActive}\" onclick=\"filterMealsByCategory('${category}')\" data-category=\"${category}\">\n                ${displayName}\n              </button>\n            `;\n        }).join('');\n    });\n    \n    // Removed excessive logging for performance\n}\n\nfunction updateMealGrid(container: HTMLElement, meals: Meal[]) {\n    if (meals.length === 0) {\n        container.innerHTML = '<p class=\"no-data\">No meals found in database. Meals can be created through the admin interface.</p>';\n        return;\n    }\n    \n    // Sort meals by meal type in the desired order: Breakfast, Lunch, Dinner, then others\n    const mealTypeOrder = ['Breakfast', 'Lunch', 'Dinner', 'Snacks', 'Sauces'];\n    const sortedMeals = [...meals].sort((a, b) => {\n        const aIndex = mealTypeOrder.indexOf(a.meal_type);\n        const bIndex = mealTypeOrder.indexOf(b.meal_type);\n        \n        // If both meal types are in our order array, sort by that order\n        if (aIndex !== -1 && bIndex !== -1) {\n            return aIndex - bIndex;\n        }\n        // If only one is in our order array, it comes first\n        if (aIndex !== -1) return -1;\n        if (bIndex !== -1) return 1;\n        // If neither is in our order array, sort alphabetically\n        return a.meal_type.localeCompare(b.meal_type);\n    });\n    \n    // Display all meals in a continuous 3-column grid\n    let html = '';\n    sortedMeals.forEach(meal => {\n        html += generateMealCardHTML(meal);\n    });\n    \n    container.innerHTML = html;\n    // Removed excessive logging for performance\n}\n\nfunction generateMealCardHTML(meal: Meal): string {\n    console.log(`🎨 [DEBUG] Generating card for meal: ${meal.name}`);\n    console.log(`🎨 [DEBUG] Meal data:`, meal);\n    \n    // Use stored total nutritional values, or calculate from ingredients as fallback\n    const totalCarbs = meal.totalCarbs || meal.ingredients.reduce((sum, ing) => sum + (ing.carbs || 0), 0);\n    const totalFat = meal.totalFat || meal.ingredients.reduce((sum, ing) => sum + (ing.fat || 0), 0);\n    const totalProtein = meal.totalProtein || meal.ingredients.reduce((sum, ing) => sum + (ing.protein || 0), 0);\n    \n    console.log(`🎨 [DEBUG] ${meal.name} display totals: Carbs=${totalCarbs}, Fat=${totalFat}, Protein=${totalProtein}`);\n    console.log(`🎨 [DEBUG] ${meal.name} ingredients for display:`, meal.ingredients);\n\n    // Prepare image path - handle both base64 data and image filenames\n    let imagePath = null;\n    let imageDisplayName = meal.name;\n    \n    if (meal.picture) {\n        if (meal.picture.startsWith('data:image/')) {\n            imagePath = meal.picture;\n            imageDisplayName = meal.name; // Always use meal name\n        } else if (meal.picture.startsWith('http')) {\n            imagePath = meal.picture;\n            imageDisplayName = meal.picture.split('/').pop() || meal.name;\n        } else {\n            imagePath = `/images/${meal.picture}`;\n            imageDisplayName = meal.picture;\n        }\n    } else {\n        // Try using meal name as fallback for images folder\n        const cleanName = meal.name.replace(/[^\\w\\s]/g, '').trim();\n        imagePath = `/images/${cleanName}.jpg`;\n        imageDisplayName = `${cleanName}.jpg`;\n    }\n\n    return `\n        <div class=\"meal-card\" data-meal-id=\"${meal.id || ''}\" data-meal-name=\"${meal.name}\">\n            ${imagePath ? `\n                <div class=\"meal-image-container\">\n                    <img src=\"${imagePath}\" alt=\"${meal.name}\" class=\"meal-image\" \n                         onerror=\"this.style.display='none'; this.nextElementSibling.style.display='block';\"\n                         onload=\"this.style.display='block'; this.nextElementSibling.style.display='none';\">\n                    <div class=\"meal-image-fallback\" style=\"display: none;\">\n                        <span class=\"image-icon\">📷</span>\n                        <div class=\"fallback-text\">No Image</div>\n                    </div>\n                    <div class=\"meal-image-name\">${imageDisplayName}</div>\n                </div>\n            ` : `\n                <div class=\"meal-image-container\">\n                    <div class=\"meal-image-fallback\">\n                        <span class=\"image-icon\">📷</span>\n                        <div class=\"fallback-text\">No Image</div>\n                    </div>\n                </div>\n            `}\n            <div class=\"meal-header\">\n                <h4 class=\"meal-name\">${meal.name}</h4>\n                <div class=\"meal-creator\">Created By: ${meal.created_by}</div>\n            </div>\n            ${meal.cooking_instructions ? `\n                <div class=\"cooking-instructions\">\n                    <h5>Cooking Instructions:</h5>\n                    <div class=\"instructions-content\">${meal.cooking_instructions}</div>\n                </div>\n            ` : ''}\n            <div class=\"meal-ingredients\">\n                ${meal.ingredients.map(ing => {\n                    // If ingredient is missing nutrition (no match), show 'ingredient missing'\n                    const isMissing = (typeof ing.carbs !== 'number' && typeof ing.fat !== 'number' && typeof ing.protein !== 'number');\n                    if (isMissing) {\n                        return `\n                            <div class=\"ingredient-item missing-ingredient\">\n                                <span class=\"ingredient-name\">${ing.name || ing.food_name || 'Unknown Ingredient'} (ingredient missing)</span>\n                            </div>\n                        `;\n                    }\n                    const carbs = ing.carbs || 0;\n                    const fat = ing.fat || 0;\n                    const protein = ing.protein || 0;\n                    return `\n                        <div class=\"ingredient-item\">\n                            <span class=\"ingredient-name\">${ing.name || ing.food_name || 'Unknown Ingredient'}</span>\n                            <div class=\"ingredient-nutrition\">\n                                <span class=\"ingredient-carbs\">${formatNutrition(carbs)}g carbs</span>\n                                <span class=\"ingredient-fat\">${formatNutrition(fat)}g fat</span>\n                                <span class=\"ingredient-protein\">${formatNutrition(protein)}g protein</span>\n                            </div>\n                            ${ing.instructions ? `<div class=\"ingredient-instructions\">${ing.instructions}</div>` : ''}\n                        </div>\n                    `;\n                }).join('')}\n            </div>\n            <div class=\"nutrition-info\">\n                <span>Carbs: ${formatNutrition(totalCarbs)}g</span>\n                <span>Fat: ${formatNutrition(totalFat)}g</span>\n                <span>Protein: ${formatNutrition(totalProtein)}g</span>\n            </div>\n            <div class=\"meal-actions\">\n                <div class=\"add-to-plan-container\">\n                    <button class=\"secondary-btn add-to-plan-btn\" onclick=\"toggleMealPlanDropdown('${meal.id}')\">\n                        Add to Plan\n                    </button>\n                    <div class=\"meal-plan-dropdown\" id=\"dropdown-${meal.id}\" style=\"display: none;\">\n                        <div class=\"dropdown-content\">\n                            <div class=\"dropdown-section\">\n                                <label>Day:</label>\n                                <select class=\"day-select\" id=\"day-${meal.id}\">\n                                    <option value=\"Monday\">Monday</option>\n                                    <option value=\"Tuesday\">Tuesday</option>\n                                    <option value=\"Wednesday\">Wednesday</option>\n                                    <option value=\"Thursday\">Thursday</option>\n                                    <option value=\"Friday\">Friday</option>\n                                    <option value=\"Saturday\">Saturday</option>\n                                    <option value=\"Sunday\">Sunday</option>\n                                </select>\n                            </div>\n                            <div class=\"dropdown-section\">\n                                <label>Meal Time:</label>\n                                <select class=\"meal-time-select\" id=\"mealtime-${meal.id}\">\n                                    <option value=\"breakfast\" ${meal.meal_type.toLowerCase() === 'breakfast' ? 'selected' : ''}>Breakfast</option>\n                                    <option value=\"lunch\" ${meal.meal_type.toLowerCase() === 'lunch' ? 'selected' : ''}>Lunch</option>\n                                    <option value=\"dinner\" ${meal.meal_type.toLowerCase() === 'dinner' ? 'selected' : ''}>Dinner</option>\n                                    <option value=\"snack\" ${meal.meal_type.toLowerCase() === 'snack' || meal.meal_type.toLowerCase() === 'snacks' ? 'selected' : ''}>Snack</option>\n                                </select>\n                            </div>\n                            <div class=\"dropdown-actions\">\n                                <button class=\"primary-btn\" onclick=\"addMealToWeeklyPlan('${meal.id}', '${meal.name.replace(/'/g, \"\\\\'\")}')\">Add</button>\n                                <button class=\"secondary-btn\" onclick=\"hideMealPlanDropdown('${meal.id}')\">Cancel</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `;\n}\n\nfunction initializeWeeklyMealPlan() {\n    const weeklyPlanGrid = document.getElementById('weeklyMealPlan');\n    if (!weeklyPlanGrid) return;\n    \n    const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    const mealTypes = ['Breakfast', 'Lunch', 'Dinner', 'Snack'];\n    \n    let html = '';\n    days.forEach(day => {\n        html += `\n            <div class=\"day-plan\">\n                <h4 class=\"day-header\">${day}</h4>\n                ${mealTypes.map(mealType => `\n                    <div class=\"meal-slot\" data-day=\"${day}\" data-meal-type=\"${mealType.toLowerCase()}\">\n                        <h5>${mealType}</h5>\n                        <div class=\"meal-drop-zone\">\n                            <p class=\"drop-hint\">Drag meals here or click to add</p>\n                        </div>\n                    </div>\n                `).join('')}\n            </div>\n        `;\n    });\n    \n    weeklyPlanGrid.innerHTML = html;\n    console.log('✅ Weekly meal plan initialized');\n}\n\nfunction showMealMessage(message: string, type: 'success' | 'error' | 'info' = 'info') {\n    // Use the global message system\n    if ((window as any).showMessage) {\n        (window as any).showMessage(message, type);\n    } else {\n        // Fallback to console if global function not available\n        console.log(`${type.toUpperCase()}: ${message}`);\n    }\n}\n\n// Meal plan functions\nexport function addToMealPlan(mealId: string): void {\n    const meal = currentMeals.find((m: any) => m.id === mealId);\n    \n    if (!meal) {\n        console.error('Meal not found:', mealId);\n        return;\n    }\n    \n    const today = new Date().toISOString().split('T')[0];\n    \n    if (!mealPlan[today]) {\n        mealPlan[today] = {\n            breakfast: [],\n            lunch: [],\n            dinner: [],\n            snack: []\n        };\n    }\n    \n    // Add to the first available meal type or lunch by default\n    const mealTypes = ['breakfast', 'lunch', 'dinner', 'snack'];\n    let added = false;\n    \n    for (const mealType of mealTypes) {\n        if (mealPlan[today][mealType].length < 2) { // Max 2 meals per type\n            mealPlan[today][mealType].push(meal);\n            added = true;\n            break;\n        }\n    }\n    \n    if (!added) {\n        showMealMessage('Meal plan is full for today', 'error');\n        return;\n    }\n    \n    localStorage.setItem('nutrivalor_meal_plan', JSON.stringify(mealPlan));\n    displayMealPlan();\n    showMealMessage(`Added \"${meal.name}\" to meal plan!`, 'success');\n}\n\nfunction displayMealPlan() {\n    const planContainer = document.getElementById('mealPlanGrid');\n    if (!planContainer) return;\n    \n    // Load meal plan from localStorage if not already loaded\n    if (Object.keys(mealPlan).length === 0) {\n        const saved = localStorage.getItem('nutrivalor_meal_plan');\n        if (saved) {\n            try {\n                mealPlan = JSON.parse(saved);\n                console.log('📅 Loaded daily meal plan from localStorage');\n            } catch (error) {\n                console.error('Error loading daily meal plan:', error);\n            }\n        }\n    }\n    \n    const today = new Date().toISOString().split('T')[0];\n    const todaysPlan = mealPlan[today] || {\n        breakfast: [],\n        lunch: [],\n        dinner: [],\n        snack: []\n    };\n    \n    const mealTypes = ['breakfast', 'lunch', 'dinner', 'snack'];\n    \n    planContainer.innerHTML = `\n        <div class=\"meal-plan-day\">\n            <h3>Today's Meal Plan</h3>\n            ${mealTypes.map(mealType => {\n                const meals = todaysPlan[mealType] || [];\n                const totalCarbs = meals.reduce((sum: number, meal: any) => sum + (meal.totalCarbs || 0), 0);\n                \n                return `\n                    <div class=\"meal-type-plan\">\n                        <h4>${mealType.charAt(0).toUpperCase() + mealType.slice(1)}</h4>\n                        <div class=\"meal-type-totals\">\n                            <span>Carbs: ${formatNutrition(totalCarbs)}g</span>\n                        </div>\n                        <div class=\"planned-meals\">\n                            ${meals.map((meal: any) => `\n                                <div class=\"planned-meal\">\n                                    <span>${meal.name}</span>\n                                    <button onclick=\"removeMealFromPlan('${meal.id}', '${mealType}')\" class=\"remove-btn\">×</button>\n                                </div>\n                            `).join('')}\n                        </div>\n                    </div>\n                `;\n            }).join('')}\n        </div>\n    `;\n}\n\nfunction formatNutrition(value: any): string {\n    if (value === null || value === undefined || value === '') return '0';\n    const num = parseFloat(value);\n    return isNaN(num) ? '0' : num.toFixed(1);\n}\n\n// Filter meals by category (for both meals section and meal plan section)\nexport function filterMealsByCategory(category: string): void {\n    console.log(`🔍 Filtering meals by category: ${category}`);\n    \n    // Safety check: if no meals are loaded, show empty state\n    if (!currentMeals || currentMeals.length === 0) {\n        console.log(`⚠️ No meals available for filtering`);\n        const mealGrid = document.getElementById('mealGrid');\n        const availableMealsGrid = document.getElementById('availableMealsGrid');\n        if (mealGrid) mealGrid.innerHTML = '<p class=\"no-data\">No meals loaded. Please upload your meal Excel file.</p>';\n        if (availableMealsGrid) availableMealsGrid.innerHTML = '<p class=\"no-data\">No meals loaded. Please upload your meal Excel file.</p>';\n        return;\n    }\n    \n    let filteredMeals: Meal[];\n    \n    if (category === 'all' || category === 'ALL') {\n        filteredMeals = currentMeals;\n    } else {\n        filteredMeals = currentMeals.filter(meal => {\n            return meal.meal_type.toUpperCase() === category.toUpperCase();\n        });\n    }\n    \n    console.log(`📊 Found ${filteredMeals.length} meals for category: ${category}`);\n    \n    // Update filter button states first\n    document.querySelectorAll('.meal-filters .filter-btn').forEach(btn => {\n        btn.classList.remove('active');\n    });\n    \n    document.querySelectorAll(`[data-category=\"${category}\"]`).forEach(btn => {\n        btn.classList.add('active');\n    });\n    \n    // Display meals but skip filter regeneration to preserve active states\n    displayMeals(filteredMeals, true);\n}\n\n// Dropdown functions\nfunction toggleMealPlanDropdown(mealId: string) {\n    // Hide any other open dropdowns first\n    document.querySelectorAll('.meal-plan-dropdown').forEach(dropdown => {\n        if (dropdown.id !== `dropdown-${mealId}`) {\n            (dropdown as HTMLElement).style.display = 'none';\n        }\n    });\n    \n    const dropdown = document.getElementById(`dropdown-${mealId}`);\n    if (dropdown) {\n        const isVisible = dropdown.style.display === 'block';\n        dropdown.style.display = isVisible ? 'none' : 'block';\n        dropdown.style.visibility = isVisible ? 'hidden' : 'visible';\n        dropdown.style.opacity = isVisible ? '0' : '1';\n        dropdown.style.pointerEvents = isVisible ? 'none' : 'auto';\n        \n        // Dynamic positioning - check available space and position accordingly\n        if (!isVisible) {\n            const container = dropdown.closest('.add-to-plan-container') as HTMLElement;\n            if (container) {\n                const rect = container.getBoundingClientRect();\n                const viewportHeight = window.innerHeight;\n                const spaceBelow = viewportHeight - rect.bottom;\n                const spaceAbove = rect.top;\n                \n                // If there's more space above or if below space is too small, position above\n                if (spaceAbove > spaceBelow || spaceBelow < 200) {\n                    dropdown.style.bottom = '100%';\n                    dropdown.style.top = 'auto';\n                    dropdown.style.marginBottom = '5px';\n                    dropdown.style.marginTop = '0';\n                } else {\n                    dropdown.style.top = '100%';\n                    dropdown.style.bottom = 'auto';\n                    dropdown.style.marginTop = '5px';\n                    dropdown.style.marginBottom = '0';\n                }\n            }\n            \n            setTimeout(() => {\n                document.addEventListener('click', function handleClickOutside(event) {\n                    const target = event.target as HTMLElement;\n                    if (!dropdown.contains(target) && \n                        !target?.closest(`#dropdown-${mealId}`) &&\n                        !target?.closest(`.add-to-plan-btn`)) {\n                        dropdown.style.display = 'none';\n                        dropdown.style.visibility = 'hidden';\n                        dropdown.style.opacity = '0';\n                        dropdown.style.pointerEvents = 'none';\n                        document.removeEventListener('click', handleClickOutside);\n                    }\n                });\n            }, 10);\n        }\n    }\n}\n\nfunction hideMealPlanDropdown(mealId: string) {\n    const dropdown = document.getElementById(`dropdown-${mealId}`);\n    if (dropdown) {\n        dropdown.style.display = 'none';\n        dropdown.style.visibility = 'hidden';\n        dropdown.style.opacity = '0';\n        dropdown.style.pointerEvents = 'none';\n    }\n}\n\nfunction addMealToWeeklyPlan(mealId: string, mealName: string) {\n    console.log(`🔍 addMealToWeeklyPlan called with mealId: \"${mealId}\", mealName: \"${mealName}\"`);\n    console.log(`📊 Current meals count: ${currentMeals.length}`);\n    console.log(`📋 Available meal IDs:`, currentMeals.map(m => ({ id: m.id, name: m.name })));\n    \n    const meal = currentMeals.find((m: any) => m.id === mealId);\n    if (!meal) {\n        console.error(`❌ Meal not found with ID: \"${mealId}\"`);\n        console.error(`Available meals:`, currentMeals.map(m => `ID: \"${m.id}\", Name: \"${m.name}\"`));\n        showMealMessage(`Meal not found: ${mealName}`, 'error');\n        return;\n    }\n\n    console.log(`✅ Found meal: ${meal.name} with ID: ${meal.id}`);\n\n    const daySelect = document.getElementById(`day-${mealId}`) as HTMLSelectElement;\n    const mealTimeSelect = document.getElementById(`mealtime-${mealId}`) as HTMLSelectElement;\n    \n    if (!daySelect || !mealTimeSelect) {\n        console.error(`❌ Dropdown selects not found for meal ID: ${mealId}`);\n        console.error(`daySelect:`, daySelect);\n        console.error(`mealTimeSelect:`, mealTimeSelect);\n        showMealMessage('Error: Dropdown elements not found', 'error');\n        return;\n    }\n\n    const selectedDay = daySelect.value;\n    const selectedMealTime = mealTimeSelect.value;\n    \n    console.log(`📅 Selected day: ${selectedDay}, meal time: ${selectedMealTime}`);\n\n    // Initialize day if it doesn't exist\n    if (!weeklyMealPlan[selectedDay]) {\n        weeklyMealPlan[selectedDay] = {\n            breakfast: [],\n            lunch: [],\n            dinner: [],\n            snack: []\n        };\n    }\n\n    // Check if meal is already in that slot\n    console.log(`🔍 DUPLICATE CHECK: Looking for meal ID \"${mealId}\" in ${selectedDay} ${selectedMealTime}`);\n    console.log(`🔍 DUPLICATE CHECK: Current meals in that slot:`, weeklyMealPlan[selectedDay][selectedMealTime]);\n    console.log(`🔍 DUPLICATE CHECK: Meal IDs in that slot:`, weeklyMealPlan[selectedDay][selectedMealTime].map(m => m.id));\n    \n    const existingMeal = weeklyMealPlan[selectedDay][selectedMealTime].find(m => m.id === mealId);\n    if (existingMeal) {\n        console.log(`❌ DUPLICATE CHECK: Found existing meal:`, existingMeal);\n        showMealMessage(`${mealName} is already planned for ${selectedDay} ${selectedMealTime}`, 'error');\n        hideMealPlanDropdown(mealId);\n        return;\n    }\n    \n    console.log(`✅ DUPLICATE CHECK: No duplicate found, proceeding to add meal`);\n    \n\n    // Add meal to the selected day and time\n    weeklyMealPlan[selectedDay][selectedMealTime].push(meal);\n    \n    // Save to localStorage\n    localStorage.setItem('nutrivalor_weekly_meal_plan', JSON.stringify(weeklyMealPlan));\n    \n    // Update the weekly meal plan display\n    updateWeeklyMealPlanDisplay();\n    \n    // Hide dropdown and show success message\n    hideMealPlanDropdown(mealId);\n    showMealMessage(`Added \"${mealName}\" to ${selectedDay} ${selectedMealTime}!`, 'success');\n    console.log(`✅ Successfully added meal to weekly plan`);\n}\n\nfunction removeMealFromWeeklyPlan(mealId: string, day: string, mealType: string) {\n    if (weeklyMealPlan[day] && weeklyMealPlan[day][mealType]) {\n        const index = weeklyMealPlan[day][mealType].findIndex((m: any) => m.id === mealId);\n        if (index !== -1) {\n            weeklyMealPlan[day][mealType].splice(index, 1);\n            localStorage.setItem('nutrivalor_weekly_meal_plan', JSON.stringify(weeklyMealPlan));\n            updateWeeklyMealPlanDisplay();\n            showMealMessage('Meal removed from weekly plan', 'success');\n        }\n    }\n}\n\nfunction updateWeeklyMealPlanDisplay() {\n    const weeklyPlanGrid = document.getElementById('weeklyMealPlan');\n    if (!weeklyPlanGrid) return;\n\n    const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    const mealTypes = ['breakfast', 'lunch', 'dinner', 'snack'];\n    const mealTypeLabels = ['Breakfast', 'Lunch', 'Dinner', 'Snack'];\n\n    let html = '';\n    days.forEach(day => {\n        const dayPlan = weeklyMealPlan[day] || {\n            breakfast: [],\n            lunch: [],\n            dinner: [],\n            snack: []\n        };\n\n        // Calculate daily totals across all meal types\n        let dailyTotalCarbs = 0;\n        let dailyTotalFat = 0;\n        let dailyTotalProtein = 0;\n        let hasMeals = false;\n\n        html += `\n            <div class=\"day-plan\">\n                <div class=\"day-header\">\n                    <div class=\"day-name\">${day}</div>\n                </div>\n                <div class=\"meal-types\">\n                    ${mealTypes.map((mealType, index) => {\n                        const meals = dayPlan[mealType] || [];\n                        \n                        // Calculate totals for this meal time\n                        const totalCarbs = meals.reduce((sum, meal) => sum + (meal.totalCarbs || 0), 0);\n                        const totalFat = meals.reduce((sum, meal) => sum + (meal.totalFat || 0), 0);\n                        const totalProtein = meals.reduce((sum, meal) => sum + (meal.totalProtein || 0), 0);\n                        \n                        // Add to daily totals\n                        dailyTotalCarbs += totalCarbs;\n                        dailyTotalFat += totalFat;\n                        dailyTotalProtein += totalProtein;\n                        if (meals.length > 0) hasMeals = true;\n                        \n                        return `\n                            <div class=\"meal-type\">\n                                <div class=\"meal-type-label\">${mealTypeLabels[index]}</div>\n                                ${meals.map(meal => `\n                                    <div class=\"planned-meal\">\n                                        <div class=\"planned-meal-content\">\n                                            <input \n                                                type=\"checkbox\" \n                                                class=\"meal-shopping-checkbox\" \n                                                id=\"shopping-${meal.id}-${day}-${mealType}\"\n                                                title=\"Add ingredients to Shopping List\"\n                                                onchange=\"console.log('📦 CHECKBOX EVENT: Checkbox clicked!', this.id, this.checked); handleMealToShoppingList('${meal.id}', '${meal.name.replace(/'/g, \"\\\\'\")}', this.checked)\"\n                                            />\n                                            <span class=\"planned-meal-name\">${meal.name}</span>\n                                        </div>\n                                        <button class=\"remove-planned-btn\" onclick=\"removeMealFromWeeklyPlan('${meal.id}', '${day}', '${mealType}')\">×</button>\n                                    </div>\n                                `).join('')}\n                                ${meals.length === 0 ? '<div class=\"empty-meal-slot\">No meals planned</div>' : ''}\n                                ${meals.length > 0 ? `\n                                    <div class=\"meal-time-totals\">\n                                        <span class=\"total-carbs\">Carbs: ${formatNutrition(totalCarbs)}g</span>\n                                        <span class=\"total-fat\">Fat: ${formatNutrition(totalFat)}g</span>\n                                        <span class=\"total-protein\">Protein: ${formatNutrition(totalProtein)}g</span>\n                                    </div>\n                                ` : ''}\n                            </div>\n                        `;\n                    }).join('')}\n                    \n                    <div class=\"daily-totals-column\">\n                        <div class=\"daily-totals-label\">Daily Total</div>\n                        ${hasMeals ? `\n                            <div class=\"daily-totals-values\">\n                                <span class=\"daily-total-carbs\">Carbs: ${formatNutrition(dailyTotalCarbs)}g</span>\n                                <span class=\"daily-total-fat\">Fat: ${formatNutrition(dailyTotalFat)}g</span>\n                                <span class=\"daily-total-protein\">Protein: ${formatNutrition(dailyTotalProtein)}g</span>\n                            </div>\n                        ` : '<div class=\"empty-meal-slot\">No meals</div>'}\n                    </div>\n                </div>\n            </div>\n        `;\n    });\n\n    weeklyPlanGrid.innerHTML = html;\n    \n    // After rendering HTML, check which meals have ingredients in shopping list\n    updateMealShoppingCheckboxes();\n}\n\n// Function to check shopping list and update checkboxes accordingly\nasync function updateMealShoppingCheckboxes() {\n    // Prevent multiple simultaneous updates\n    if (isUpdatingShoppingCheckboxes) {\n        console.log('🔄 Shopping checkbox update already in progress, skipping...');\n        return;\n    }\n    \n    try {\n        isUpdatingShoppingCheckboxes = true;\n        \n        // Load current shopping list items\n        const shoppingListItems = await loadShoppingListItems();\n        if (!shoppingListItems) {\n            console.log('⚠️ No shopping list items available, skipping checkbox update');\n            return;\n        }\n        \n        // Load current foods for matching\n        const allFoods = await loadFoodsForMatching();\n        if (!allFoods) {\n            console.log('⚠️ No foods available for matching, skipping checkbox update');\n            return;\n        }\n        \n        // Create a set of shopping list item identifiers for quick lookup\n        const shoppingItemIds = new Set(shoppingListItems\n            .filter(item => item && item.food_id)\n            .map(item => item.food_id));\n            \n        const shoppingItemNames = new Set(shoppingListItems\n            .filter(item => item && typeof item.name === 'string')\n            .map(item => item.name.toLowerCase().trim()));\n            \n        // Skip if no items to check against\n        if (shoppingItemIds.size === 0 && shoppingItemNames.size === 0) {\n            console.log('No shopping list items to check against, skipping update');\n            return;\n        }\n        \n        // Check each meal in the weekly plan\n        if (!weeklyMealPlan || typeof weeklyMealPlan !== 'object') {\n            console.log('Weekly meal plan not initialized, skipping update');\n            return;\n        }\n        \n        Object.keys(weeklyMealPlan).forEach(day => {\n            if (!weeklyMealPlan[day]) return;\n            \n            Object.keys(weeklyMealPlan[day]).forEach(mealType => {\n                if (!Array.isArray(weeklyMealPlan[day][mealType])) return;\n                \n                weeklyMealPlan[day][mealType].forEach(meal => {\n                    if (!meal || !meal.id) return;\n                    \n                    const checkboxId = `shopping-${meal.id}-${day}-${mealType}`;\n                    const checkbox = document.getElementById(checkboxId) as HTMLInputElement;\n                    \n                    if (!checkbox || !meal.ingredients) return;\n                    \n                    // Validate ingredients array\n                    const validIngredients = meal.ingredients.filter(ingredient => \n                        ingredient && \n                        typeof ingredient === 'object' && \n                        ingredient.name && \n                        typeof ingredient.name === 'string'\n                    );\n                    \n                    // Check if any of this meal's ingredients are in the shopping list\n                    let hasIngredientsInShoppingList = false;\n                    \n                    for (const ingredient of validIngredients) {\n                        const ingredientName = ingredient.name.trim().toLowerCase();\n                        \n                        // Check if ingredient matches any food in shopping list (by food_id)\n                        const matchedFood = findMatchingFood(ingredientName, allFoods);\n                        if (matchedFood && shoppingItemIds.has(matchedFood.id)) {\n                            hasIngredientsInShoppingList = true;\n                            break;\n                        }\n                        \n                        // Check if ingredient is directly in shopping list (SUNDRIES)\n                        if (shoppingItemNames.has(ingredientName)) {\n                            hasIngredientsInShoppingList = true;\n                            break;\n                        }\n                    }\n                    \n                    // Update checkbox state\n                    checkbox.checked = hasIngredientsInShoppingList;\n                });\n            });\n        });\n        \n    } catch (error) {\n        console.error('Error updating meal shopping checkboxes:', error);\n    } finally {\n        isUpdatingShoppingCheckboxes = false;\n    }\n}\n\n// Function to load shopping list items from database\nasync function loadShoppingListItems(): Promise<any[]> {\n    try {\n        const { supabase } = await import('./supabase-client');\n        \n        if (!supabase) {\n            throw new Error('Supabase client not available');\n        }\n        \n        const { data: { user }, error: userError } = await supabase.auth.getUser();\n        \n        if (userError || !user) {\n            throw new Error('User must be authenticated');\n        }\n        \n        const { data, error } = await supabase\n            .from('shopping_list')\n            .select('*')\n            .eq('user_id', user.id);\n            \n        if (error) throw error;\n        \n        return data || [];\n        \n    } catch (error) {\n        console.error('Error loading shopping list items:', error);\n        return [];\n    }\n}\n\nfunction loadWeeklyMealPlan() {\n    // Prevent multiple loads\n    if (weeklyMealPlanLoaded) {\n        return;\n    }\n    \n    const saved = localStorage.getItem('nutrivalor_weekly_meal_plan');\n    if (saved) {\n        try {\n            const loadedPlan = JSON.parse(saved);\n            \n            // Clear and update the weekly meal plan\n            Object.keys(weeklyMealPlan).forEach(key => delete weeklyMealPlan[key]);\n            Object.keys(loadedPlan).forEach(day => {\n                weeklyMealPlan[day] = {};\n                if (loadedPlan[day] && typeof loadedPlan[day] === 'object') {\n                    Object.keys(loadedPlan[day]).forEach(mealType => {\n                        weeklyMealPlan[day][mealType] = [];\n                        if (Array.isArray(loadedPlan[day][mealType])) {\n                            weeklyMealPlan[day][mealType] = loadedPlan[day][mealType].filter(meal => \n                                meal && \n                                typeof meal === 'object' && \n                                meal.id && \n                                meal.name && \n                                Array.isArray(meal.ingredients)\n                            );\n                        }\n                    });\n                }\n            });\n            \n            console.log('✅ Loaded weekly meal plan from localStorage');\n            updateWeeklyMealPlanDisplay();\n        } catch (error) {\n            console.error('Error loading weekly meal plan:', error);\n            weeklyMealPlan = {};\n        }\n    } else {\n        weeklyMealPlan = {};\n    }\n    \n    weeklyMealPlanLoaded = true;\n}\n\n// Clear all meal plan data\nfunction clearAllMealPlanData() {\n    if (confirm('Are you sure you want to clear all meal plan data? This cannot be undone.')) {\n        // Clear the weekly meal plan\n        weeklyMealPlan = {};\n        localStorage.removeItem('nutrivalor_weekly_meal_plan');\n        \n        // Clear the daily meal plan as well\n        mealPlan = {};\n        localStorage.removeItem('nutrivalor_meal_plan');\n        \n        // Update displays\n        updateWeeklyMealPlanDisplay();\n        displayMealPlan();\n        \n        showMealMessage('All meal plan data has been cleared!', 'success');\n        console.log('🗑️ All meal plan data cleared');\n    }\n}\n\n// Clear all meal data silently for logout/user switching\nexport function clearAllMealData() {\n    console.log('🧹 Clearing all meal data for user switch...');\n    \n    // Clear in-memory data\n    currentMeals = [];\n    weeklyMealPlan = {};\n    mealPlan = {};\n    \n    // Reset the loaded flag so it can be loaded again\n    weeklyMealPlanLoaded = false;\n    \n    // Clear localStorage\n    localStorage.removeItem('nutrivalor_meals');\n    localStorage.removeItem('nutrivalor_weekly_meal_plan');\n    localStorage.removeItem('nutrivalor_meal_plan');\n    \n    // Clear displays\n    updateWeeklyMealPlanDisplay();\n    displayMealPlan();\n    \n    console.log('✅ All meal data cleared for next user');\n}\n\n// Clear meal shopping checkboxes only (not the meal plan data)\nfunction clearMealShoppingCheckboxes() {\n    console.log('🗑️ Clearing all meal shopping checkboxes...');\n    console.log('🔍 Searching for checkboxes with class: .meal-shopping-checkbox');\n    \n    // Find all meal shopping checkboxes and uncheck them\n    const checkboxes = document.querySelectorAll('.meal-shopping-checkbox');\n    console.log(`📊 Found ${checkboxes.length} checkboxes total`);\n    \n    let uncheckedCount = 0;\n    let totalChecked = 0;\n    \n    checkboxes.forEach((checkbox, index) => {\n        if (checkbox instanceof HTMLInputElement) {\n            const wasChecked = checkbox.checked;\n            if (wasChecked) {\n                totalChecked++;\n            }\n            console.log(`🔲 Checkbox ${index + 1}: ID=\"${checkbox.id}\", checked=${wasChecked}`);\n            \n            if (wasChecked) {\n                checkbox.checked = false;\n                uncheckedCount++;\n                console.log(`✅ Unchecked checkbox: ${checkbox.id}`);\n            }\n        }\n    });\n    \n    console.log(`📈 Summary: ${uncheckedCount} unchecked out of ${totalChecked} that were checked`);\n    \n    if (uncheckedCount > 0) {\n        showMealMessage(`Cleared ${uncheckedCount} \"Add to List\" selections`, 'success');\n        console.log(`✅ Successfully unchecked ${uncheckedCount} meal shopping checkboxes`);\n    } else if (totalChecked === 0) {\n        showMealMessage('No checkboxes were selected to clear', 'info');\n        console.log('ℹ️ No meal shopping checkboxes were checked');\n    } else {\n        showMealMessage('All checkboxes were already cleared', 'info');\n        console.log('ℹ️ All checkboxes were already unchecked');\n    }\n}\n\n// Global functions for HTML onclick handlers\n(window as any).addMealToPlan = function(mealId: string, mealName: string) {\n    console.log(`🍽️ Adding meal ${mealName} to plan`);\n    addToMealPlan(mealId);\n};\n\n(window as any).toggleMealPlanDropdown = function(mealId: string) {\n    toggleMealPlanDropdown(mealId);\n};\n\n(window as any).hideMealPlanDropdown = function(mealId: string) {\n    hideMealPlanDropdown(mealId);\n};\n\n(window as any).addMealToWeeklyPlan = function(mealId: string, mealName: string) {\n    addMealToWeeklyPlan(mealId, mealName);\n};\n\n(window as any).removeMealFromWeeklyPlan = function(mealId: string, day: string, mealType: string) {\n    removeMealFromWeeklyPlan(mealId, day, mealType);\n};\n\n(window as any).filterMealsByCategory = function(category: string) {\n    filterMealsByCategory(category);\n};\n\n(window as any).clearAllMealPlanData = function() {\n    clearAllMealPlanData();\n};\n\n(window as any).clearMealShoppingCheckboxes = function() {\n    clearMealShoppingCheckboxes();\n};\n\n(window as any).removeMealFromPlan = function(mealId: string, mealType: string) {\n    const today = new Date().toISOString().split('T')[0];\n    if (mealPlan[today] && mealPlan[today][mealType]) {\n        const index = mealPlan[today][mealType].findIndex((m: any) => m.id === mealId);\n        if (index !== -1) {\n            mealPlan[today][mealType].splice(index, 1);\n            localStorage.setItem('nutrivalor_meal_plan', JSON.stringify(mealPlan));\n            displayMealPlan();\n            showMealMessage('Meal removed from plan', 'success');\n        }\n    }\n};\n\n// Meal to Shopping List functionality\nasync function handleMealToShoppingList(mealId: string, mealName: string, isChecked: boolean): Promise<void> {\n    console.log(`🛒 handleMealToShoppingList called - mealId: \"${mealId}\", mealName: \"${mealName}\", isChecked: ${isChecked}`);\n    console.log(`📊 Current meals available: ${currentMeals.length}`);\n    console.log(`🔍 Available meal IDs:`, currentMeals.map(m => m.id));\n    \n    if (!isChecked) {\n        // When unchecked, just show info message but allow future additions\n        showMealMessage('Checkbox unchecked - you can check it again to add more ingredients', 'info');\n        console.log(`📋 Checkbox unchecked for meal: ${mealName}. Ready for future additions.`);\n        return;\n    }\n    \n    const meal = currentMeals.find(m => m.id === mealId);\n    if (!meal) {\n        console.error(`❌ Meal not found with ID: \"${mealId}\"`);\n        console.error(`Available meals:`, currentMeals.map(m => ({ id: m.id, name: m.name })));\n        showMealMessage('Meal not found', 'error');\n        return;\n    }\n    \n    console.log(`✅ Found meal: \"${meal.name}\" with ${meal.ingredients?.length || 0} ingredients`);\n    \n    if (!meal.ingredients || meal.ingredients.length === 0) {\n        console.warn(`⚠️ No ingredients found in meal: \"${meal.name}\"`);\n        showMealMessage('No ingredients found in this meal', 'error');\n        return;\n    }\n    \n    try {\n        showMealMessage('Processing ingredients...', 'info');\n        const results = await addMealIngredientsToShoppingList(meal);\n        \n        const matched = results.matched.length;\n        const unmatched = results.unmatched.length;\n        \n        let message = `Added ${matched + unmatched} more ingredients to shopping list`;\n        if (matched > 0) message += ` (${matched} matched from Food Tracker`;\n        if (unmatched > 0) message += `, ${unmatched} added to SUNDRIES`;\n        if (matched > 0 || unmatched > 0) message += ')';\n        message += ` - quantities increased!`;\n        \n        showMealMessage(message, 'success');\n        \n        // Small delay to ensure database operations complete\n        await new Promise(resolve => setTimeout(resolve, 500));\n        \n        // Update shopping list display - reload from database first\n        console.log('🔄 Reloading food-tracker shopping list from database...');\n        \n        try {\n            // Use the new reload function that loads from database first\n            if (typeof (window as any).reloadShoppingListFromDatabase === 'function') {\n                await (window as any).reloadShoppingListFromDatabase();\n                console.log('✅ Food-tracker shopping list reloaded successfully');\n            } else {\n                console.warn('⚠️ Food-tracker shopping list reload function not available, using fallback');\n                // Fallback to just updating display\n                if (typeof (window as any).updateShoppingListDisplay === 'function') {\n                    (window as any).updateShoppingListDisplay();\n                }\n                showMealMessage('Ingredients added! Switch to Shopping List tab to see updates.', 'info');\n            }\n        } catch (error) {\n            console.warn('⚠️ Food-tracker shopping list reload failed:', error);\n            showMealMessage('Ingredients added! Switch to Shopping List tab to see updates.', 'info');\n        }\n        \n    } catch (error) {\n        console.error('Error adding meal ingredients to shopping list:', error);\n        showMealMessage('Error adding ingredients to shopping list', 'error');\n    }\n}\n\nasync function addMealIngredientsToShoppingList(meal: any): Promise<{matched: any[], unmatched: any[]}> {\n    console.log(`🔍 Processing ${meal.ingredients.length} ingredients from \"${meal.name}\"`);\n    \n    // Load current foods from Food Tracker for matching\n    const allFoods = await loadFoodsForMatching();\n    \n    const matched: any[] = [];\n    const unmatched: any[] = [];\n    \n    for (const ingredient of meal.ingredients) {\n        if (!ingredient) {\n            console.warn('⚠️ Skipping null ingredient');\n            continue;\n        }\n        \n        console.log(`🔍 DEBUG: Processing ingredient:`, ingredient);\n        \n        // Use food_name if available, otherwise try name\n        const ingredientName = (ingredient.food_name || ingredient.name || '').trim();\n        if (!ingredientName) {\n            console.warn('⚠️ Skipping ingredient without name:', ingredient);\n            continue;\n        }\n        \n        console.log(`🔍 DEBUG: ingredientName=\"${ingredientName}\", has food_id=${!!ingredient.food_id}`);\n        \n        // If we have a food_id, use that directly\n        if (ingredient.food_id) {\n            const matchedFood = allFoods.find(food => food.id === ingredient.food_id);\n            if (matchedFood) {\n                try {\n                    // Use the ingredient's quantity and unit if available\n                    const quantity = ingredient.quantity || 1;\n                    // Determine unit based on the food name\n                    console.log(`🔍 DEBUG: Food name for unit detection: \"${matchedFood.name}\"`);\n                    const unit = matchedFood.name.toLowerCase().includes('bacon') ? 'SLICE' : 'EACH';\n                    console.log(`🔍 DEBUG: Determined unit: \"${unit}\" for food \"${matchedFood.name}\"`);\n                    console.log(`🔄 CALLING addFoodToShoppingList(\"${matchedFood.id}\", ${quantity}, \"${unit}\")`);\n                    await addFoodToShoppingList(matchedFood.id, quantity, unit);\n                    matched.push({ ingredient, matchedFood, quantity, unit });\n                    console.log(`✅ Added \"${ingredientName}\" with quantity ${quantity}`);\n                    continue;\n                } catch (error) {\n                    console.error(`❌ Error adding ${matchedFood.name} to shopping list:`, error);\n                }\n            }\n        }\n        \n        // Fallback to name matching if no food_id or match not found\n        const {quantity, cleanName} = parseIngredientQuantity(ingredientName);\n        console.log(`🔢 PARSED: \"${ingredientName}\" → quantity: ${quantity}, cleanName: \"${cleanName}\"`);\n        \n        // Try to find a matching food in the Food Tracker using the cleaned name\n        const matchedFood = findMatchingFood(cleanName, allFoods);\n        \n        console.log(`🔍 MATCHING: Searching for \"${cleanName}\" in ${allFoods.length} foods`);\n        console.log(`🔍 MATCHING: Found match: ${matchedFood ? `\"${matchedFood.name}\" (ID: ${matchedFood.id})` : 'None'}`);\n        \n        if (matchedFood) {\n            // Add to shopping list using existing food data with parsed quantity\n            try {\n                // Get the unit based on the food name\n                console.log(`🔍 DEBUG: cleanName for unit detection: \"${cleanName}\"`);\n                console.log(`🔍 DEBUG: matchedFood.name: \"${matchedFood.name}\"`);\n                const unit = cleanName.toLowerCase().includes('bacon') ? 'SLICE' : 'EACH';\n                console.log(`🔍 DEBUG: Determined unit: \"${unit}\" for cleanName \"${cleanName}\"`);\n                console.log(`🔄 CALLING addFoodToShoppingList(\"${matchedFood.id}\", ${quantity}, \"${unit}\")`);\n                await addFoodToShoppingList(matchedFood.id, quantity, unit);\n                matched.push({ ingredient, matchedFood, quantity, unit });\n                console.log(`✅ Matched \"${ingredient.name}\" with \"${matchedFood.name}\" (quantity: ${quantity}, unit: ${unit})`);\n            } catch (error) {\n                console.error(`❌ Error adding ${matchedFood.name} to shopping list:`, error);\n            }\n        } else {\n            // Add to SUNDRIES section with parsed quantity\n            try {\n                console.log(`🔄 CALLING addToSundries(\"${ingredient.name}\", ${quantity})`);\n                await addToSundries(ingredient, quantity);\n                unmatched.push({...ingredient, quantity});\n                console.log(`📝 Added \"${ingredient.name}\" to SUNDRIES (quantity: ${quantity})`);\n            } catch (error) {\n                console.error(`❌ Error adding ${ingredient.name} to SUNDRIES:`, error);\n            }\n        }\n    }\n    \n    return { matched, unmatched };\n}\n\n// Load foods for ingredient matching\nasync function loadFoodsForMatching(): Promise<any[]> {\n    try {\n        const { data, error } = await supabase\n            .from('foods')\n            .select('*')\n            .order('name');\n            \n        if (error) throw error;\n        return data || [];\n    } catch (error) {\n        console.error('Error loading foods for matching:', error);\n        return [];\n    }\n}\n\n// Extract quantity and clean name from ingredient text like \"2 Eggs\" -> {quantity: 2, cleanName: \"Eggs\"}\nfunction parseIngredientQuantity(ingredientName: string): {quantity: number, cleanName: string} {\n    const trimmed = ingredientName.trim();\n    \n    // Look for patterns like \"2 eggs\", \"1.5 cups flour\", \"3/4 cup milk\", etc.\n    const quantityPatterns = [\n        /^(\\d+(?:\\.\\d+)?)\\s+(.+)$/,           // \"2 eggs\", \"1.5 cups\"\n        /^(\\d+\\/\\d+)\\s+(.+)$/,                // \"3/4 cup\"\n        /^(\\d+\\s+\\d+\\/\\d+)\\s+(.+)$/,          // \"1 3/4 cups\"\n        /^(\\w+)\\s+(.+)$/                      // \"one egg\", \"two eggs\" (word numbers)\n    ];\n    \n    for (const pattern of quantityPatterns) {\n        const match = trimmed.match(pattern);\n        if (match) {\n            const quantityStr = match[1].toLowerCase();\n            let quantity = 1;\n            \n            // Handle numeric quantities\n            if (/^\\d+(?:\\.\\d+)?$/.test(quantityStr)) {\n                quantity = parseFloat(quantityStr);\n            }\n            // Handle fractions like \"3/4\"\n            else if (/^\\d+\\/\\d+$/.test(quantityStr)) {\n                const [num, den] = quantityStr.split('/').map(Number);\n                quantity = num / den;\n            }\n            // Handle mixed numbers like \"1 3/4\"\n            else if (/^\\d+\\s+\\d+\\/\\d+$/.test(quantityStr)) {\n                const [whole, fraction] = quantityStr.split(' ');\n                const [num, den] = fraction.split('/').map(Number);\n                quantity = parseInt(whole) + (num / den);\n            }\n            // Handle word numbers\n            else {\n                const wordNumbers: {[key: string]: number} = {\n                    'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\n                    'six': 6, 'seven': 7, 'eight': 8, 'nine': 9, 'ten': 10\n                };\n                quantity = wordNumbers[quantityStr] || 1;\n            }\n            \n            const finalQuantity = Math.max(1, Math.round(quantity));\n            const finalName = match[2].trim();\n            return {\n                quantity: finalQuantity,\n                cleanName: finalName\n            };\n        }\n    }\n \n    // No quantity found, return original name with quantity 1\n    return {quantity: 1, cleanName: trimmed};\n}\n\nfunction findMatchingFood(ingredientName: string, foods: any[]): any | null {\n    if (!foods || foods.length === 0) {\n        return null;\n    }\n    // Only allow exact (case-insensitive, trimmed) match\n    const searchName = ingredientName.toLowerCase().trim();\n    const match = foods.find(food => food.name.toLowerCase().trim() === searchName);\n    return match || null;\n}\n\n// Last update date functions\nfunction updateLastMealUploadDate(): void {\n  const now = new Date();\n  const dateString = now.toLocaleDateString() + ' ' + now.toLocaleTimeString();\n  localStorage.setItem('lastMealUpdateDate', dateString);\n  displayLastMealUploadDate();\n}\n\nfunction displayLastMealUploadDate(): void {\n  const lastUpdate = localStorage.getItem('lastMealUpdateDate');\n  const infoElement = document.getElementById('lastMealUpdateInfo');\n  const dateElement = document.getElementById('lastMealUpdateDate');\n  \n  if (lastUpdate && infoElement && dateElement) {\n    dateElement.textContent = lastUpdate;\n    infoElement.style.display = 'block';\n  } else if (infoElement) {\n    infoElement.style.display = 'none';\n  }\n}\n\n// Add new ingredient row to meal form\nfunction addNewIngredientRow() {\n    const container = document.getElementById('ingredientsContainer');\n    if (!container) return;\n\n    const index = container.children.length;\n    const div = document.createElement('div');\n    div.className = 'ingredient-row';\n\n    // Create food select dropdown\n    const foodSelect = document.createElement('select');\n    foodSelect.className = 'food-select';\n    foodSelect.onchange = () => (window as any).updateFoodDetails(foodSelect, index);\n    \n    // Add options from allFoods\n    foodSelect.innerHTML = `\n        <option value=\"\">Select a food</option>\n        ${allFoods.map(food => `\n            <option value=\"${food.id}\">${food.name}</option>\n        `).join('')}\n    `;\n\n    // Create quantity input\n    const quantityInput = document.createElement('input');\n    quantityInput.type = 'number';\n    quantityInput.className = 'ingredient-quantity';\n    quantityInput.value = '1';\n    quantityInput.min = '0';\n    quantityInput.step = '0.1';\n    quantityInput.onchange = () => (window as any).updateFoodDetails(foodSelect, index);\n\n    // Create serving unit select\n    const unitSelect = document.createElement('select');\n    unitSelect.className = 'serving-unit-select';\n    unitSelect.innerHTML = '<option value=\"g\">g</option><option value=\"EACH\">each</option>';\n    unitSelect.onchange = () => (window as any).updateFoodDetails(foodSelect, index);\n\n    // Create remove button\n    const removeBtn = document.createElement('button');\n    removeBtn.type = 'button';\n    removeBtn.className = 'remove-ingredient-btn';\n    removeBtn.innerHTML = '&times;';\n    removeBtn.onclick = () => removeIngredientRow(div);\n\n    // Create food details div\n    const detailsDiv = document.createElement('div');\n    detailsDiv.id = `food-details-${index}`;\n    detailsDiv.className = 'food-details';\n    detailsDiv.innerHTML = `\n        <div class=\"food-info\">\n            <div class=\"food-name\">Select a food</div>\n            <div class=\"food-macros\">\n                <span>Carbs: 0g</span>\n                <span>Fat: 0g</span>\n                <span>Protein: 0g</span>\n            </div>\n        </div>\n    `;\n\n    // Add all elements to the row\n    div.appendChild(foodSelect);\n    div.appendChild(quantityInput);\n    div.appendChild(unitSelect);\n    div.appendChild(removeBtn);\n    div.appendChild(detailsDiv);\n\n    // Add row to container\n    container.appendChild(div);\n}\n\n// Remove ingredient row from meal form\nfunction removeIngredientRow(row: HTMLElement) {\n    const container = document.getElementById('ingredientsContainer');\n    if (container && row) {\n        container.removeChild(row);\n    }\n}\n\n// Update meal data with proper EACH unit handling\nasync function updateMealData(meal: any) {\n    try {\n        // Process ingredients\n        const ingredients = meal.ingredients.map((ingredient: any) => {\n            if (ingredient.serving_unit === 'EACH') {\n                return {\n                    ...ingredient,\n                    carbs: ingredient.carbs * ingredient.quantity,\n                    fat: ingredient.fat * ingredient.quantity,\n                    protein: ingredient.protein * ingredient.quantity\n                };\n            }\n            return ingredient;\n        });\n\n        // Calculate total macros\n        const totalMacros = ingredients.reduce((acc: any, ingredient: any) => {\n            acc.carbs += ingredient.carbs || 0;\n            acc.fat += ingredient.fat || 0;\n            acc.protein += ingredient.protein || 0;\n            return acc;\n        }, { carbs: 0, fat: 0, protein: 0 });\n\n        // Update meal in database\n        const { data, error } = await supabase\n            .from('meals')\n            .update({\n                ingredients: JSON.stringify(ingredients),\n                total_carbs: totalMacros.carbs,\n                total_fat: totalMacros.fat,\n                total_protein: totalMacros.protein\n            })\n            .eq('id', meal.id);\n\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        console.error('Error updating meal data:', error);\n        throw error;\n    }\n}","import { \n  loadShoppingListFromDatabase, \n  removeFromShoppingList,\n  updateShoppingListQuantity\n} from './database';\n\n// Store shopping list items for quick lookup\nlet currentShoppingList: any[] = [];\n\n// Initialize shopping list functionality\nexport async function initializeShoppingList(): Promise<void> {\n  // Removed excessive logging for performance\n  await loadAndDisplayShoppingList();\n  \n  // Set up event listener for cross-module refresh requests\n  window.addEventListener('shoppingListNeedsRefresh', async (event: Event) => {\n    const customEvent = event as CustomEvent;\n    console.log('📡 Received shopping list refresh event from:', customEvent.detail?.source);\n    try {\n      await loadAndDisplayShoppingList();\n      console.log('✅ Shopping list refreshed via event listener');\n    } catch (error) {\n      console.error('❌ Error refreshing shopping list via event:', error);\n    }\n  });\n  \n      // Removed excessive logging for performance\n}\n\n// Load and display shopping list\nexport async function loadAndDisplayShoppingList(): Promise<void> {\n  const items = await loadShoppingListFromDatabase();\n  if (!items) return;\n  \n  displayShoppingList(items);\n}\n\n// Consolidate duplicate items by combining quantities\nfunction consolidateItems(items: any[]): any[] {\n  const consolidated: Record<string, any> = {};\n  \n  items.forEach(item => {\n    // Create a more specific key that includes name, brand, category and unit for better matching\n    // Skip invalid items\n    if (!item || !item.food?.name) {\n      console.warn('⚠️ Skipping invalid shopping list item:', item);\n      return;\n    }\n\n    const brand = (item.food.brand || 'Any').toString();\n    const category = (item.food.category || 'General').toString();\n    const unit = (item.unit || 'EACH').toString();\n    const key = `${item.food.name.toString().toLowerCase().trim()}_${brand.toLowerCase().trim()}_${category.toLowerCase().trim()}_${unit.toLowerCase().trim()}`;\n    \n    console.log(`🔍 Processing item: ${item.food?.name}, Brand: ${brand}, Category: ${category}, Unit: ${unit}, Key: ${key}`);\n    console.log(`🔍 Item quantity RAW: value=\"${item.quantity}\", type=\"${typeof item.quantity}\", parsed=${parseInt(item.quantity)}`);\n    \n    if (consolidated[key]) {\n      // Item already exists, add quantities together\n      const oldQty = consolidated[key].quantity;\n      const addQty = parseInt(item.quantity) || 1;\n      consolidated[key].quantity = (parseInt(oldQty) || 1) + addQty;\n      console.log(`🔄 Consolidated ${item.name}: ${oldQty} + ${addQty} = ${consolidated[key].quantity} total quantity`);\n    } else {\n      // New item, add to consolidated list\n      const quantity = parseInt(item.quantity) || 1;\n      consolidated[key] = { ...item, quantity: quantity };\n      console.log(`➕ Added new item: ${item.name} with quantity ${quantity} (original: ${item.quantity}, type: ${typeof item.quantity})`);\n    }\n  });\n  \n  console.log(`📦 Consolidation complete: ${Object.keys(consolidated).length} unique items`);\n  return Object.values(consolidated);\n}\n\n// Display shopping list items\nexport function displayShoppingList(items: any[]): void {\n  const shoppingItemsContainer = document.getElementById('shoppingItems');\n  const shoppingTotalsContainer = document.getElementById('shoppingTotals');\n  \n  if (!shoppingItemsContainer) {\n    return;\n  }\n\n  // Clear totals first to avoid inconsistency\n  if (shoppingTotalsContainer) {\n    shoppingTotalsContainer.style.display = 'none';\n    shoppingTotalsContainer.innerHTML = '';\n  }\n\n  if (!items || items.length === 0) {\n    shoppingItemsContainer.innerHTML = '<p class=\"empty-state\">Your shopping list is empty. Add items from the Food Tracker!</p>';\n    // Ensure totals are hidden for empty state\n    if (shoppingTotalsContainer) {\n      shoppingTotalsContainer.style.display = 'none';\n    }\n    return;\n  }\n\n  // Consolidate duplicate items first\n  const consolidatedItems = consolidateItems(items);\n\n  // Group consolidated items by category\n  const itemsByCategory = consolidatedItems.reduce((groups: Record<string, any[]>, item: any) => {\n    const category = item.food?.category || item.food?.brand || 'General';\n    if (!groups[category]) {\n      groups[category] = [];\n    }\n    groups[category].push(item);\n    return groups;\n  }, {} as Record<string, any[]>);\n\n  // Sort categories with SUNDRIES at the end\n  const categoryOrder = Object.keys(itemsByCategory).sort((a, b) => {\n    if (a === 'SUNDRIES') return 1;\n    if (b === 'SUNDRIES') return -1;\n    return a.localeCompare(b);\n  });\n\n  // Display items grouped by category\n  shoppingItemsContainer.innerHTML = categoryOrder.map(category => {\n    const categoryItems = itemsByCategory[category];\n    const isSundries = category === 'SUNDRIES';\n    \n    return `\n      <div class=\"shopping-category\">\n        <h3 class=\"category-header ${isSundries ? 'sundries-header' : ''}\">${category}${isSundries ? ' (From Meal Plans)' : ''}</h3>\n        <div class=\"category-items\">\n          ${categoryItems.map(item => `\n            <div class=\"shopping-item\" data-id=\"${item.id}\">\n              <div class=\"item-info\">\n                <h4>${item.food?.name || 'Unknown Food'}</h4>\n                ${item.food?.brand && item.food.brand !== 'SUNDRIES' ? `<div class=\"brand-info\">Brand: ${item.food.brand}</div>` : ''}\n                <div class=\"nutrition-info\">\n                  <span>Carbs: ${formatNutrition(item.food?.carbs)}g</span>\n                  <span>Fat: ${formatNutrition(item.food?.fat)}g</span>\n                  <span>Protein: ${formatNutrition(item.food?.protein)}g</span>\n                </div>\n                ${!isSundries ? `<div class=\"category-info\">${item.food?.category || 'General'}</div>` : ''}\n              </div>\n              <div class=\"item-controls\">\n                <div class=\"quantity-controls\">\n                  <button onclick=\"updateItemQuantity('${item.id}', ${item.quantity - 1})\" class=\"qty-btn\" ${item.quantity <= 1 ? 'disabled' : ''}>-</button>\n                  <span class=\"quantity\">${item.quantity}</span>\n                  <button onclick=\"updateItemQuantity('${item.id}', ${item.quantity + 1})\" class=\"qty-btn\">+</button>\n                  <span class=\"unit-label\">${item.unit || 'EACH'}</span>\n                </div>\n                <button onclick=\"removeShoppingItem('${item.id}')\" class=\"remove-btn\">Remove</button>\n              </div>\n            </div>\n          `).join('')}\n        </div>\n      </div>\n    `;\n  }).join('');\n\n  // Calculate and display totals\n  const totals = calculateTotals(consolidatedItems);\n  \n  if (shoppingTotalsContainer) {\n    shoppingTotalsContainer.style.display = 'block';\n    if (totals.totalItems > 0) {\n      const totalsHTML = `\n        <div class=\"totals-header\">\n          <h3>Shopping List Totals</h3>\n        </div>\n        <div class=\"totals-grid\">\n          <div class=\"total-item\">\n            <span class=\"label\">Total Carbs:</span>\n            <span class=\"value\">${totals.totalCarbs.toFixed(1)}g</span>\n          </div>\n          <div class=\"total-item\">\n            <span class=\"label\">Total Fat:</span>\n            <span class=\"value\">${totals.totalFat.toFixed(1)}g</span>\n          </div>\n          <div class=\"total-item\">\n            <span class=\"label\">Total Protein:</span>\n            <span class=\"value\">${totals.totalProtein.toFixed(1)}g</span>\n          </div>\n        </div>\n      `;\n      shoppingTotalsContainer.innerHTML = totalsHTML;\n    } else {\n      const emptyTotalsHTML = `\n        <div class=\"totals-header\">\n          <h3>Shopping List Totals</h3>\n        </div>\n        <div class=\"totals-grid\">\n          <div class=\"total-item\">\n            <span class=\"label\">Total Carbs:</span>\n            <span class=\"value\">0.0g</span>\n          </div>\n          <div class=\"total-item\">\n            <span class=\"label\">Total Fat:</span>\n            <span class=\"value\">0.0g</span>\n          </div>\n          <div class=\"total-item\">\n            <span class=\"label\">Total Protein:</span>\n            <span class=\"value\">0.0g</span>\n          </div>\n        </div>\n      `;\n      shoppingTotalsContainer.innerHTML = emptyTotalsHTML;\n    }\n  }\n}\n\n// Calculate totals for shopping list\nfunction calculateTotals(items: any[]): any {\n  const totals = {\n    totalItems: items.reduce((sum, item) => sum + (item.quantity || 0), 0),\n    totalCarbs: 0,\n    totalFat: 0,\n    totalProtein: 0\n  };\n\n  items.forEach(item => {\n    if (item.food) {\n      const quantity = item.quantity || 0;\n      totals.totalCarbs += (parseFloat(item.food.carbs) || 0) * quantity;\n      totals.totalFat += (parseFloat(item.food.fat) || 0) * quantity;\n      totals.totalProtein += (parseFloat(item.food.protein) || 0) * quantity;\n    }\n  });\n\n  return totals;\n}\n\n// Format nutrition values\nfunction formatNutrition(value: any): string {\n  if (value === null || value === undefined || value === '') return '0';\n  const num = parseFloat(value);\n  return isNaN(num) ? '0' : num.toFixed(1);\n}\n\n// Remove item from shopping list\nexport async function removeShoppingItem(id: string): Promise<void> {\n  try {\n    await removeFromShoppingList(id);\n    await loadAndDisplayShoppingList(); // Refresh display\n    \n    // Refresh meal plan checkboxes to reflect changes\n    try {\n      if (typeof (window as any).refreshMealShoppingCheckboxes === 'function') {\n        await (window as any).refreshMealShoppingCheckboxes();\n        console.log('✅ Meal plan checkboxes refreshed after item removal');\n      }\n    } catch (error) {\n      console.warn('⚠️ Could not refresh meal plan checkboxes:', error);\n    }\n    \n    showMessage('Item removed from shopping list', 'success');\n  } catch (error) {\n    console.error('Error removing item:', error);\n    showMessage('Error removing item', 'error');\n  }\n}\n\n// Update item quantity\nexport async function updateItemQuantity(id: string, newQuantity: number): Promise<void> {\n  if (newQuantity < 1) {\n    // Remove item if quantity becomes 0\n    await removeShoppingItem(id);\n    return;\n  }\n\n  try {\n    await updateShoppingListQuantity(id, newQuantity);\n    await loadAndDisplayShoppingList(); // Refresh display\n    \n    // No need to refresh checkboxes for quantity changes - only for add/remove\n    \n  } catch (error) {\n    console.error('Error updating quantity:', error);\n    showMessage('Error updating quantity', 'error');\n  }\n}\n\n// Clear all items from shopping list\nexport async function clearAllShoppingItems(skipDatabase: boolean = false): Promise<void> {\n  console.log('🧹 SHOPPING-LIST: Starting shopping list clear...');\n  \n  try {\n    // Clear from database only if not skipped (to avoid double-clearing)\n    if (!skipDatabase) {\n      const { clearShoppingListFromDatabase } = await import('./database');\n      await clearShoppingListFromDatabase();\n      console.log('✅ Database cleared successfully');\n    } else {\n      console.log('⏭️ Database clear skipped (already done by food-tracker)');\n    }\n    \n    // Clear local array\n    currentShoppingList = [];\n    console.log('✅ Local shopping list array cleared');\n    \n    // Update display\n    displayShoppingList([]);\n    console.log('✅ Display updated');\n    \n    // Refresh meal plan checkboxes to reflect changes\n    try {\n      if (typeof (window as any).refreshMealShoppingCheckboxes === 'function') {\n        await (window as any).refreshMealShoppingCheckboxes();\n        console.log('✅ Meal plan checkboxes refreshed after clearing list');\n      }\n    } catch (error) {\n      console.warn('⚠️ Could not refresh meal plan checkboxes:', error);\n    }\n    \n    if (!skipDatabase) {\n      showMessage('Shopping list cleared', 'success');\n    }\n  } catch (error) {\n    console.error('❌ Error clearing shopping list:', error);\n    if (!skipDatabase) {\n      showMessage('Error clearing shopping list', 'error');\n    }\n  }\n}\n\n// Check if a food item is in the shopping list\nexport function isInShoppingList(foodId: string): boolean {\n  return currentShoppingList.some(item => item.food_id === foodId);\n}\n\n// Get current shopping list (for other modules to access)\nexport function getCurrentShoppingList(): any[] {\n  return currentShoppingList;\n}\n\n// Show message helper\nfunction showMessage(message: string, type: 'success' | 'error' | 'info' = 'success'): void {\n  // Create or update message element\n  let messageEl = document.getElementById('shopping-message');\n  if (!messageEl) {\n    messageEl = document.createElement('div');\n    messageEl.id = 'shopping-message';\n    messageEl.className = 'message';\n    const container = document.getElementById('shopping-list') || document.body;\n    container.insertBefore(messageEl, container.firstChild);\n  }\n  \n  messageEl.textContent = message;\n  messageEl.className = `message ${type}`;\n  messageEl.style.display = 'block';\n  \n  // Hide after 3 seconds\n  setTimeout(() => {\n    if (messageEl) messageEl.style.display = 'none';\n  }, 3000);\n}\n\n// Make functions globally available\ndeclare global {\n  interface Window {\n    removeShoppingItem: (id: string) => Promise<void>;\n    updateItemQuantity: (id: string, newQuantity: number) => Promise<void>;\n    loadAndDisplayShoppingList: () => Promise<void>;\n    printShoppingList: () => void;\n    handleClearShoppingList: () => void;\n  }\n}\n\n// Expose functions globally\n(window as any).removeShoppingItem = removeShoppingItem;\n(window as any).updateItemQuantity = updateItemQuantity;\n(window as any).loadAndDisplayShoppingList = loadAndDisplayShoppingList;\n(window as any).printShoppingList = printShoppingList;\n(window as any).clearAllShoppingItems = clearAllShoppingItems;\n(window as any).getCurrentShoppingList = getCurrentShoppingList;\n// Note: Don't expose handleClearShoppingList here since food-tracker.ts handles the main clear button\n\n// Print shopping list\nexport function printShoppingList(): void {\n  console.log('🖨️ Printing shopping list...');\n  \n  if (!currentShoppingList || currentShoppingList.length === 0) {\n    showMessage('Shopping list is empty - nothing to print!', 'error');\n    return;\n  }\n  \n  // Create a new window for printing\n  const printWindow = window.open('', '_blank');\n  if (!printWindow) {\n    showMessage('Unable to open print window. Please check your browser settings.', 'error');\n    return;\n  }\n  \n  // Generate print content\n  const printContent = generatePrintContent();\n  \n  printWindow.document.write(`\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <title>NutriValor Shopping List</title>\n      <style>\n        body { font-family: Arial, sans-serif; margin: 20px; }\n        h1 { color: #333; }\n        .category { margin-bottom: 20px; }\n        .category h2 { color: #666; border-bottom: 1px solid #ccc; padding-bottom: 5px; }\n        .item { margin: 8px 0; padding: 8px 0; border-bottom: 1px dotted #ddd; display: flex; align-items: flex-start; }\n        .checkbox { font-size: 24px; font-weight: bold; margin-right: 12px; line-height: 1; color: #333; }\n        .item-content { flex: 1; }\n        .item-name { font-weight: bold; margin-bottom: 4px; }\n        .item-details { font-size: 0.9em; color: #666; }\n        .totals { margin-top: 30px; padding: 15px; background: #f5f5f5; border-radius: 5px; }\n        @media print { body { margin: 0; } }\n      </style>\n    </head>\n    <body>\n      ${printContent}\n    </body>\n    </html>\n  `);\n  \n  printWindow.document.close();\n  printWindow.focus();\n  printWindow.print();\n  \n  showMessage('Shopping list opened for printing!', 'success');\n}\n\n// Generate print content\nfunction generatePrintContent(): string {\n  // Consolidate items for printing\n  const consolidatedItems = consolidateItems(currentShoppingList);\n  const totals = calculateTotals(consolidatedItems);\n  const date = new Date().toLocaleDateString();\n  \n  // Group consolidated items by category\n  const itemsByCategory = consolidatedItems.reduce((groups: Record<string, any[]>, item: any) => {\n    const category = item.category || item.brand || 'General';\n    if (!groups[category]) {\n      groups[category] = [];\n    }\n    groups[category].push(item);\n    return groups;\n  }, {} as Record<string, any[]>);\n  \n  // Sort categories with SUNDRIES at the end\n  const categoryOrder = Object.keys(itemsByCategory).sort((a, b) => {\n    if (a === 'SUNDRIES') return 1;\n    if (b === 'SUNDRIES') return -1;\n    return a.localeCompare(b);\n  });\n  \n  let content = `\n    <h1>NutriValor Shopping List</h1>\n    <p><strong>Generated:</strong> ${date}</p>\n    <p><strong>Total Items:</strong> ${totals.totalItems}</p>\n  `;\n  \n  categoryOrder.forEach(category => {\n    const items = itemsByCategory[category];\n    const isSundries = category === 'SUNDRIES';\n    \n    content += `\n      <div class=\"category\">\n        <h2>${category}${isSundries ? ' (From Meal Plans)' : ''}</h2>\n    `;\n    \n    items.forEach(item => {\n      const unitDisplay = item.unit ? (item.quantity > 1 && item.unit.toUpperCase() === 'SLICE' ? 'SLICES' : item.unit) : '';\n      content += `\n        <div class=\"item\">\n          <div class=\"checkbox\">☐</div>\n          <div class=\"item-content\">\n            <div class=\"item-name\">${item.name} (Qty: ${item.quantity} ${unitDisplay})</div>\n            <div class=\"item-details\">\n              Carbs: ${formatNutrition(item.carbs)}g | \n              Fat: ${formatNutrition(item.fat)}g | \n              Protein: ${formatNutrition(item.protein)}g\n              ${item.brand && item.brand !== 'SUNDRIES' ? ` | Brand: ${item.brand}` : ''}\n            </div>\n          </div>\n        </div>\n      `;\n    });\n    \n    content += `</div>`;\n  });\n  \n  content += `\n    <div class=\"totals\">\n      <h2>Totals</h2>\n      <p><strong>Total Carbs:</strong> ${totals.totalCarbs.toFixed(1)}g</p>\n      <p><strong>Total Fat:</strong> ${totals.totalFat.toFixed(1)}g</p>\n      <p><strong>Total Protein:</strong> ${totals.totalProtein.toFixed(1)}g</p>\n    </div>\n  `;\n  \n  return content;\n}\n\n// Handle clear shopping list with confirmation\nexport function handleClearShoppingList(): void {\n  console.log('🗑️ Clear shopping list requested...');\n  \n  if (!currentShoppingList || currentShoppingList.length === 0) {\n    showMessage('Shopping list is already empty!', 'info');\n    return;\n  }\n  \n  const confirmed = confirm(`Are you sure you want to clear all ${currentShoppingList.length} items from your shopping list? This cannot be undone.`);\n  \n  if (confirmed) {\n    clearAllShoppingItems();\n  } else {\n    console.log('🚫 Clear shopping list cancelled by user');\n  }\n}\n ","import { supabase } from './supabase-client';\nimport { showMessage } from '../main';\nimport { displayFoods, allFoods, loadAndDisplayFoods } from './food-tracker';\nimport { displayMeals, allMeals } from './meals';\n\n// Make functions available globally\ndeclare global {\n    interface Window {\n        removeIngredientFromMeal: (index: number) => void;\n        updateIngredientFood: (index: number, foodId: string) => Promise<void>;\n        updateIngredientQuantity: (index: number, value: string) => Promise<void>;\n        updateIngredientUnit: (index: number, newUnit: string) => Promise<void>;\n        updateIngredientNutrient: (index: number, nutrient: string, value: string) => void;\n        updateIngredientInstructions: (index: number, instructions: string) => void;\n        updateServingUnitField: (unitId: string, field: 'name' | 'grams' | 'default', value: string | number | boolean) => void;\n        toggleGramsInput: (unitId: string, unitType: string) => void;\n        loadMealForEdit: (mealId: string) => Promise<void>;\n        addNewIngredient: () => Promise<void>;\n        removeIngredientRow: (button: HTMLButtonElement) => void;\n        addServingUnit: () => void;\n        removeServingUnit: (unitId: string) => void;\n    }\n}\n\n// Current editing state\nlet currentEditingFood: any = null;\nlet currentEditingMeal: any = null;\nexport let currentMealIngredients: any[] = [];\nlet currentFoodImageFile: File | null = null;\nlet currentMealImageFile: File | null = null;\n\n// Serving Units Management\nlet currentServingUnits: any[] = [];\n\n// ===========================================\n// FOOD EDITING FUNCTIONS\n// ===========================================\n\nexport async function openEditFoodModal(): Promise<void> {\n    console.log('🔥 openEditFoodModal called!');\n    \n    const modal = document.getElementById('editFoodModal');\n    console.log('🔍 Modal element found:', !!modal);\n    \n    if (!modal) {\n        console.error('❌ Modal element not found!');\n        return;\n    }\n    \n    // Load all foods into dropdown\n    console.log('📋 Loading foods dropdown...');\n    await loadFoodsDropdown();\n    \n    // Reset form\n    const form = document.getElementById('editFoodForm') as HTMLFormElement;\n    console.log('📝 Form element found:', !!form);\n    \n    if (form) {\n        form.style.display = 'none';\n        form.reset();\n        // Add submit event listener\n        form.onsubmit = saveEditedFood;\n    }\n    \n    // Show modal - using the same approach as openEditMealModal\n    console.log('👁️ Setting modal display...');\n    modal.style.cssText = `\n        display: block;\n        opacity: 1;\n        visibility: visible;\n        background-color: rgba(0, 0, 0, 0.7);\n    `;\n    modal.classList.add('visible');\n    \n    console.log('✅ Modal should now be visible');\n}\n\nexport function closeEditFoodModal() {\n    const modal = document.getElementById('editFoodModal');\n    if (modal) modal.style.display = 'none';\n    currentEditingFood = null;\n}\n\nasync function loadFoodsDropdown() {\n    try {\n        const { data: foods, error } = await supabase\n            .from('foods')\n            .select('*')\n            .order('name');\n\n        if (error) throw error;\n\n        const select = document.getElementById('editFoodSelect') as HTMLSelectElement;\n        if (!select) return;\n\n        select.innerHTML = '<option value=\"\">Choose a food...</option>';\n        \n        if (foods) {\n            foods.forEach(food => {\n                const option = document.createElement('option');\n                option.value = food.id;\n                option.textContent = `${food.name}${food.brand ? ` (${food.brand})` : ''}`;\n                select.appendChild(option);\n            });\n        }\n    } catch (error) {\n        console.error('Error loading foods:', error);\n        showMessage('Error loading foods', 'error');\n    }\n}\n\nexport async function loadFoodForEdit(foodId: string) {\n    const form = document.getElementById('editFoodForm') as HTMLFormElement;\n    if (!form) return;\n\n    if (!foodId) {\n        form.style.display = 'none';\n        return;\n    }\n\n    try {\n        // Load food and its serving units\n        const [foodResult, unitsResult] = await Promise.all([\n            supabase.from('foods').select('*').eq('id', foodId).single(),\n            supabase.from('serving_units').select('*').eq('food_id', foodId)\n        ]);\n\n        if (foodResult.error) throw foodResult.error;\n        if (unitsResult.error) throw unitsResult.error;\n\n        const food = foodResult.data;\n        if (!food) {\n            showMessage('Food not found', 'error');\n            return;\n        }\n\n        currentEditingFood = food;\n        currentFoodImageFile = null;\n        currentServingUnits = unitsResult.data || [];\n\n        // Populate form fields\n        (document.getElementById('editFoodId') as HTMLInputElement).value = food.id;\n        (document.getElementById('editFoodName') as HTMLInputElement).value = food.name || '';\n        (document.getElementById('editFoodBrand') as HTMLInputElement).value = food.brand || '';\n        (document.getElementById('editFoodCategory') as HTMLSelectElement).value = food.category || '';\n        (document.getElementById('editFoodCarbs') as HTMLInputElement).value = food.carbs?.toString() || '0';\n        (document.getElementById('editFoodFat') as HTMLInputElement).value = food.fat?.toString() || '0';\n        (document.getElementById('editFoodProtein') as HTMLInputElement).value = food.protein?.toString() || '0';\n        (document.getElementById('editFoodInstructions') as HTMLTextAreaElement).value = food.instructions || '';\n\n        // Populate serving units\n        const servingUnitsList = document.getElementById('servingUnitsList');\n        if (servingUnitsList) {\n            servingUnitsList.innerHTML = currentServingUnits\n                .map(unit => createServingUnitHtml(\n                    unit.id,\n                    unit.unit_name,\n                    unit.grams_per_unit,\n                    unit.is_default\n                ))\n                .join('');\n        }\n\n        // Handle image preview\n        const imagePreview = document.getElementById('editFoodImagePreview') as HTMLImageElement;\n        const imagePlaceholder = document.getElementById('editFoodImagePlaceholder') as HTMLDivElement;\n        \n        const fileInput = document.getElementById('editFoodImage') as HTMLInputElement;\n        if (fileInput) fileInput.value = '';\n        \n        const existingImageUrl = food.image_url || food.image || food.picture || null;\n        \n        if (existingImageUrl && existingImageUrl.trim() !== '') {\n            imagePreview.src = existingImageUrl;\n            imagePreview.style.display = 'block';\n            imagePlaceholder.style.display = 'none';\n        } else {\n            imagePreview.style.display = 'none';\n            imagePlaceholder.style.display = 'flex';\n        }\n\n        form.style.display = 'block';\n    } catch (error) {\n        console.error('Error loading food:', error);\n        showMessage('Error loading food', 'error');\n    }\n}\n\nfunction createServingUnitHtml(id: string, name: string = '', gramsPerUnit: number = 0, isDefault: boolean = false) {\n    return `\n        <div class=\"serving-unit-item\" data-unit-id=\"${id}\">\n            <select class=\"unit-name\" \n                    name=\"unit_name\"\n                    onchange=\"updateServingUnitField('${id}', 'name', this.value); toggleGramsInput('${id}', this.value)\">\n                <option value=\"\">Select unit type</option>\n                <option value=\"GRAMS\" ${name === 'GRAMS' ? 'selected' : ''}>GRAMS</option>\n                <option value=\"EACH\" ${name === 'EACH' ? 'selected' : ''}>EACH</option>\n                <option value=\"SLICE\" ${name === 'SLICE' ? 'selected' : ''}>SLICE</option>\n            </select>\n            <input type=\"number\" \n                   class=\"grams-per-unit\" \n                   name=\"grams_per_unit\"\n                   value=\"${gramsPerUnit}\" \n                   min=\"0\" \n                   step=\"0.1\" \n                   placeholder=\"Grams per unit\"\n                   ${name === 'EACH' ? 'disabled' : ''}\n                   onchange=\"updateServingUnitField('${id}', 'grams', this.value)\">\n            <div class=\"unit-actions\">\n                <label>\n                    <input type=\"checkbox\" \n                           class=\"default-unit-checkbox\"\n                           name=\"is_default\" \n                           ${isDefault ? 'checked' : ''}\n                           onchange=\"updateServingUnitField('${id}', 'default', this.checked)\">\n                    Default\n                </label>\n                <button type=\"button\" class=\"remove-unit-btn\" onclick=\"removeServingUnit('${id}')\">&times;</button>\n            </div>\n        </div>\n    `;\n}\n\nexport function updateServingUnitField(unitId: string, field: 'name' | 'grams' | 'default', value: string | number | boolean) {\n    const unit = currentServingUnits.find(u => u.id === unitId);\n    if (!unit) {\n        // New unit\n        const gramsPerUnit = field === 'name' ? getGramsPerUnit(value as string) : (field === 'grams' ? value : 0);\n        currentServingUnits.push({\n            id: unitId,\n            unit_name: field === 'name' ? value : '',\n            grams_per_unit: gramsPerUnit,\n            is_default: field === 'default' ? value : false\n        });\n    } else {\n        // Update existing unit\n        if (field === 'name') {\n            unit.unit_name = value;\n            // Set grams_per_unit based on unit type\n            unit.grams_per_unit = getGramsPerUnit(value as string);\n        }\n        else if (field === 'grams') unit.grams_per_unit = value;\n        else if (field === 'default') {\n            // Uncheck other defaults if this one is being checked\n            if (value === true) {\n                currentServingUnits.forEach(u => {\n                    if (u.id !== unitId) u.is_default = false;\n                });\n            }\n            unit.is_default = value;\n        }\n    }\n}\n\n// Helper function to get grams per unit based on unit type\nfunction getGramsPerUnit(unitName: string): number | null {\n    switch (unitName) {\n        case 'GRAMS':\n            return 1.0;\n        case 'EACH':\n            return null; // EACH units don't have grams_per_unit\n        case 'SLICE':\n            return null; // No default - user must specify\n        default:\n            return null;\n    }\n}\n\n// Function to toggle grams input based on unit type\nexport function toggleGramsInput(unitId: string, unitType: string) {\n    const unitElement = document.querySelector(`.serving-unit-item[data-unit-id=\"${unitId}\"]`);\n    if (!unitElement) return;\n    \n    const gramsInput = unitElement.querySelector('.grams-per-unit') as HTMLInputElement;\n    if (!gramsInput) return;\n    \n    if (unitType === 'EACH') {\n        gramsInput.disabled = true;\n        gramsInput.value = '';\n    } else {\n        gramsInput.disabled = false;\n        // Clear the input - user must specify the value\n        gramsInput.value = '';\n    }\n}\n\nexport function removeServingUnit(unitId: string) {\n    const unitElement = document.querySelector(`.serving-unit-item[data-unit-id=\"${unitId}\"]`);\n    if (unitElement) {\n        unitElement.remove();\n        currentServingUnits = currentServingUnits.filter(u => u.id !== unitId);\n    }\n}\n\nexport async function saveEditedFood(event: Event) {\n    event.preventDefault();\n    \n    if (!currentEditingFood) {\n        showMessage('No food selected', 'error');\n        return;\n    }\n\n    try {\n        // Get form data\n        const form = event.target as HTMLFormElement;\n        const formData = new FormData(form);\n        \n        // Update food data\n        const updatedFood = {\n            name: formData.get('name') as string,\n            brand: formData.get('brand') as string,\n            carbs: parseFloat(formData.get('carbs') as string) || 0,\n            fat: parseFloat(formData.get('fat') as string) || 0,\n            protein: parseFloat(formData.get('protein') as string) || 0,\n            instructions: formData.get('instructions') as string,\n            category: formData.get('category') as string\n        };\n\n        // Update food in database\n        const { error: updateError } = await supabase\n            .from('foods')\n            .update(updatedFood)\n            .eq('id', currentEditingFood.id);\n\n        if (updateError) throw updateError;\n\n        // Get all current serving unit IDs to keep\n        const servingUnitsToKeep = Array.from(document.querySelectorAll('.serving-unit-item'))\n            .map(el => el.getAttribute('data-unit-id'))\n            .filter(id => id !== null && /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(id!)) as string[];\n\n        // Delete removed serving units\n        if (servingUnitsToKeep.length > 0) {\n            const { error: deleteError } = await supabase\n                .from('serving_units')\n                .delete()\n                .eq('food_id', currentEditingFood.id)\n                .not('id', 'in', `(${servingUnitsToKeep.join(',')})`);\n\n            if (deleteError) throw deleteError;\n        }\n\n        // Update existing units\n        const existingUnits = document.querySelectorAll('.serving-unit-item[data-unit-id]');\n        for (const unitElement of existingUnits) {\n            const unit = {\n                id: unitElement.getAttribute('data-unit-id'),\n                unit_name: (unitElement.querySelector('select[name=\"unit_name\"]') as HTMLSelectElement)?.value || \n                           (unitElement.querySelector('input[name=\"unit_name\"]') as HTMLInputElement)?.value,\n                grams_per_unit: (unitElement.querySelector('select[name=\"unit_name\"]') as HTMLSelectElement)?.value === 'EACH' ? null : parseFloat((unitElement.querySelector('input[name=\"grams_per_unit\"]') as HTMLInputElement)?.value || '0'),\n                is_default: (unitElement.querySelector('input[name=\"is_default\"]') as HTMLInputElement)?.checked\n            };\n\n            const { error: updateError } = await supabase\n                .from('serving_units')\n                .update({\n                    unit_name: unit.unit_name,\n                    grams_per_unit: unit.grams_per_unit,\n                    is_default: unit.is_default\n                })\n                .eq('id', unit.id);\n\n            if (updateError) throw updateError;\n        }\n\n        // Insert new units\n        const newUnits = Array.from(document.querySelectorAll('.serving-unit-item:not([data-unit-id])'))\n            .map(unitElement => ({\n                food_id: currentEditingFood.id,\n                unit_name: (unitElement.querySelector('select[name=\"unit_name\"]') as HTMLSelectElement)?.value || \n                           (unitElement.querySelector('input[name=\"unit_name\"]') as HTMLInputElement)?.value,\n                grams_per_unit: (unitElement.querySelector('select[name=\"unit_name\"]') as HTMLSelectElement)?.value === 'EACH' ? null : parseFloat((unitElement.querySelector('input[name=\"grams_per_unit\"]') as HTMLInputElement)?.value || '0'),\n                is_default: (unitElement.querySelector('input[name=\"is_default\"]') as HTMLInputElement)?.checked\n            }));\n\n        if (newUnits.length > 0) {\n            const { error: insertError } = await supabase\n                .from('serving_units')\n                .insert(newUnits);\n\n            if (insertError) throw insertError;\n        }\n\n        showMessage('Food updated successfully', 'success');\n        closeEditFoodModal();\n\n        // Refresh food display\n        const { data: foods, error: foodsError } = await supabase\n            .from('foods')\n            .select('*')\n            .order('name');\n            \n        if (foodsError) throw foodsError;\n        if (foods) {\n            displayFoods(foods);\n        }\n\n    } catch (error) {\n        console.error('Error saving food:', error);\n        showMessage('Error saving food', 'error');\n    }\n}\n\nexport async function deleteEditedFood() {\n    if (!currentEditingFood) {\n        showMessage('No food selected', 'error');\n        return;\n    }\n\n    const confirmed = confirm(`Are you sure you want to delete \"${currentEditingFood.name}\"? This cannot be undone.`);\n    if (!confirmed) return;\n\n    try {\n        const { error } = await supabase\n            .from('foods')\n            .delete()\n            .eq('id', currentEditingFood.id);\n\n        if (error) throw error;\n\n        showMessage('Food deleted successfully!', 'success');\n        closeEditFoodModal();\n        \n        // Refresh food list\n        await loadAndDisplayFoods();\n        \n    } catch (error) {\n        console.error('Error deleting food:', error);\n        showMessage('Error deleting food', 'error');\n    }\n}\n\n// ===========================================\n// MEAL EDITING FUNCTIONS\n// ===========================================\n\nexport async function openEditMealModal() {\n    console.log('🔥 openEditMealModal called!');\n    \n    const modal = document.getElementById('editMealModal');\n    console.log('🔍 Meal modal element found:', !!modal);\n    \n    if (!modal) {\n        console.error('❌ Meal modal element not found!');\n        return;\n    }\n\n    try {\n        // First load all foods to ensure we have the data\n        const { data: foods, error: foodsError } = await supabase\n            .from('foods')\n            .select('*')\n            .order('name');\n\n        if (foodsError) throw foodsError;\n\n        // Update allFoods for the ingredient functions to use\n        allFoods.length = 0;\n        allFoods.push(...(foods || []));\n        console.log('📦 Loaded foods:', foods?.length || 0);\n    } catch (error) {\n        console.error('Error loading foods:', error);\n        showMessage('Error loading foods', 'error');\n    }\n    \n    // Load all meals into dropdown\n    console.log('📋 Loading meals dropdown...');\n    await loadMealsDropdown();\n    \n    // Reset form\n    const form = document.getElementById('editMealForm') as HTMLFormElement;\n    console.log('📝 Meal form element found:', !!form);\n    \n    if (form) {\n        form.style.display = 'none';\n        form.reset();\n    }\n    \n    // Show modal - simplified display logic\n    console.log('👁️ Setting meal modal display...');\n    modal.style.cssText = `\n        display: block;\n        opacity: 1;\n        visibility: visible;\n        background-color: rgba(0, 0, 0, 0.7);\n    `;\n    \n    console.log('✅ Meal modal should now be visible');\n}\n\nexport function closeEditMealModal() {\n    const modal = document.getElementById('editMealModal');\n    if (modal) {\n        modal.style.display = 'none';\n        modal.classList.remove('visible');\n    }\n    currentEditingMeal = null;\n    currentMealIngredients = [];\n}\n\nasync function loadMealsDropdown() {\n    try {\n        const { data: meals, error } = await supabase\n            .from('meals')\n            .select('*')\n            .order('name');\n\n        if (error) throw error;\n\n        const select = document.getElementById('editMealSelect') as HTMLSelectElement;\n        if (!select) return;\n\n        select.innerHTML = '<option value=\"\">Choose a meal...</option>';\n        \n        if (meals) {\n            meals.forEach(meal => {\n                const option = document.createElement('option');\n                option.value = meal.id;\n                option.textContent = `${meal.name} (${meal.meal_type || 'Unknown'})`;\n                select.appendChild(option);\n            });\n        }\n    } catch (error) {\n        console.error('Error loading meals:', error);\n        showMessage('Error loading meals', 'error');\n    }\n}\n\n// Helper function to parse quantity from ingredient name\nfunction parseIngredientQuantity(ingredientName: string): { quantity: number, cleanName: string } {\n    // Handle null/undefined/empty values\n    if (!ingredientName) {\n        return {\n            quantity: 1,\n            cleanName: ''\n        };\n    }\n\n    // Convert to lowercase for consistent matching\n    const name = ingredientName.toLowerCase();\n    \n    // Try to match patterns like:\n    // \"5 eggs\"\n    // \"200g ham\"\n    // \"1/2 cup\"\n    const quantityMatch = name.match(/^(\\d+(?:\\/\\d+)?(?:\\.\\d+)?)\\s*(?:g|gram|ml|cup|tbsp|tsp|)?\\s+(.+)$/);\n    \n    if (quantityMatch) {\n        const [_, quantity, rest] = quantityMatch;\n        // Handle fractions like 1/2\n        const numericQuantity = quantity.includes('/') \n            ? eval(quantity) // safely evaluate fraction\n            : parseFloat(quantity);\n            \n        console.log(`Parsed quantity \"${quantity}\" from \"${ingredientName}\" = ${numericQuantity}`);\n        return {\n            quantity: numericQuantity,\n            cleanName: rest.trim()\n        };\n    }\n    \n    console.log(`No quantity found in \"${ingredientName}\", defaulting to 1`);\n    return {\n        quantity: 1,\n        cleanName: name.trim()\n    };\n}\n\nexport async function loadMealForEdit(mealId: string) {\n    console.log('🔥 loadMealForEdit called with mealId:', mealId);\n    \n    if (!mealId) {\n        console.log('❌ No mealId provided, hiding form');\n        const form = document.getElementById('editMealForm') as HTMLFormElement;\n        if (form) {\n            form.style.display = 'none';\n        }\n        return;\n    }\n    \n    try {\n        // Get meal data\n        const { data: meal, error: mealError } = await supabase\n            .from('meals')\n            .select('*')\n            .eq('id', mealId)\n            .single();\n            \n        if (mealError) throw mealError;\n        if (!meal) throw new Error('Meal not found');\n\n        // Set current editing meal\n        currentEditingMeal = meal;\n\n        // Parse ingredients\n        let ingredients;\n        if (typeof meal.ingredients === 'string') {\n            ingredients = JSON.parse(meal.ingredients || '[]');\n        } else {\n            ingredients = meal.ingredients || [];\n        }\n        \n        // Get all foods\n        const { data: foods, error: foodsError } = await supabase\n            .from('foods')\n            .select('*');\n            \n        if (foodsError) throw foodsError;\n\n        // Get all serving units\n        const { data: allServingUnits, error: unitsError } = await supabase\n            .from('serving_units')\n            .select('*');\n            \n        if (unitsError) throw unitsError;\n\n        // Process each ingredient\n        currentMealIngredients = await Promise.all(ingredients.map(async (ing: any) => {\n            const food = foods.find(f => f.id === ing.food_id);\n            if (!food) return ing;\n\n            // Get serving units for this food\n            const foodServingUnits = allServingUnits.filter(u => u.food_id === food.id);\n\n            // Find or create serving unit\n            let servingUnit;\n            if (foodServingUnits.length > 0) {\n                // First try to find the unit that matches the ingredient's unit\n                servingUnit = foodServingUnits.find((u: any) => \n                    u.unit_name.toLowerCase() === (ing.serving_unit || '').toLowerCase()\n                );\n                \n                // If not found, try to find EACH unit\n                if (!servingUnit) {\n                    servingUnit = foodServingUnits.find(u => u.unit_name.toUpperCase() === 'EACH');\n                }\n                \n                // If still not found, use default unit\n                if (!servingUnit) {\n                    servingUnit = foodServingUnits.find(u => u.is_default) || foodServingUnits[0];\n                }\n            }\n\n            // If no serving unit found, create a default one\n            if (!servingUnit) {\n                servingUnit = {\n                    unit_name: 'g',\n                    grams_per_unit: 1,\n                    is_default: true\n                };\n            }\n\n            // Calculate macros based on serving unit and quantity\n            const quantity = ing.quantity || 1;\n            const unitName = servingUnit.unit_name.toLowerCase();\n            let carbs, fat, protein;\n\n            if (unitName === 'each') {\n                // For EACH units, food values are already per unit, just multiply by quantity\n                carbs = Math.round((food.carbs * quantity) * 10) / 10;\n                fat = Math.round((food.fat * quantity) * 10) / 10;\n                protein = Math.round((food.protein * quantity) * 10) / 10;\n\n                console.log(`[NutrientCalc] EACH unit calculation:`, {\n                    baseValues: { carbs: food.carbs, fat: food.fat, protein: food.protein },\n                    quantity,\n                    result: { carbs, fat, protein }\n                });\n            } else {\n                // For all other units (including SLICE), use grams calculation\n                const totalGrams = servingUnit.grams_per_unit * quantity;\n                const factor = totalGrams / 100;\n                carbs = Math.round((food.carbs * factor) * 10) / 10;\n                fat = Math.round((food.fat * factor) * 10) / 10;\n                protein = Math.round((food.protein * factor) * 10) / 10;\n\n                console.log(`[NutrientCalc] Weight-based calculation:`, {\n                    baseValues: { carbs: food.carbs, fat: food.fat, protein: food.protein },\n                    totalGrams,\n                    factor,\n                    result: { carbs, fat, protein }\n                });\n            }\n\n            return {\n                ...ing,\n                food_id: food.id,\n                food_name: food.name,\n                serving_unit: servingUnit.unit_name,\n                serving_units: foodServingUnits || [], // Store all available units\n                carbs,\n                fat,\n                protein,\n                quantity\n            };\n        }));\n\n        // Show the form\n        const form = document.getElementById('editMealForm') as HTMLFormElement;\n        if (form) {\n            form.style.display = 'block';\n            console.log('✅ Form displayed successfully');\n        } else {\n            console.error('❌ Form element not found!');\n        }\n\n        // Update form fields\n        const nameInput = document.getElementById('editMealName') as HTMLInputElement;\n        const typeSelect = document.getElementById('editMealType') as HTMLSelectElement;\n        const instructionsInput = document.getElementById('editMealInstructions') as HTMLTextAreaElement;\n        \n        if (nameInput) nameInput.value = meal.name || '';\n        if (typeSelect) typeSelect.value = meal.meal_type || '';\n        if (instructionsInput) instructionsInput.value = meal.cooking_instructions || '';\n\n        // Render ingredients\n        await renderMealIngredients();\n        \n        console.log('✅ Meal loaded successfully:', meal.name);\n\n    } catch (error) {\n        console.error('❌ Error loading meal for edit:', error);\n        showMessage('Error loading meal', 'error');\n    }\n}\n\nasync function renderMealIngredients() {\n    const container = document.getElementById('editMealIngredients');\n    if (!container) return;\n\n    container.innerHTML = '';\n\n    try {\n        currentMealIngredients.forEach((ingredient, index) => {\n            const div = document.createElement('div');\n            div.className = 'ingredient-edit-row';\n\n            // Food selection dropdown\n            let foodSelectHtml = `<select class=\"food-select\" onchange=\"updateIngredientFood(${index}, this.value)\"><option value=\"\">Select a food...</option>`;\n            const foodsByCategory = allFoods.reduce((acc, food) => {\n                const category = food.category || 'Other';\n                if (!acc[category]) acc[category] = [];\n                acc[category].push(food);\n                return acc;\n            }, {} as Record<string, any[]>);\n\n            for (const category in foodsByCategory) {\n                foodSelectHtml += `<optgroup label=\"${category}\">`;\n                foodSelectHtml += foodsByCategory[category].map(food => \n                    `<option value=\"${food.id}\" ${ingredient.food_id === food.id ? 'selected' : ''}>${food.name}</option>`\n                ).join('');\n                foodSelectHtml += `</optgroup>`;\n            }\n            foodSelectHtml += `</select>`;\n\n            // Quantity and Unit inputs\n            let unitsHtml = `<select class=\"unit-select\" onchange=\"updateIngredientUnit(${index}, this.value)\" ${ingredient.serving_units?.length ? '' : 'disabled'}>`;\n            if (ingredient.serving_units?.length) {\n                unitsHtml += ingredient.serving_units.map((unit: any) => \n                    `<option value=\"${unit.unit_name}\" ${ingredient.serving_unit === unit.unit_name ? 'selected' : ''}>${unit.unit_name}</option>`\n                ).join('');\n            } else {\n                unitsHtml += '<option>g</option>';\n            }\n            unitsHtml += '</select>';\n\n            const quantityInputHtml = `<input type=\"number\" class=\"quantity-input\" value=\"${ingredient.quantity || 1}\" onchange=\"updateIngredientQuantity(${index}, this.value)\" min=\"0\">`;\n\n            // Nutrient display\n            let carbs = ingredient.carbs || 0;\n            let fat = ingredient.fat || 0;\n            let protein = ingredient.protein || 0;\n\n            div.innerHTML = `\n                <div class=\"ingredient-main-controls\">\n                    ${foodSelectHtml}\n                    <div class=\"ingredient-quant-controls\">\n                        ${quantityInputHtml}\n                        ${unitsHtml}\n                    </div>\n                    <button class=\"remove-ingredient-btn\" onclick=\"removeIngredientFromMeal(${index})\">&times;</button>\n                </div>\n                <div class=\"ingredient-details\">\n                    <div class=\"nutrient-tags\">\n                        <span class=\"nutrient-tag carbs\">${carbs.toFixed(1)}g C</span>\n                        <span class=\"nutrient-tag fat\">${fat.toFixed(1)}g F</span>\n                        <span class=\"nutrient-tag protein\">${protein.toFixed(1)}g P</span>\n                    </div>\n                </div>\n            `;\n\n            container.appendChild(div);\n        });\n    } catch (error) {\n        console.error('Error rendering ingredients:', error);\n        showMessage('Error rendering ingredients', 'error');\n    }\n}\n\nexport async function addIngredientToMeal() {\n    try {\n        // Make sure we have foods loaded\n        if (allFoods.length === 0) {\n            const { data: foods, error: foodsError } = await supabase\n                .from('foods')\n                .select('*')\n                .order('name');\n\n            if (foodsError) throw foodsError;\n            allFoods.push(...(foods || []));\n            console.log('📦 Loaded foods for new ingredient:', foods?.length || 0);\n        }\n\n        const newIngredient = {\n            food_id: '',\n            food_name: '',\n            quantity: 1,\n            carbs: 0,\n            fat: 0,\n            protein: 0,\n            instructions: ''\n        };\n        currentMealIngredients.push(newIngredient);\n        await renderMealIngredients();\n    } catch (error) {\n        console.error('Error adding ingredient:', error);\n        showMessage('Error adding ingredient', 'error');\n    }\n}\n\nexport function removeIngredientFromMeal(index: number) {\n    currentMealIngredients.splice(index, 1);\n    renderMealIngredients();\n}\n\nexport async function updateIngredientFood(index: number, foodId: string) {\n    if (!currentMealIngredients[index]) return;\n    \n    try {\n        const food = allFoods.find(f => f.id === foodId);\n        if (!food) {\n            console.warn(`Food not found: ${foodId}`);\n            return;\n        }\n\n        // Get serving units for this food\n        const { data: servingUnits } = await supabase\n            .from('serving_units')\n            .select('*')\n            .eq('food_id', foodId);\n\n        // Find or create serving unit\n        let servingUnit;\n        if (servingUnits && servingUnits.length > 0) {\n            // First try to find EACH unit\n            servingUnit = servingUnits.find(u => u.unit_name.toUpperCase() === 'EACH');\n            \n            // If not found, use default unit\n            if (!servingUnit) {\n                servingUnit = servingUnits.find(u => u.is_default) || servingUnits[0];\n            }\n        } else {\n            // Create default unit (grams)\n            servingUnit = {\n                unit_name: 'g',\n                grams_per_unit: 1,\n                is_default: true\n            };\n        }\n\n        const quantity = currentMealIngredients[index].quantity || 1;\n        const unitName = servingUnit.unit_name.toLowerCase();\n        let carbs, fat, protein;\n\n        if (unitName === 'each') {\n            // For EACH units, food values are already per unit, just multiply by quantity\n            carbs = Math.round((food.carbs * quantity) * 10) / 10;\n            fat = Math.round((food.fat * quantity) * 10) / 10;\n            protein = Math.round((food.protein * quantity) * 10) / 10;\n\n            console.log(`[NutrientCalc] EACH unit calculation for ${food.name}:`, {\n                baseValues: { carbs: food.carbs, fat: food.fat, protein: food.protein },\n                quantity,\n                result: { carbs, fat, protein }\n            });\n        } else {\n            // For all other units (including SLICE), use grams calculation\n            const totalGrams = servingUnit.grams_per_unit * quantity;\n            const factor = totalGrams / 100;\n            carbs = Math.round((food.carbs * factor) * 10) / 10;\n            fat = Math.round((food.fat * factor) * 10) / 10;\n            protein = Math.round((food.protein * factor) * 10) / 10;\n\n            console.log(`[NutrientCalc] Weight-based calculation for ${food.name}:`, {\n                baseValues: { carbs: food.carbs, fat: food.fat, protein: food.protein },\n                totalGrams,\n                factor,\n                result: { carbs, fat, protein }\n            });\n        }\n\n        currentMealIngredients[index] = {\n            ...currentMealIngredients[index],\n            food_id: food.id,\n            food_name: food.name,\n            serving_unit: servingUnit.unit_name,\n            serving_units: servingUnits || [], // Store all available units\n            carbs,\n            fat,\n            protein,\n            quantity\n        };\n\n        console.log(`📊 Updated ingredient:`, currentMealIngredients[index]);\n        \n        await reRenderIngredients();\n    } catch (error) {\n        console.error('Error updating ingredient food:', error);\n        showMessage('Error updating food', 'error');\n    }\n}\n\nexport async function updateIngredientQuantity(index: number, value: string) {\n    if (!currentMealIngredients[index]) return;\n    try {\n        const ingredient = currentMealIngredients[index];\n        ingredient.quantity = parseFloat(value) || 0;\n        \n        const food = allFoods.find(f => f.id === ingredient.food_id);\n        \n        if (!food || !ingredient.serving_units || ingredient.serving_units.length === 0) {\n            await reRenderIngredients();\n            return;\n        }\n\n        const servingUnit = ingredient.serving_units.find((u: any) => u.unit_name === ingredient.serving_unit);\n\n        if (!servingUnit) {\n            console.warn(`Unit ${ingredient.serving_unit} not found for recalculation`);\n            await reRenderIngredients();\n            return;\n        }\n        \n        // --- Start Debug Logging ---\n        console.group(`[Debug] Nutrient Calculation for: ${food.name}`);\n        console.log(`Input Quantity: ${ingredient.quantity}`);\n        console.log(`Selected Unit: '${servingUnit.unit_name}' (Grams per unit: ${servingUnit.grams_per_unit})`);\n        console.log(`Base Nutrients (per 100g): C=${food.carbs}, F=${food.fat}, P=${food.protein}`);\n        // --- End Debug Logging ---\n\n        const unitName = (servingUnit.unit_name || '').toLowerCase();\n        let carbs, fat, protein;\n\n        if (unitName === 'each') {\n            // For EACH units, food values are already per unit, just multiply by quantity\n            carbs = Math.round((food.carbs * ingredient.quantity) * 10) / 10;\n            fat = Math.round((food.fat * ingredient.quantity) * 10) / 10;\n            protein = Math.round((food.protein * ingredient.quantity) * 10) / 10;\n\n            console.log(`[NutrientCalc] EACH unit calculation for ${food.name}:`, {\n                baseValues: { carbs: food.carbs, fat: food.fat, protein: food.protein },\n                quantity: ingredient.quantity,\n                result: { carbs, fat, protein }\n            });\n        } else {\n            // For all other units (including SLICE), use grams calculation\n            const totalGrams = servingUnit.grams_per_unit * ingredient.quantity;\n            const factor = totalGrams / 100;\n            carbs = Math.round((food.carbs * factor) * 10) / 10;\n            fat = Math.round((food.fat * factor) * 10) / 10;\n            protein = Math.round((food.protein * factor) * 10) / 10;\n\n            console.log(`[NutrientCalc] Weight-based calculation for ${food.name}:`, {\n                baseValues: { carbs: food.carbs, fat: food.fat, protein: food.protein },\n                totalGrams,\n                factor,\n                result: { carbs, fat, protein }\n            });\n        }\n        ingredient.carbs = carbs;\n        ingredient.fat = fat;\n        ingredient.protein = protein;\n        \n        console.log(`Result -> Final Nutrients: C=${ingredient.carbs}, F=${ingredient.fat}, P=${ingredient.protein}`);\n        console.groupEnd();\n        \n        await reRenderIngredients();\n    } catch (error) {\n        console.error('Error updating ingredient quantity:', error);\n        showMessage('Error updating ingredient', 'error');\n    }\n}\n\nexport async function updateIngredientUnit(index: number, newUnit: string) {\n    if (!currentMealIngredients[index]) return;\n    \n    try {\n        const ingredient = currentMealIngredients[index];\n        const food = allFoods.find(f => f.id === ingredient.food_id);\n        \n        if (!food || !ingredient.serving_units || ingredient.serving_units.length === 0) {\n            await reRenderIngredients();\n            return;\n        }\n\n        const servingUnit = ingredient.serving_units.find((u: any) => u.unit_name === newUnit);\n\n        if (!servingUnit) {\n            console.warn(`Unit ${newUnit} not found for recalculation`);\n            await reRenderIngredients();\n            return;\n        }\n        \n        // Update serving unit\n        ingredient.serving_unit = newUnit;\n        \n        // Calculate macros based on serving unit and quantity\n        const unitName = newUnit.toLowerCase();\n        console.log(`[NutrientCalc] Ingredient: ${food.name}, Unit: '${newUnit}', Quantity: ${ingredient.quantity}`);\n        let carbs, fat, protein;\n\n        if (unitName === 'each') {\n            // For EACH units, food values are already per unit, just multiply by quantity\n            carbs = Math.round((food.carbs * ingredient.quantity) * 10) / 10;\n            fat = Math.round((food.fat * ingredient.quantity) * 10) / 10;\n            protein = Math.round((food.protein * ingredient.quantity) * 10) / 10;\n\n            console.log(`[NutrientCalc] EACH unit calculation:`, {\n                baseValues: { carbs: food.carbs, fat: food.fat, protein: food.protein },\n                quantity: ingredient.quantity,\n                result: { carbs, fat, protein }\n            });\n        } else {\n            // For all other units (including SLICE), use grams calculation\n            const totalGrams = servingUnit.grams_per_unit * ingredient.quantity;\n            const factor = totalGrams / 100;\n            carbs = Math.round((food.carbs * factor) * 10) / 10;\n            fat = Math.round((food.fat * factor) * 10) / 10;\n            protein = Math.round((food.protein * factor) * 10) / 10;\n\n            console.log(`[NutrientCalc] Weight-based calculation:`, {\n                baseValues: { carbs: food.carbs, fat: food.fat, protein: food.protein },\n                totalGrams,\n                factor,\n                result: { carbs, fat, protein }\n            });\n        }\n\n        ingredient.carbs = carbs;\n        ingredient.fat = fat;\n        ingredient.protein = protein;\n        \n        console.log(`Result -> Final Nutrients: C=${ingredient.carbs}, F=${ingredient.fat}, P=${ingredient.protein}`);\n        \n        await reRenderIngredients();\n    } catch (error) {\n        console.error('Error updating ingredient unit:', error);\n        showMessage('Error updating unit', 'error');\n    }\n}\n\nexport function updateIngredientNutrient(index: number, nutrient: string, value: string) {\n    if (!currentMealIngredients[index]) return;\n    currentMealIngredients[index][nutrient] = parseFloat(value) || 0;\n}\n\nexport function updateIngredientInstructions(index: number, instructions: string) {\n    if (!currentMealIngredients[index]) return;\n    currentMealIngredients[index].instructions = instructions;\n}\n\nexport async function saveEditedMeal(event: Event) {\n    console.log('🔥 saveEditedMeal called!', { event });\n    event.preventDefault();\n    \n    if (!currentEditingMeal) {\n        console.error('❌ No meal selected for editing');\n        showMessage('No meal selected', 'error');\n        return;\n    }\n\n    // Validate ingredients\n    if (!currentMealIngredients || currentMealIngredients.length === 0) {\n        console.error('❌ No ingredients to save');\n        showMessage('Cannot save meal without ingredients', 'error');\n        return;\n    }\n\n    console.log('📦 Current meal data:', {\n        currentEditingMeal,\n        currentMealIngredients,\n        currentMealImageFile\n    });\n\n    try {\n        let imageUrl = currentEditingMeal.image_url;\n        let picture = currentEditingMeal.picture;\n\n        // Upload new image if one was selected\n        if (currentMealImageFile) {\n            console.log('🖼️ Uploading new image:', currentMealImageFile);\n            const fileExt = currentMealImageFile.name.split('.').pop();\n            const fileName = `meal_${currentEditingMeal.id}_${Date.now()}.${fileExt}`;\n            \n            const { error: uploadError } = await supabase.storage\n                .from('meal-images')\n                .upload(fileName, currentMealImageFile);\n\n            if (uploadError) throw uploadError;\n\n            const { data: { publicUrl } } = supabase.storage\n                .from('meal-images')\n                .getPublicUrl(fileName);\n\n            imageUrl = publicUrl;\n            picture = fileName;\n            console.log('✅ Image uploaded:', { imageUrl, picture });\n        }\n\n        // Get form values\n        const name = (document.getElementById('editMealName') as HTMLInputElement).value;\n        const mealType = (document.getElementById('editMealType') as HTMLSelectElement).value;\n        const instructions = (document.getElementById('editMealInstructions') as HTMLTextAreaElement).value;\n\n        console.log('📝 Form values:', { name, mealType, instructions });\n\n        // Calculate totals\n        let totalCarbs = 0;\n        let totalFat = 0;\n        let totalProtein = 0;\n\n        // Load serving units for all foods\n        const { data: servingUnits, error: unitsError } = await supabase\n            .from('serving_units')\n            .select('*');\n\n        if (unitsError) throw unitsError;\n\n        console.log('📏 Loaded serving units:', servingUnits?.length || 0);\n\n        // Prepare ingredients with proper serving units and macros\n        const ingredientsToSave = await Promise.all(currentMealIngredients.map(async (ing) => {\n            // Get food details\n            const { data: food } = await supabase\n                .from('foods')\n                .select('*')\n                .eq('id', ing.food_id)\n                .single();\n\n            if (!food) {\n                console.warn(`⚠️ Food not found for ingredient: ${ing.food_name}`);\n                return ing;\n            }\n\n            // Get serving unit for this food\n            let servingUnit = servingUnits?.find(u => \n                u.food_id === food.id && \n                (u.unit_name.toLowerCase() === (ing.serving_unit || '').toLowerCase() || u.is_default)\n            );\n\n            // If no serving unit found, create a default one (1g per unit)\n            if (!servingUnit) {\n                console.log(`ℹ️ Using default serving unit for ${food.name}`);\n                servingUnit = {\n                    unit_name: 'g',\n                    grams_per_unit: 1,\n                    is_default: true\n                };\n            }\n\n            // Calculate macros based on serving unit and quantity\n            let carbs, fat, protein;\n            if (servingUnit.unit_name.toUpperCase() === 'EACH') {\n                // For EACH units, food values are already per unit, just multiply by quantity\n                carbs = Math.round((food.carbs * ing.quantity) * 100) / 100;\n                fat = Math.round((food.fat * ing.quantity) * 100) / 100;\n                protein = Math.round((food.protein * ing.quantity) * 100) / 100;\n                \n                console.log(`📊 Calculating macros for ${food.name} (EACH):`, {\n                    quantity: ing.quantity,\n                    carbs,\n                    fat,\n                    protein\n                });\n            } else {\n                // For weight-based units, calculate using grams\n                const totalGrams = servingUnit.grams_per_unit * ing.quantity;\n                const factor = totalGrams / 100; // Convert from per 100g to actual grams\n\n                console.log(`📊 Calculating macros for ${food.name} (weight-based):`, {\n                    quantity: ing.quantity,\n                    servingUnit: servingUnit.unit_name,\n                    gramsPerUnit: servingUnit.grams_per_unit,\n                    totalGrams,\n                    factor\n                });\n\n                carbs = Math.round((food.carbs * factor) * 100) / 100;\n                fat = Math.round((food.fat * factor) * 100) / 100;\n                protein = Math.round((food.protein * factor) * 100) / 100;\n            }\n\n            // Add to totals\n            totalCarbs += carbs;\n            totalFat += fat;\n            totalProtein += protein;\n\n            return {\n                food_id: food.id,\n                food_name: food.name,\n                quantity: ing.quantity,\n                serving_unit: servingUnit.unit_name,\n                instructions: ing.instructions || '',\n                carbs,\n                fat,\n                protein\n            };\n        }));\n\n        console.log('📦 Saving meal with ingredients:', ingredientsToSave);\n        console.log('📊 Calculated totals:', { totalCarbs, totalFat, totalProtein });\n\n        // Update meal in database\n        const { error } = await supabase\n            .from('meals')\n            .update({\n                name,\n                meal_type: mealType,\n                cooking_instructions: instructions || null,\n                ingredients: JSON.stringify(ingredientsToSave),\n                total_carbs: Math.round(totalCarbs * 100) / 100,\n                total_fat: Math.round(totalFat * 100) / 100,\n                total_protein: Math.round(totalProtein * 100) / 100,\n                image_url: imageUrl,\n                picture,\n                updated_at: new Date().toISOString()\n            })\n            .eq('id', currentEditingMeal.id);\n\n        if (error) throw error;\n\n        console.log('✅ Meal saved successfully!');\n        showMessage('Meal saved successfully!', 'success');\n        closeEditMealModal();\n\n        // Refresh meals dropdown and display\n        await loadMealsDropdown();\n        await displayMeals(allMeals);\n\n    } catch (error) {\n        console.error('❌ Error saving meal:', error);\n        showMessage('Error saving meal', 'error');\n    }\n}\n\nexport async function deleteEditedMeal() {\n    if (!currentEditingMeal) {\n        showMessage('No meal selected', 'error');\n        return;\n    }\n\n    const confirmed = confirm(`Are you sure you want to delete \"${currentEditingMeal.name}\"? This cannot be undone.`);\n    if (!confirmed) return;\n\n    try {\n        const { error } = await supabase\n            .from('meals')\n            .delete()\n            .eq('id', currentEditingMeal.id);\n\n        if (error) throw error;\n\n        showMessage('Meal deleted successfully!', 'success');\n        closeEditMealModal();\n        \n        // Refresh meal list\n        await displayMeals(allMeals);\n        \n    } catch (error) {\n        console.error('Error deleting meal:', error);\n        showMessage('Error deleting meal', 'error');\n    }\n}\n\n// Image handling functions\nexport function previewFoodImage(input: HTMLInputElement) {\n    if (input.files && input.files[0]) {\n        currentFoodImageFile = input.files[0];\n        \n        const reader = new FileReader();\n        reader.onload = function(e) {\n            const imagePreview = document.getElementById('editFoodImagePreview') as HTMLImageElement;\n            const imagePlaceholder = document.getElementById('editFoodImagePlaceholder') as HTMLDivElement;\n            \n            if (e.target?.result) {\n                imagePreview.src = e.target.result as string;\n                imagePreview.style.display = 'block';\n                imagePlaceholder.style.display = 'none';\n            }\n        };\n        reader.readAsDataURL(currentFoodImageFile);\n    }\n}\n\nexport function removeFoodImage() {\n    currentFoodImageFile = null;\n    const imagePreview = document.getElementById('editFoodImagePreview') as HTMLImageElement;\n    const imagePlaceholder = document.getElementById('editFoodImagePlaceholder') as HTMLDivElement;\n    const fileInput = document.getElementById('editFoodImage') as HTMLInputElement;\n    \n    imagePreview.style.display = 'none';\n    imagePlaceholder.style.display = 'flex';\n    fileInput.value = '';\n    \n    // If editing existing food, mark image for removal\n    if (currentEditingFood) {\n        currentEditingFood.image_url = null;\n        currentEditingFood.image = null;\n        currentEditingFood.picture = null;\n    }\n    \n    console.log('Food image marked for removal');\n}\n\nexport function previewMealImage(input: HTMLInputElement) {\n    const file = input.files?.[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    const imagePreview = document.getElementById('editMealImagePreview') as HTMLImageElement;\n    const imagePlaceholder = document.getElementById('editMealImagePlaceholder') as HTMLDivElement;\n\n    reader.onload = (e) => {\n        if (e.target?.result && imagePreview && imagePlaceholder) {\n            imagePreview.src = e.target.result as string;\n            imagePreview.style.display = 'block';\n            imagePlaceholder.style.display = 'none';\n            currentMealImageFile = file;\n        }\n    };\n\n    reader.readAsDataURL(file);\n}\n\nexport function removeMealImage() {\n    const imagePreview = document.getElementById('editMealImagePreview') as HTMLImageElement;\n    const imagePlaceholder = document.getElementById('editMealImagePlaceholder') as HTMLDivElement;\n    const fileInput = document.getElementById('editMealImage') as HTMLInputElement;\n\n    if (imagePreview && imagePlaceholder && fileInput) {\n        imagePreview.src = '';\n        imagePreview.style.display = 'none';\n        imagePlaceholder.style.display = 'flex';\n        fileInput.value = '';\n        currentMealImageFile = null;\n    }\n}\n\nexport function addServingUnit() {\n    const servingUnitsList = document.getElementById('servingUnitsList');\n    if (!servingUnitsList) return;\n\n    const unitId = Date.now().toString(); // Temporary ID for new units\n    const unitHtml = createServingUnitHtml(unitId);\n    servingUnitsList.insertAdjacentHTML('beforeend', unitHtml);\n}\n\n// Function to remove an ingredient row\nexport function removeIngredientRow(button: HTMLButtonElement): void {\n    const row = button.closest('.ingredient-row');\n    if (!row) return;\n\n    // Find the index of the ingredient to remove\n    const container = document.getElementById('editMealIngredients');\n    if (!container) return;\n\n    const rows = Array.from(container.querySelectorAll('.ingredient-row'));\n    const index = rows.indexOf(row);\n    if (index === -1) return;\n\n    // Remove the ingredient from the array and re-render\n    currentMealIngredients.splice(index, 1);\n    renderMealIngredients();\n}\n\n// Function to add a new ingredient row\nexport async function addNewIngredient() {\n    try {\n        // Make sure we have foods loaded\n        if (allFoods.length === 0) {\n            const { data: foods, error: foodsError } = await supabase\n                .from('foods')\n                .select('*')\n                .order('name');\n\n            if (foodsError) throw foodsError;\n            allFoods.push(...(foods || []));\n            console.log('📦 Loaded foods for new ingredient:', foods?.length || 0);\n        }\n\n        const newIngredient = {\n            food_id: '',\n            food_name: '',\n            quantity: 1,\n            carbs: 0,\n            fat: 0,\n            protein: 0,\n            instructions: ''\n        };\n        currentMealIngredients.push(newIngredient);\n        await renderMealIngredients();\n    } catch (error) {\n        console.error('Error adding ingredient:', error);\n        showMessage('Error adding ingredient', 'error');\n    }\n}\n\n// Helper for Create Meal form\nasync function renderMealIngredientsForCreate() {\n    const container = document.getElementById('ingredientsList');\n    if (!container) return;\n    container.innerHTML = '';\n    try {\n        currentMealIngredients.forEach((ingredient, index) => {\n            const div = document.createElement('div');\n            div.className = 'ingredient-edit-row';\n\n            // Food selection dropdown\n            let foodSelectHtml = `<select class=\"food-select\" onchange=\"updateIngredientFood(${index}, this.value)\"><option value=\"\">Select a food...</option>`;\n            const foodsByCategory = allFoods.reduce((acc, food) => {\n                const category = food.category || 'Other';\n                if (!acc[category]) acc[category] = [];\n                acc[category].push(food);\n                return acc;\n            }, {} as Record<string, any[]>);\n\n            for (const category in foodsByCategory) {\n                foodSelectHtml += `<optgroup label=\"${category}\">`;\n                foodSelectHtml += foodsByCategory[category].map(food => \n                    `<option value=\"${food.id}\" ${ingredient.food_id === food.id ? 'selected' : ''}>${food.name}</option>`\n                ).join('');\n                foodSelectHtml += `</optgroup>`;\n            }\n            foodSelectHtml += `</select>`;\n\n            // Quantity and Unit inputs\n            let unitsHtml = '<select class=\"unit-select\" onchange=\"updateIngredientUnit('+index+', this.value)\" ' + (ingredient.serving_units?.length ? '' : 'disabled') + '>';\n            if (ingredient.serving_units?.length) {\n                unitsHtml += ingredient.serving_units.map((unit: any) => `<option value=\"${unit.unit_name}\" ${ingredient.serving_unit === unit.unit_name ? 'selected' : ''}>${unit.unit_name}</option>`).join('');\n            } else {\n                unitsHtml += '<option>g</option>';\n            }\n            unitsHtml += '</select>';\n\n            const quantityInputHtml = `<input type=\"number\" class=\"quantity-input\" value=\"${ingredient.quantity || 1}\" onchange=\"updateIngredientQuantity(${index}, this.value)\" min=\"0\">`;\n\n            // Nutrient display\n            let carbs = ingredient.carbs || 0;\n            let fat = ingredient.fat || 0;\n            let protein = ingredient.protein || 0;\n            const unitName = (ingredient.serving_unit || '').toLowerCase();\n            const quantity = ingredient.quantity || 1;\n            if (unitName === \"each\") {\n                // For EACH units, multiply by quantity since values are per unit\n                carbs = carbs * quantity;\n                fat = fat * quantity;\n                protein = protein * quantity;\n            }\n            // Note: SLICE units are already calculated correctly in the food details\n            const nutrientsHtml = `\n                <div class=\"nutrient-tags\">\n                    <span class=\"nutrient-tag carbs\">${carbs.toFixed(1)}g C</span>\n                    <span class=\"nutrient-tag fat\">${fat.toFixed(1)}g F</span>\n                    <span class=\"nutrient-tag protein\">${protein.toFixed(1)}g P</span>\n                </div>`;\n            \n            // Remove button\n            const removeButtonHtml = `<button class=\"remove-ingredient-btn\" onclick=\"removeIngredientFromMeal(${index})\">&times;</button>`;\n            \n            div.innerHTML = `\n                <div class=\"ingredient-main-controls\">\n                  ${foodSelectHtml}\n                  <div class=\"ingredient-quant-controls\">\n                    ${quantityInputHtml}\n                    ${unitsHtml}\n                  </div>\n                </div>\n                ${nutrientsHtml}\n                ${removeButtonHtml}\n            `;\n            container.appendChild(div);\n        });\n    } catch(e) {\n        console.error(\"Failed to render ingredients for create form\", e);\n        container.innerHTML = \"Error rendering ingredients\";\n    }\n}\n\nasync function reRenderIngredients() {\n    const createContainer = document.getElementById('ingredientsList');\n    const editContainer = document.getElementById('editMealIngredients');\n    if (createContainer) {\n        await renderMealIngredientsForCreate();\n    } else if (editContainer) {\n        await renderMealIngredients();\n    }\n}\n\n\n\n// Assign functions to window object\nwindow.removeIngredientFromMeal = removeIngredientFromMeal;\nwindow.updateIngredientFood = updateIngredientFood;\nwindow.updateIngredientQuantity = updateIngredientQuantity;\nwindow.updateIngredientUnit = updateIngredientUnit;\nwindow.updateIngredientNutrient = updateIngredientNutrient;\nwindow.updateIngredientInstructions = updateIngredientInstructions;\nwindow.updateServingUnitField = updateServingUnitField;\nwindow.toggleGramsInput = toggleGramsInput;\nwindow.loadMealForEdit = loadMealForEdit;\nwindow.addNewIngredient = addNewIngredient;\nwindow.removeIngredientRow = removeIngredientRow;\nwindow.addServingUnit = addServingUnit;\nwindow.removeServingUnit = removeServingUnit;","import './styles/main.css';\nimport { initializeSupabase } from './js/supabase-client';\nimport { initializeAuth } from './js/auth';\nimport { initializeDatabase, saveProfileToDatabase, loadProfileFromDatabase } from './js/database';\nimport { initializeFoodTracker } from './js/food-tracker';\nimport { initializeWeightTracker } from './js/weight-tracker';\nimport { initializeMacroCalculator } from './js/macro-calculator';\nimport { initializeMeals, reloadMeals } from './js/meals';\nimport { initializeShoppingList } from './js/shopping-list';\nimport './js/simple-edit';\nimport { demoBaconAndEggs } from './js/demo-meal-calc';\n\n// Declare global window functions\ndeclare global {\n  interface Window {\n    openEditFoodModal: () => Promise<void>;\n    closeEditFoodModal: () => void;\n    loadFoodForEdit: (foodId: string) => Promise<void>;\n    saveEditedFood: (event: Event) => Promise<void>;\n    deleteEditedFood: () => Promise<void>;\n    previewFoodImage: (input: HTMLInputElement) => void;\n    removeFoodImage: () => void;\n    openEditMealModal: () => Promise<void>;\n    closeEditMealModal: () => void;\n    loadMealForEdit: (mealId: string) => Promise<void>;\n    saveEditedMeal: (event: Event) => Promise<void>;\n    deleteEditedMeal: () => Promise<void>;\n    previewMealImage: (input: HTMLInputElement) => void;\n    removeMealImage: () => void;\n    addIngredientToMeal: () => Promise<void>;\n    removeIngredientFromMeal: (index: number) => void;\n    addNewIngredientRow: () => Promise<void>;\n    removeIngredientRow: (button: HTMLButtonElement) => void;\n    updateIngredientFood: (index: number, foodId: string) => Promise<void>;\n    updateIngredientQuantity: (index: number, value: string) => Promise<void>;\n    updateIngredientNutrient: (index: number, nutrient: string, value: string) => void;\n    updateIngredientInstructions: (index: number, instructions: string) => void;\n    updateServingUnitField: (unitId: string, field: 'name' | 'grams' | 'default', value: string | number | boolean) => void;\n    showSection: (sectionId: string) => void;\n  }\n}\n\n// At the top of the file, after imports, add splash screen logic\n// Delay splash screen until after app initialization to ensure logo is available\ndocument.addEventListener('DOMContentLoaded', () => {\n  setTimeout(showSplashScreen, 100);\n});\n\nfunction showSplashScreen() {\n  const splash = document.createElement('div');\n  splash.id = 'splashScreen';\n  splash.style.position = 'fixed';\n  splash.style.top = '0';\n  splash.style.left = '0';\n  splash.style.width = '100vw';\n  splash.style.height = '100vh';\n  splash.style.background = 'linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)';\n  splash.style.display = 'flex';\n  splash.style.flexDirection = 'column';\n  splash.style.justifyContent = 'center';\n  splash.style.alignItems = 'center';\n  splash.style.zIndex = '9999';\n  // Find the logo dynamically by looking for existing logo references in the HTML\n  const existingLogo = document.querySelector('img[src*=\"nutrivalor_logo\"]') as HTMLImageElement;\n  const logoPath = existingLogo ? existingLogo.src : '/assets/nutrivalor_logo.png';\n  \n  splash.innerHTML = `\n    <img src=\"${logoPath}\" alt=\"NutriValor Logo\" style=\"max-width: 320px; width: 40vw; height: auto; margin-bottom: 1rem;\" />\n    <div style=\"font-size: 1.6rem; font-weight: 400; color: #8a99b3; font-family: 'Poppins', sans-serif; font-style: italic;\">\"Value your Nutrition\"</div>\n  `;\n  document.body.appendChild(splash);\n  setTimeout(() => {\n    splash.style.transition = 'opacity 0.5s';\n    splash.style.opacity = '0';\n    setTimeout(() => splash.remove(), 500);\n  }, 2000);\n}\n\n// Initialize the application\nasync function initializeApp(): Promise<void> {\n  // Removed excessive logging for performance\n  \n  try {\n    // Initialize Supabase connection\n    initializeSupabase();\n    \n    // Initialize authentication first (it handles the UI state)\n    await initializeAuth();\n    \n    // Initialize database\n    await initializeDatabase();\n    \n    // Initialize food tracker\n    await initializeFoodTracker();\n    \n    // Initialize weight tracker\n    await initializeWeightTracker();\n    \n    // Initialize macro calculator\n    await initializeMacroCalculator();\n    \n    // Initialize meals\n    await initializeMeals();\n    \n    // Initialize shopping list\n    await initializeShoppingList();\n    \n    // Initialize simple edit system\n    await initializeSimpleEditSystem();\n    \n    // Setup modal event listeners\n    setupModalEventListeners();\n    \n    // Setup profile event listeners\n    setupProfileEventListeners();\n    \n    // Initialize avatar state\n    initializeAvatarState();\n    \n    // Make functions globally available\n    setupGlobalFunctions();\n    \n    // Removed excessive logging for performance\n    \n  } catch (error) {\n    console.error('❌ Error initializing application:', error);\n  }\n}\n\n// Profile management functions\nasync function updateProfile(): Promise<void> {\n  console.log('👤 Updating profile...');\n  \n  try {\n    const profileName = (document.getElementById('profileName') as HTMLInputElement)?.value;\n    const dateOfBirth = (document.getElementById('dateOfBirth') as HTMLInputElement)?.value;\n    const profileAge = (document.getElementById('profileAge') as HTMLInputElement)?.value;\n    const profileGender = (document.getElementById('profileGender') as HTMLSelectElement)?.value;\n    const profileHeight = (document.getElementById('profileHeight') as HTMLInputElement)?.value;\n    const heightUnit = (document.getElementById('heightUnit') as HTMLSelectElement)?.value;\n    const profileIdealWeight = (document.getElementById('profileIdealWeight') as HTMLInputElement)?.value;\n    const weightUnit = (document.getElementById('weightUnit') as HTMLSelectElement)?.value;\n    const profileCountry = (document.getElementById('profileCountry') as HTMLSelectElement)?.value;\n    const avatarPreview = document.getElementById('avatarPreview') as HTMLImageElement;\n    \n    const profileData = {\n      name: profileName,\n      dateOfBirth: dateOfBirth,\n      age: profileAge,\n      gender: profileGender,\n      height: profileHeight,\n      heightUnit: heightUnit,\n      idealWeight: profileIdealWeight,\n      weightUnit: weightUnit,\n      country: profileCountry,\n      avatar: avatarPreview?.src || null\n    };\n    \n    // Save to Supabase\n    const savedProfile = await saveProfileToDatabase(profileData);\n    \n    // Update header display name and avatar if available\n    const userEmailElement = document.getElementById('userEmail');\n    const headerAvatar = document.getElementById('headerAvatar') as HTMLImageElement;\n    const headerAvatarPlaceholder = document.getElementById('headerAvatarPlaceholder');\n    \n    if (userEmailElement && profileName && profileName.trim()) {\n      userEmailElement.textContent = profileName;\n    }\n    \n    // Update header avatar\n    if (headerAvatar && headerAvatarPlaceholder) {\n      if (profileData.avatar) {\n        headerAvatar.src = profileData.avatar;\n        headerAvatar.style.display = 'block';\n        headerAvatarPlaceholder.style.display = 'none';\n      } else {\n        headerAvatar.style.display = 'none';\n        headerAvatarPlaceholder.style.display = 'flex';\n      }\n    }\n    \n    // Show success message\n    showMessage('Profile updated successfully!', 'success');\n    \n    console.log('✅ Profile saved to Supabase:', savedProfile);\n  } catch (error) {\n    console.error('❌ Error saving profile:', error);\n    showMessage('Error saving profile. Please try again.', 'error');\n  }\n}\n\nasync function loadProfile(): Promise<void> {\n  // Removed excessive logging for performance\n  \n  try {\n    const profileData = await loadProfileFromDatabase();\n    if (profileData) {\n      // Populate form fields\n      const profileNameInput = document.getElementById('profileName') as HTMLInputElement;\n      const dateOfBirthInput = document.getElementById('dateOfBirth') as HTMLInputElement;\n      const profileAgeInput = document.getElementById('profileAge') as HTMLInputElement;\n      const profileGenderInput = document.getElementById('profileGender') as HTMLSelectElement;\n      const profileHeightInput = document.getElementById('profileHeight') as HTMLInputElement;\n      const heightUnitInput = document.getElementById('heightUnit') as HTMLSelectElement;\n      const profileIdealWeightInput = document.getElementById('profileIdealWeight') as HTMLInputElement;\n      const weightUnitInput = document.getElementById('weightUnit') as HTMLSelectElement;\n      const profileCountryInput = document.getElementById('profileCountry') as HTMLSelectElement;\n      const avatarPreview = document.getElementById('avatarPreview') as HTMLImageElement;\n      const avatarPlaceholder = document.getElementById('avatarPlaceholder') as HTMLElement;\n      const removeAvatarBtn = document.getElementById('removeAvatarBtn') as HTMLButtonElement;\n      \n      if (profileNameInput) profileNameInput.value = profileData.name || '';\n      if (dateOfBirthInput) dateOfBirthInput.value = profileData.date_of_birth || '';\n      if (profileAgeInput) profileAgeInput.value = profileData.age || '';\n      if (profileGenderInput) profileGenderInput.value = profileData.gender || '';\n      if (profileHeightInput) profileHeightInput.value = profileData.height || '';\n      if (heightUnitInput) heightUnitInput.value = profileData.height_unit || 'cm';\n      if (profileIdealWeightInput) profileIdealWeightInput.value = profileData.ideal_weight || '';\n      if (weightUnitInput) weightUnitInput.value = profileData.weight_unit || 'kg';\n      if (profileCountryInput) profileCountryInput.value = profileData.country || '';\n      \n      // Handle avatar\n      if (profileData.avatar_url && avatarPreview && avatarPlaceholder) {\n        avatarPreview.src = profileData.avatar_url;\n        avatarPreview.style.display = 'block';\n        avatarPlaceholder.style.display = 'none';\n        if (removeAvatarBtn) removeAvatarBtn.style.display = 'inline-flex';\n      }\n      \n      showMessage('Profile loaded successfully!', 'success');\n      // Removed excessive logging for performance\n    } else {\n      showMessage('No saved profile found', 'info');\n    }\n  } catch (error) {\n    console.error('❌ Error loading profile:', error);\n    showMessage('Error loading profile', 'error');\n  }\n}\n\nfunction removeAvatar(): void {\n  const avatarPreview = document.getElementById('avatarPreview') as HTMLImageElement;\n  const avatarPlaceholder = document.getElementById('avatarPlaceholder') as HTMLElement;\n  const removeAvatarBtn = document.getElementById('removeAvatarBtn') as HTMLButtonElement;\n  const avatarInput = document.getElementById('avatarInput') as HTMLInputElement;\n  const headerAvatar = document.getElementById('headerAvatar') as HTMLImageElement;\n  const headerAvatarPlaceholder = document.getElementById('headerAvatarPlaceholder');\n  \n  if (avatarPreview && avatarPlaceholder) {\n    avatarPreview.style.display = 'none';\n    avatarPreview.src = '';\n    avatarPlaceholder.style.display = 'flex';\n    if (removeAvatarBtn) removeAvatarBtn.style.display = 'none';\n    if (avatarInput) avatarInput.value = '';\n  }\n  \n  // Also update header avatar\n  if (headerAvatar && headerAvatarPlaceholder) {\n    headerAvatar.style.display = 'none';\n    headerAvatar.src = '';\n    headerAvatarPlaceholder.style.display = 'flex';\n  }\n  \n  console.log('🗑️ Avatar removed');\n}\n\n// Helper function to show messages\nexport function showMessage(message: string, type: 'success' | 'error' | 'info' = 'info'): void {\n  const toast = document.getElementById('messageToast');\n  if (toast) {\n    toast.textContent = message;\n    toast.className = `message-toast ${type}`;\n    toast.style.display = 'block';\n    \n    setTimeout(() => {\n      toast.style.display = 'none';\n    }, 3000);\n  }\n}\n\n// Setup global functions for onclick handlers\nfunction setupGlobalFunctions(): void {\n  // Modal functions\n  (window as any).showUploadModal = showUploadModal;\n  (window as any).closeUploadModal = closeUploadModal;\n  // Meal modal functions are handled by meals.ts module\n  \n  // Section navigation\n  (window as any).showSection = showSection;\n  \n  // Other functions that might be called from HTML\n  // filterByCategory is handled by food-tracker module\n  (window as any).updateProfile = updateProfile;\n  (window as any).loadProfile = loadProfile;\n  (window as any).removeAvatar = removeAvatar;\n  (window as any).exportData = exportData;\n  (window as any).clearAllData = clearAllData;\n  \n  // Note: Meal functions (filterMealsByCategory, addToMealPlan, etc.) are handled by meals.ts module\n  // Meal reload function for admin\n  (window as any).reloadMeals = reloadMeals;\n  \n  // Shopping list functions\n  (window as any).clearShoppingList = clearShoppingList;\n  \n  // Rich text formatting functions\n  (window as any).formatText = formatText;\n  (window as any).formatEditText = formatEditText;\n  \n  // Meal picture functions\n  (window as any).removeMealPicture = removeMealPicture;\n  (window as any).removeEditMealPicture = removeEditMealPicture;\n  (window as any).setupMealPictureEventListeners = setupMealPictureEventListeners;\n  \n  // CSV Import/Export functions\n  (window as any).exportFoodsToCSV = async () => {\n    try {\n      const { exportFoodsToCSV } = await import('./js/admin');\n      await exportFoodsToCSV();\n    } catch (error) {\n      console.error('❌ Error loading CSV export function:', error);\n      showMessage('Error loading CSV export function', 'error');\n    }\n  };\n  \n  (window as any).importFoodsFromCSV = async () => {\n    try {\n      const { importFoodsFromCSV } = await import('./js/admin');\n      await importFoodsFromCSV();\n    } catch (error) {\n      console.error('❌ Error loading CSV import function:', error);\n      showMessage('Error loading CSV import function', 'error');\n    }\n  };\n\n  // Backup Management functions\n  (window as any).createFoodsBackup = async () => {\n    try {\n      const { createFoodsBackup } = await import('./js/admin');\n      await createFoodsBackup();\n    } catch (error) {\n      console.error('❌ Error loading backup function:', error);\n      showMessage('Error loading backup function', 'error');\n    }\n  };\n  \n  (window as any).restoreFromBackup = async () => {\n    try {\n      const { restoreFromBackup } = await import('./js/admin');\n      await restoreFromBackup();\n    } catch (error) {\n      console.error('❌ Error loading restore function:', error);\n      showMessage('Error loading restore function', 'error');\n    }\n  };\n  \n  // Admin functions that need to be available globally\n  // Note: Commented out - these functions don't exist in current admin.ts\n  // (window as any).updateAllMealsNutrition = async () => {\n  //   try {\n  //     const { updateAllMealsNutrition } = await import('./js/admin');\n  //     await updateAllMealsNutrition();\n  //   } catch (error) {\n  //     console.error('❌ Error loading admin function:', error);\n  //     showMessage('Error loading admin function', 'error');\n  //   }\n  // };\n  \n  // (window as any).updateMealAttributions = async () => {\n  //   try {\n  //     const { updateMealAttributions } = await import('./js/admin');\n  //     await updateMealAttributions();\n  //   } catch (error) {\n  //     console.error('❌ Error loading admin function:', error);\n  //     showMessage('Error loading admin function', 'error');\n  //   }\n  // };\n  \n      // Removed excessive logging for performance\n}\n\n// Modal management functions\nfunction showUploadModal(): void {\n  const modal = document.getElementById('uploadModal');\n  if (modal) {\n    modal.style.display = 'flex';\n    console.log('📤 Upload modal opened');\n  }\n}\n\nfunction closeUploadModal(): void {\n  const modal = document.getElementById('uploadModal');\n  if (modal) {\n    modal.style.display = 'none';\n    console.log('📤 Upload modal closed');\n  }\n}\n\nfunction showMealUploadModal(): void {\n  const modal = document.getElementById('mealUploadModal');\n  if (modal) {\n    modal.style.display = 'flex';\n    console.log('🥗 Meal upload modal opened');\n  }\n}\n\nfunction closeMealUploadModal(): void {\n  const modal = document.getElementById('mealUploadModal');\n  if (modal) {\n    modal.style.display = 'none';\n    console.log('🥗 Meal upload modal closed');\n  }\n}\n\n// Section management\nfunction showSection(sectionId: string): void {\n  // Remove active class from all nav tabs\n  document.querySelectorAll('.nav-tab').forEach(tab => {\n    tab.classList.remove('active');\n  });\n\n  // Hide all content sections\n  document.querySelectorAll('.content-section').forEach(section => {\n    section.classList.remove('active');\n  });\n\n  // Show selected section\n  const targetSection = document.getElementById(sectionId);\n  if (targetSection) {\n    targetSection.classList.add('active');\n  }\n\n  // Activate corresponding nav tab\n  const targetTab = document.querySelector(`[data-section=\"${sectionId}\"]`);\n  if (targetTab) {\n    targetTab.classList.add('active');\n  }\n\n  // Handle specific section actions\n  if (sectionId === 'shopping-list') {\n    // Update shopping list display when switching to it\n    console.log('🔄 Loading shopping list...');\n    try {\n      // Import and call the shopping list loading function\n      import('./js/shopping-list').then(module => {\n        module.loadAndDisplayShoppingList();\n      });\n    } catch (error) {\n      console.error('❌ Error loading shopping list:', error);\n    }\n  } else if (sectionId === 'admin') {\n    // Initialize admin panel when switching to it\n    loadAdminSection();\n  }\n\n  console.log(`📍 Switched to section: ${sectionId}`);\n}\n\nfunction exportData(): void {\n  console.log('💾 Export data');\n  // Implementation will be added\n}\n\nfunction clearAllData(): void {\n  console.log('🗑️ Clear all data');\n  // Implementation will be added\n}\n\n// Note: Meal-related functions are implemented in the meals module\n// No need for placeholder functions here as they're handled by the meals.ts module\n\n// Shopping list functions\nfunction clearShoppingList(): void {\n  console.log('🗑️ Clear shopping list');\n  // Implementation will be added\n}\n\n// Admin section loading\nasync function loadAdminSection(): Promise<void> {\n  try {\n    console.log('👑 Loading admin section...');\n    \n    // Dynamically import and initialize admin module\n    const { initializeAdmin } = await import('./js/admin');\n    \n    await initializeAdmin();\n    \n    console.log('✅ Admin section loaded');\n  } catch (error) {\n    console.warn('⚠️ Admin initialization had errors, continuing with simple edit system:', error);\n  }\n  \n  // Ensure simple edit system is working\n  await initializeSimpleEditSystem();\n}\n\n// Initialize simple edit system to make sure it works regardless of admin.ts issues\nasync function initializeSimpleEditSystem(): Promise<void> {\n  try {\n    console.log('🔧 Ensuring simple edit system is available...');\n    \n    // Add a small delay to ensure all modules are loaded\n    await new Promise(resolve => setTimeout(resolve, 100));\n    \n    console.log('🔍 Checking window.openEditFoodModal:', typeof window.openEditFoodModal);\n    console.log('🔍 Checking window.openEditMealModal:', typeof window.openEditMealModal);\n    \n    // If functions are not available, try to import and attach them manually\n    if (typeof window.openEditFoodModal !== 'function' || typeof window.openEditMealModal !== 'function') {\n      console.log('⚠️ Simple edit functions not available, attempting manual import...');\n      \n      try {\n        const simpleEditModule = await import('./js/simple-edit');\n        \n        // Manually attach functions to window\n        window.openEditFoodModal = simpleEditModule.openEditFoodModal;\n        window.closeEditFoodModal = simpleEditModule.closeEditFoodModal;\n        window.loadFoodForEdit = simpleEditModule.loadFoodForEdit;\n        window.saveEditedFood = simpleEditModule.saveEditedFood;\n        window.deleteEditedFood = simpleEditModule.deleteEditedFood;\n        window.previewFoodImage = simpleEditModule.previewFoodImage;\n        window.removeFoodImage = simpleEditModule.removeFoodImage;\n        window.openEditMealModal = simpleEditModule.openEditMealModal;\n        window.closeEditMealModal = simpleEditModule.closeEditMealModal;\n        window.loadMealForEdit = simpleEditModule.loadMealForEdit;\n        window.saveEditedMeal = simpleEditModule.saveEditedMeal;\n        window.deleteEditedMeal = simpleEditModule.deleteEditedMeal;\n        window.previewMealImage = simpleEditModule.previewMealImage;\n        window.removeMealImage = simpleEditModule.removeMealImage;\n        window.addIngredientToMeal = simpleEditModule.addIngredientToMeal;\n        window.removeIngredientFromMeal = simpleEditModule.removeIngredientFromMeal;\n        window.addNewIngredientRow = simpleEditModule.addNewIngredientRow;\n        window.removeIngredientRow = simpleEditModule.removeIngredientRow;\n        window.updateIngredientFood = simpleEditModule.updateIngredientFood;\n        window.updateIngredientQuantity = simpleEditModule.updateIngredientQuantity;\n        window.updateIngredientNutrient = simpleEditModule.updateIngredientNutrient;\n        window.updateIngredientInstructions = simpleEditModule.updateIngredientInstructions;\n        \n        console.log('✅ Simple edit functions manually attached to window');\n      } catch (importError) {\n        console.error('❌ Failed to import simple-edit module:', importError);\n      }\n    }\n    \n    // Verify functions are now available\n    if (typeof window.openEditFoodModal === 'function' && typeof window.openEditMealModal === 'function') {\n      console.log('✅ Simple edit functions are available');\n      \n      // Set up Edit Food and Edit Meal buttons if they exist\n      const editFoodBtn = document.querySelector('[onclick*=\"openEditFoodModal\"]');\n      const editMealBtn = document.querySelector('[onclick*=\"openEditMealModal\"]');\n      \n      if (editFoodBtn) {\n        console.log('✅ Edit Food button found');\n      } else {\n        console.log('⚠️ Edit Food button not found in DOM');\n      }\n      \n      if (editMealBtn) {\n        console.log('✅ Edit Meal button found');\n      } else {\n        console.log('⚠️ Edit Meal button not found in DOM');\n      }\n      \n    } else {\n      console.error('❌ Simple edit functions still not available after manual import');\n      console.log('Available window functions:', Object.keys(window).filter(key => key.includes('Edit')));\n    }\n    \n  } catch (error) {\n    console.error('❌ Error initializing simple edit system:', error);\n  }\n}\n\n// Setup modal event listeners\nfunction setupModalEventListeners(): void {\n  // Close modals when clicking outside\n  document.addEventListener('click', (e) => {\n    const target = e.target as HTMLElement;\n    if (target.classList.contains('modal')) {\n      const modal = target as HTMLElement;\n      modal.style.display = 'none';\n      modal.classList.remove('visible');\n    }\n  });\n  \n  // Close modals with Escape key\n  document.addEventListener('keydown', (e) => {\n    if (e.key === 'Escape') {\n      closeAllModals();\n    }\n  });\n}\n\nfunction closeModal(modal: HTMLElement): void {\n  modal.style.display = 'none';\n  modal.classList.remove('visible');\n}\n\nfunction closeAllModals(): void {\n  document.querySelectorAll('.modal').forEach(modal => {\n    const modalElement = modal as HTMLElement;\n    modalElement.style.display = 'none';\n    modalElement.classList.remove('visible');\n  });\n}\n\n// Initialize avatar state - show correct button based on avatar existence\nfunction initializeAvatarState(): void {\n  const avatarPreview = document.getElementById('avatarPreview') as HTMLImageElement;\n  const chooseAvatarBtn = document.getElementById('chooseAvatarBtn') as HTMLButtonElement;\n  const changeAvatarBtn = document.getElementById('changeAvatarBtn') as HTMLButtonElement;\n  \n  // Default state: show \"Choose Avatar\", hide \"Change Avatar\"\n  if (chooseAvatarBtn) chooseAvatarBtn.style.display = 'inline-flex';\n  if (changeAvatarBtn) changeAvatarBtn.style.display = 'none';\n  \n  // If there's already an avatar, show \"Change Avatar\" instead\n  if (avatarPreview && avatarPreview.src && avatarPreview.style.display !== 'none') {\n    if (chooseAvatarBtn) chooseAvatarBtn.style.display = 'none';\n    if (changeAvatarBtn) changeAvatarBtn.style.display = 'inline-flex';\n  }\n  \n      // Removed excessive logging for performance\n}\n\n// Setup profile event listeners\nfunction setupProfileEventListeners(): void {\n  // Avatar upload handling\n  const avatarInput = document.getElementById('avatarInput') as HTMLInputElement;\n  if (avatarInput) {\n    avatarInput.addEventListener('change', handleAvatarUpload);\n  }\n  \n  // Date of birth change handling for age calculation\n  const dateOfBirthInput = document.getElementById('dateOfBirth') as HTMLInputElement;\n  if (dateOfBirthInput) {\n    dateOfBirthInput.addEventListener('change', calculateAge);\n  }\n  \n  // Load profile on page load\n  setTimeout(() => {\n    loadProfile();\n  }, 1000);\n  \n      // Removed excessive logging for performance\n}\n\nfunction handleAvatarUpload(event: Event): void {\n  const input = event.target as HTMLInputElement;\n  const file = input.files?.[0];\n  \n  if (file && file.type.startsWith('image/')) {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const avatarPreview = document.getElementById('avatarPreview') as HTMLImageElement;\n      const avatarPlaceholder = document.getElementById('avatarPlaceholder') as HTMLElement;\n      const removeAvatarBtn = document.getElementById('removeAvatarBtn') as HTMLButtonElement;\n      \n      if (avatarPreview && avatarPlaceholder && e.target?.result) {\n        avatarPreview.src = e.target.result as string;\n        avatarPreview.style.display = 'block';\n        avatarPlaceholder.style.display = 'none';\n        if (removeAvatarBtn) removeAvatarBtn.style.display = 'block';\n      }\n    };\n    reader.readAsDataURL(file);\n  } else {\n    showMessage('Please select a valid image file', 'error');\n  }\n}\n\nfunction calculateAge(): void {\n  const dateOfBirthInput = document.getElementById('dateOfBirth') as HTMLInputElement;\n  const profileAgeInput = document.getElementById('profileAge') as HTMLInputElement;\n  \n  if (dateOfBirthInput && profileAgeInput && dateOfBirthInput.value) {\n    const birthDate = new Date(dateOfBirthInput.value);\n    const today = new Date();\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDiff = today.getMonth() - birthDate.getMonth();\n    \n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n      age--;\n    }\n    \n    profileAgeInput.value = age.toString();\n  }\n}\n\n// Rich text formatting functions for cooking instructions\nfunction formatText(command: string): void {\n  const editor = document.getElementById('cookingInstructions');\n  const hiddenInput = document.getElementById('cookingInstructionsHidden') as HTMLInputElement;\n  \n  if (editor) {\n    editor.focus();\n    document.execCommand(command, false);\n    \n    // Update hidden input\n    if (hiddenInput) {\n      hiddenInput.value = editor.innerHTML;\n    }\n  }\n}\n\nfunction formatEditText(command: string): void {\n  const editor = document.getElementById('editCookingInstructions');\n  const hiddenInput = document.getElementById('editCookingInstructionsHidden') as HTMLInputElement;\n  \n  if (editor) {\n    editor.focus();\n    document.execCommand(command, false);\n    \n    // Update hidden input\n    if (hiddenInput) {\n      hiddenInput.value = editor.innerHTML;\n    }\n  }\n}\n\n// Setup rich text editor event listeners\nfunction setupRichTextEditors(): void {\n  // Main cooking instructions editor\n  const cookingInstructions = document.getElementById('cookingInstructions');\n  const cookingInstructionsHidden = document.getElementById('cookingInstructionsHidden') as HTMLInputElement;\n  \n  if (cookingInstructions && cookingInstructionsHidden) {\n    cookingInstructions.addEventListener('input', () => {\n      cookingInstructionsHidden.value = cookingInstructions.innerHTML;\n    });\n    \n    cookingInstructions.addEventListener('paste', (e) => {\n      e.preventDefault();\n      const text = (e.clipboardData || (window as any).clipboardData).getData('text/plain');\n      document.execCommand('insertText', false, text);\n    });\n  }\n  \n  // Edit cooking instructions editor\n  const editCookingInstructions = document.getElementById('editCookingInstructions');\n  const editCookingInstructionsHidden = document.getElementById('editCookingInstructionsHidden') as HTMLInputElement;\n  \n  if (editCookingInstructions && editCookingInstructionsHidden) {\n    editCookingInstructions.addEventListener('input', () => {\n      editCookingInstructionsHidden.value = editCookingInstructions.innerHTML;\n    });\n    \n    editCookingInstructions.addEventListener('paste', (e) => {\n      e.preventDefault();\n      const text = (e.clipboardData || (window as any).clipboardData).getData('text/plain');\n      document.execCommand('insertText', false, text);\n    });\n  }\n}\n\n// Meal picture upload functions\nfunction setupMealPictureEventListeners(): void {\n  // Main meal picture upload (only this one exists now)\n  const mealPictureFile = document.getElementById('mealPictureFile') as HTMLInputElement;\n  if (mealPictureFile) {\n    mealPictureFile.addEventListener('change', handleMealPictureUpload);\n  }\n  \n  // Note: Edit meal picture functionality moved to simple-edit.ts system\n}\n\nfunction handleMealPictureUpload(event: Event): void {\n  console.log('🖼️ Main meal picture upload triggered');\n  const input = event.target as HTMLInputElement;\n  const file = input.files?.[0];\n  \n  console.log('📁 Selected file:', file?.name, file?.type);\n  \n  if (file && file.type.startsWith('image/')) {\n    console.log('✅ Valid image file detected');\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      console.log('📖 File read complete');\n      const preview = document.getElementById('mealPicturePreview') as HTMLImageElement;\n      const placeholder = document.getElementById('mealPicturePlaceholder') as HTMLElement;\n      const removeBtn = document.getElementById('removeMealPictureBtn') as HTMLButtonElement;\n      const hiddenInput = document.getElementById('mealPicture') as HTMLInputElement;\n      \n      console.log('🔍 Elements found:', {\n        preview: !!preview,\n        placeholder: !!placeholder,\n        removeBtn: !!removeBtn,\n        hiddenInput: !!hiddenInput\n      });\n      \n      if (preview && placeholder && e.target?.result) {\n        preview.src = e.target.result as string;\n        preview.style.display = 'block';\n        placeholder.style.display = 'none';\n        if (removeBtn) removeBtn.style.display = 'block';\n        if (hiddenInput) hiddenInput.value = e.target.result as string;\n        console.log('✅ Image preview updated successfully');\n      } else {\n        console.error('❌ Missing required elements for image preview');\n      }\n    };\n    reader.readAsDataURL(file);\n  } else {\n    console.error('❌ Invalid file type:', file?.type);\n    showMessage('Please select a valid image file', 'error');\n  }\n}\n\nfunction handleEditMealPictureUpload(event: Event): void {\n  const input = event.target as HTMLInputElement;\n  const file = input.files?.[0];\n  \n  if (file && file.type.startsWith('image/')) {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const preview = document.getElementById('editMealPicturePreview') as HTMLImageElement;\n      const placeholder = document.getElementById('editMealPicturePlaceholder') as HTMLElement;\n      const removeBtn = document.getElementById('removeEditMealPictureBtn') as HTMLButtonElement;\n      const hiddenInput = document.getElementById('editMealPicture') as HTMLInputElement;\n      \n      if (preview && placeholder && e.target?.result) {\n        preview.src = e.target.result as string;\n        preview.style.display = 'block';\n        placeholder.style.display = 'none';\n        if (removeBtn) removeBtn.style.display = 'block';\n        if (hiddenInput) hiddenInput.value = e.target.result as string;\n      }\n    };\n    reader.readAsDataURL(file);\n  } else {\n    showMessage('Please select a valid image file', 'error');\n  }\n}\n\nfunction removeMealPicture(): void {\n  const preview = document.getElementById('mealPicturePreview') as HTMLImageElement;\n  const placeholder = document.getElementById('mealPicturePlaceholder') as HTMLElement;\n  const removeBtn = document.getElementById('removeMealPictureBtn') as HTMLButtonElement;\n  const hiddenInput = document.getElementById('mealPicture') as HTMLInputElement;\n  const fileInput = document.getElementById('mealPictureFile') as HTMLInputElement;\n  \n  if (preview) preview.style.display = 'none';\n  if (placeholder) placeholder.style.display = 'block';\n  if (removeBtn) removeBtn.style.display = 'none';\n  if (hiddenInput) hiddenInput.value = '';\n  if (fileInput) fileInput.value = '';\n}\n\nfunction removeEditMealPicture(): void {\n  const preview = document.getElementById('editMealPicturePreview') as HTMLImageElement;\n  const placeholder = document.getElementById('editMealPicturePlaceholder') as HTMLElement;\n  const removeBtn = document.getElementById('removeEditMealPictureBtn') as HTMLButtonElement;\n  const hiddenInput = document.getElementById('editMealPicture') as HTMLInputElement;\n  const fileInput = document.getElementById('editMealPictureFile') as HTMLInputElement;\n  \n  if (preview) preview.style.display = 'none';\n  if (placeholder) placeholder.style.display = 'block';\n  if (removeBtn) removeBtn.style.display = 'none';\n  if (hiddenInput) hiddenInput.value = '';\n  if (fileInput) fileInput.value = '';\n}\n\n// Initialize immediately since this is a module\ninitializeApp();\n\n// Setup rich text editors and meal picture uploads after a delay to ensure admin content is loaded\nsetTimeout(() => {\n  setupRichTextEditors();\n  setupMealPictureEventListeners();\n}, 2000);\n\n// Also try to set up meal picture listeners when admin section is clicked\nconst adminNavBtn = document.querySelector('[onclick=\"showSection(\\'admin\\')\"]');\nif (adminNavBtn) {\n  adminNavBtn.addEventListener('click', () => {\n    setTimeout(() => {\n      setupMealPictureEventListeners();\n    }, 500);\n  });\n}\n\nwindow.showSection = showSection; "],"file":"assets/main-M_9bQhuz.js"}